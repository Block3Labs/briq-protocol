{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "briq_1",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "briq_3",
                    "offset": 1,
                    "type": "felt"
                },
                {
                    "name": "briq_4",
                    "offset": 2,
                    "type": "felt"
                },
                {
                    "name": "briq_5",
                    "offset": 3,
                    "type": "felt"
                },
                {
                    "name": "briq_6",
                    "offset": 4,
                    "type": "felt"
                },
                {
                    "name": "shape_class_hash",
                    "offset": 5,
                    "type": "felt"
                }
            ],
            "name": "BoxData",
            "size": 6,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBriqAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBriqAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBookletAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBookletAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_owner",
                    "type": "felt"
                },
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_approved",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                },
                {
                    "name": "_value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_ids_len",
                    "type": "felt"
                },
                {
                    "name": "_ids",
                    "type": "Uint256*"
                },
                {
                    "name": "_values_len",
                    "type": "felt"
                },
                {
                    "name": "_values",
                    "type": "Uint256*"
                }
            ],
            "keys": [],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                },
                {
                    "name": "number",
                    "type": "felt"
                }
            ],
            "name": "mint_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "unbox_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_value_len",
                    "type": "felt"
                },
                {
                    "name": "_value",
                    "type": "felt*"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "get_box_data",
            "outputs": [
                {
                    "name": "data",
                    "type": "BoxData"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "get_box_nb",
            "outputs": [
                {
                    "name": "nb",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "tokenURI_",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_value_len",
                    "type": "felt"
                },
                {
                    "name": "_value",
                    "type": "felt*"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "approved_address",
                    "type": "felt"
                },
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "on_behalf_of",
                    "type": "felt"
                },
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll_",
            "outputs": [
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "balanceOf_",
            "outputs": [
                {
                    "name": "balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owners_len",
                    "type": "felt"
                },
                {
                    "name": "owners",
                    "type": "felt*"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "felt*"
                }
            ],
            "name": "balanceOfBatch_",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                },
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                }
            ],
            "name": "safeTransferFrom_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "felt"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "account",
                    "type": "felt"
                },
                {
                    "name": "id",
                    "type": "Uint256"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "accounts_len",
                    "type": "felt"
                },
                {
                    "name": "accounts",
                    "type": "felt*"
                },
                {
                    "name": "ids_len",
                    "type": "felt"
                },
                {
                    "name": "ids",
                    "type": "Uint256*"
                }
            ],
            "name": "balanceOfBatch",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "Uint256*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "operator",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "account",
                    "type": "felt"
                },
                {
                    "name": "operator",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "name": "isApproved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "id",
                    "type": "Uint256"
                },
                {
                    "name": "amount",
                    "type": "Uint256"
                },
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "id",
                    "type": "Uint256"
                }
            ],
            "name": "uri",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": 1484,
                "selector": "0x1b5d966c47351d79022336a404619bf402017905cdc40bd13de7df2f455645"
            },
            {
                "offset": 524,
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": 589,
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": 493,
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": 653,
                "selector": "0xb06355e8c165a06a8974c58013b5f4a0a5a14de7144d8df78900b466c3def3"
            },
            {
                "offset": 1594,
                "selector": "0xc6d59be2ce3c50e3e324a46f03ec92dc36b4e7fe1c87d00f8dcceb2af5872f"
            },
            {
                "offset": 678,
                "selector": "0xcb23989aa3fbbdcb496dbd25bc15d8af5889a5ab811324ff498908cc4e961d"
            },
            {
                "offset": 2368,
                "selector": "0x112844c6769836ade5cb7dc37b93a10fc30ddc40322ef9e7e964d0a716ba1e3"
            },
            {
                "offset": 2607,
                "selector": "0x116d888b0a9ad3998fcf1cdb2711375c69ac1847e806a480e3585c3da18eac3"
            },
            {
                "offset": 2282,
                "selector": "0x12975dbd1bf8f80a3be19e5a30f03a9edf464878d7bada5dae7ef00481a9384"
            },
            {
                "offset": 2214,
                "selector": "0x13d9296e8ee23d9a89be9be7f4fee0f8462a32e986d7b71dc97deb58eff209a"
            },
            {
                "offset": 2245,
                "selector": "0x176e2c487053e7ed6866780b059c976db79d819266074c8769e1bf22cbdbf82"
            },
            {
                "offset": 2742,
                "selector": "0x19d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444"
            },
            {
                "offset": 555,
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": 2319,
                "selector": "0x1e6d3cbfeefef1d609db7db9516768ba077a394d54e97c2fcc92f0e18117083"
            },
            {
                "offset": 2696,
                "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
            },
            {
                "offset": 2499,
                "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
            },
            {
                "offset": 2166,
                "selector": "0x2ce0b14a8414c3e59d14c8807b0bddd2be0c61f600af40180344015a97bb17b"
            },
            {
                "offset": 2659,
                "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
            },
            {
                "offset": 767,
                "selector": "0x2d9374f162064a8547a53095c873b81dec7e5f0fd58842008b029ff7f19961f"
            },
            {
                "offset": 2545,
                "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
            },
            {
                "offset": 2805,
                "selector": "0x2ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1"
            },
            {
                "offset": 2422,
                "selector": "0x31bbc41a2f2a54c5a3f04ab6f38b7b8ed0d165b15f3c5a85165254fa7eab4f3"
            },
            {
                "offset": 2125,
                "selector": "0x3491b93509d0195be8ea70757bf5b064b83c0bcd8ceb8e16f9a6a1baa53ce61"
            },
            {
                "offset": 742,
                "selector": "0x3fefc7d468fbcef669bae55e56d71a720729e17ff61166370bd8e401072ce98"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 395,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 30,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 394,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 435,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 34,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 432,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance"
                ],
                "end_pc": 1052,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 89,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1049,
                "value": "Mint would overflow balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance"
                ],
                "end_pc": 1073,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 90,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1068,
                "value": "Insufficient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1227,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1224,
                "value": "ERC721: either the caller or operator is the zero address"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1231,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 3
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1227,
                "value": "ERC721: approve to caller"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1237,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 8
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1231,
                "value": "ERC721: approved is not a Cairo boolean"
            },
            {
                "accessible_scopes": [
                    "contracts.box_nft.unboxing",
                    "contracts.box_nft.unboxing",
                    "contracts.box_nft.unboxing.unbox_"
                ],
                "end_pc": 1564,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 174,
                        "offset": 69
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1558,
                "value": "Insufficient balance"
            },
            {
                "accessible_scopes": [
                    "cairopen.math.array",
                    "cairopen.math.array.invert_arr"
                ],
                "end_pc": 1733,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 184,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1727,
                "value": "invert_arr: size must be greather or equal to 1"
            },
            {
                "accessible_scopes": [
                    "cairopen.string.libs.conversion",
                    "cairopen.string.libs.conversion._loop_felt_to_inverted_string"
                ],
                "end_pc": 1855,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 196,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1849,
                "value": "felt_to_string: exceeding max String length 2^15"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.11.0.1",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x6",
            "0x400780017fff7ff9",
            "0x0",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7c",
            "0x48317fec80007ff9",
            "0x48127ffe7fff8000",
            "0x48487ffb80007ffe",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff70",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6a",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeea",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee4",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff14",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed2",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecc",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefb",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedc",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed6",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebe",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb8",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea3",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe96",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe63",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x3b04ac990d5707170db3baee01793ea0c63ddf2301338cf3915ae5cca436636",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482480017ffc8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff90",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa4",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe25",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff82",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe03",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff52",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f3f3753200ae7bbd5c0730d72faae48b297e22f8b7782ab7098a368772ab7c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc2",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff23",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1aed62b73e494b68afc0d77570620a0145532d4f1cf10a3cf813ee9d3ce90c7",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd69",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd63",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeca",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd07",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffced",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5a",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd49",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6e",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x20680017fff7fff",
            "0x6",
            "0x400780017fff7ffd",
            "0x8000000000000110000000000000000",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x484680017ffd8000",
            "0x100000000000000000000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf5",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc77",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480280007ffc8000",
            "0x480280017ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb2",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffd7fff8000",
            "0x480280007ffc8000",
            "0x480280017ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x48307fff7ffe8000",
            "0x400280007ffd7fff",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc43",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480280007ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9d",
            "0x400280017ffd7ffe",
            "0x400280007ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1b7e24dbc7e9f5269168b3096497c70e05d3998167db351e2ceab75a8ae9f06",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1c",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc19",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcff",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc30",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc28",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca1",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe28000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8c",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007fe0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400b7ffc7fff7ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbc",
            "0x40137fff7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x7",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480280007ffb8000",
            "0x480280007ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffb8000",
            "0x1",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8b",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x6ad9ed7b6318f1bcffefe19df9aeb40d22c36bed567e1925a5ccde0536edd",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb85",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb3",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x2dfea59337e4d10ab6fcff512bb04538a8c9a0d63079dd6e4c05672eddf00d2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb72",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6f",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc55",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb86",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7e",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb69",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7e",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7f",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480680017fff8000",
            "0x0",
            "0x40527ffe7ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x48127ffe7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0f",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x182d859c0807ba9db63baf8b9d9fdbfeb885d820be6e206b9dab626d995c433",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb09",
            "0x40137fff7fff8001",
            "0x4003800080017ff7",
            "0x4003800180017ff8",
            "0x4003800280017ff9",
            "0x4003800380017ffa",
            "0x4003800480017ffb",
            "0x4003800580017ffc",
            "0x4003800680017ffd",
            "0x4826800180018000",
            "0x7",
            "0x480a7ff57fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb33",
            "0x480a7ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe63",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fd77fff8000",
            "0x48127fd77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127ffe7fff8000",
            "0x48127fdc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffafc",
            "0x400680017fff7fff",
            "0x3ef5b02bcc5d30f3f0d35d55f365e6388fe9501eca216cb1596940bf41083e2",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb18",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb15",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb12",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0f",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0c",
            "0x48127fef7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee3",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecb",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffadb",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x208b7fff7fff7ffe",
            "0x1b2",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x4e4",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0xa4c",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x1af",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x4de",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x8ef",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x1af",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x506",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x958",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x3c",
            "0x0",
            "0x0",
            "0x0",
            "0x0",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x3666f9ef3c2848b484726482c5c18d4c95dab997a9b31b10b194337f9922682",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc22",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6d",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7d",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
            "0x480680017fff8000",
            "0x594",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5b",
            "0x480680017fff8000",
            "0x59e",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd57",
            "0x48127ff17fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf9",
            "0x480a7ffc7fff8000",
            "0x48307fdd80007fe4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac8",
            "0x48127fc27fff8000",
            "0x48127fc27fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa1e",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1b5d966c47351d79022336a404619bf402017905cdc40bd13de7df2f455645",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa29",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa09",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x25b09dda48c8b20c9ca39a74e140308e9266619a02f3f41415e45eb4fbc44df",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa14",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde2",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaa1",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x482480017fe08000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde2",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa00",
            "0x40137fff7fff7ffc",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedc",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x17",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480680017fff8000",
            "0x594",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc1",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc81",
            "0x484680017ffd8000",
            "0x1000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48307fff7fe18000",
            "0x48127ff97fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x480080007ffa8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7d",
            "0x480680017fff8000",
            "0x562",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcaa",
            "0x40137fff7fff8000",
            "0x48127ff77fff8000",
            "0x48127fd87fff8000",
            "0x48127ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf7",
            "0x40137fff7fff8001",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x21",
            "0x480a7ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x17",
            "0x480a7ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0xd",
            "0x480a7ffc7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x5",
            "0x480680017fff8000",
            "0x3",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x48327fff7ffa8000",
            "0x48287ffd7fff8000",
            "0x480080007fff8000",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x48327fff7ffa8000",
            "0x48287ffd7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007ffa8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff40",
            "0x48127ffe7fff8000",
            "0x480a7ff67fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff993",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff93c",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x13",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x4",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffa8000",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ff98000",
            "0x480080007fff8000",
            "0x400080007ffa7fff",
            "0x20780017fff7ffd",
            "0x4",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8e1",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0xe",
            "0x40137fff7fff8001",
            "0x40137ffe7fff8002",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff919",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff984",
            "0x482a7ffd7ffc8000",
            "0x48287ffa7ffe8000",
            "0x400080007ffe7fff",
            "0x20680017fff7ffc",
            "0x7",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe9",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x7",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fda7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x30",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba1",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff88c",
            "0x40137fff7fff8001",
            "0x4802800080008000",
            "0x4002800080017fff",
            "0x4802800180008000",
            "0x4002800180017fff",
            "0x4802800280008000",
            "0x4002800280017fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff883",
            "0x40137fff7fff8002",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x56bc75e2d63100000",
            "0x480680017fff8000",
            "0x100000000000000000000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94b",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x3",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x21",
            "0x48327fff80018000",
            "0x4802800380008000",
            "0x400080007ffe7fff",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x482480017ffa8000",
            "0x1",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x8",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x14",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x30",
            "0x400280007ffd7fff",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x20780017fff7ff9",
            "0x7",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480a7ff87fff8000",
            "0x480080007ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa0",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x40137ffd7fff8002",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480080007fff8000",
            "0x20680017fff7fff",
            "0x13",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0xf",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x48507ffc7ffa8000",
            "0x482a7ffa7ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x40137ffc7fff8003",
            "0x40137ffd7fff8004",
            "0x40137ffe7fff8005",
            "0x482a7ffa7ffc8000",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48307fff7ffa8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff80d",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48327fff7ffa8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482880007ffb8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7eb",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x562",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf8",
            "0x480680017fff8000",
            "0x5",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48507fff7ffe8000",
            "0x480a80007fff8000",
            "0x48307ffe7ffb8000",
            "0x480680017fff8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7e4",
            "0x480680017fff8000",
            "0x594",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae9",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x4826800180008000",
            "0x5",
            "0x48307ffe7ffd8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d7",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x4802800080008000",
            "0x4802800180008000",
            "0x4802800280008000",
            "0x4802800380008000",
            "0x4802800480008000",
            "0x4802800580008000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ff7",
            "0x4003800180007ff8",
            "0x4003800280007ff9",
            "0x4003800380007ffa",
            "0x4003800480007ffb",
            "0x4003800580007ffc",
            "0x4826800180008000",
            "0x6",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x48127fef7fff8000",
            "0x48127fef7fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x594",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab1",
            "0x480680017fff8000",
            "0x59e",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaad",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48307ff580007ffc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x68747470733a2f2f6170692e627269712e636f6e737472756374696f6e",
            "0x2f76312f7572692f626f782f",
            "0x737461726b6e65742d6d61696e6e65742f",
            "0x2e6a736f6e",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x886",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff76a",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbfb",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc0b",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb38",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb19",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6d0",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff48000",
            "0x482480017ff38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc8",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe6",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280047ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x5",
            "0x480280047ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x482680017ffd8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffff264985db",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffff176cbe5",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98d",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1d",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff997",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97e",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ffb8000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x484680017ffb8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e1",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff38000",
            "0x482480017ff28000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc8",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x48127fbd7fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb8",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280067ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x7",
            "0x480280067ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x480280057ffd8000",
            "0x480280067ffd8000",
            "0x482680017ffd8000",
            "0x7",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff88b",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdac",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff51b",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "32": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
                        }
                    }
                }
            ],
            "40": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 3
                        }
                    }
                }
            ],
            "48": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 4
                        }
                    }
                }
            ],
            "57": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 5
                        }
                    }
                }
            ],
            "67": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 6
                        }
                    }
                }
            ],
            "70": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 7
                        }
                    }
                }
            ],
            "75": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_equal"
                    ],
                    "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_equal.a": 8,
                            "starkware.cairo.common.math.assert_not_equal.b": 9
                        }
                    }
                }
            ],
            "81": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 10
                        }
                    }
                }
            ],
            "99": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 13,
                            "starkware.cairo.common.math.assert_250_bit.low": 12,
                            "starkware.cairo.common.math.assert_250_bit.value": 11
                        }
                    }
                }
            ],
            "112": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 16,
                            "starkware.cairo.common.math.split_felt.low": 15,
                            "starkware.cairo.common.math.split_felt.value": 14
                        }
                    }
                }
            ],
            "141": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 17,
                            "starkware.cairo.common.math.assert_le_felt.b": 18,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 19
                        }
                    }
                }
            ],
            "151": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "165": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "177": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "186": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 20,
                            "starkware.cairo.common.math.assert_lt_felt.b": 21
                        }
                    }
                }
            ],
            "197": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 23,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 25,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 24,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 22
                        }
                    }
                }
            ],
            "214": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "assert ids.value == 0, 'split_int(): value is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.value": 26
                        }
                    }
                }
            ],
            "218": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "memory[ids.output] = res = (int(ids.value) % PRIME) % ids.base\nassert res < ids.bound, f'split_int(): Limb {res} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.base": 27,
                            "starkware.cairo.common.math.split_int.bound": 28,
                            "starkware.cairo.common.math.split_int.output": 29,
                            "starkware.cairo.common.math.split_int.value": 26
                        }
                    }
                }
            ],
            "239": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 30,
                            "starkware.starknet.common.storage.normalize_address.is_small": 31
                        }
                    }
                }
            ],
            "257": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 30,
                            "starkware.starknet.common.storage.normalize_address.is_250": 32
                        }
                    }
                }
            ],
            "484": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 37,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "515": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 40,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "564": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 45,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "598": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 49,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "644": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_briq",
                        "contracts.ecosystem.to_briq",
                        "__wrappers__",
                        "__wrappers__.getBriqAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 54,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "687": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_briq",
                        "contracts.ecosystem.to_briq",
                        "__wrappers__",
                        "__wrappers__.setBriqAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 59,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "733": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_booklet",
                        "contracts.ecosystem.to_booklet",
                        "__wrappers__",
                        "__wrappers__.getBookletAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 64,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "776": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_booklet",
                        "contracts.ecosystem.to_booklet",
                        "__wrappers__",
                        "__wrappers__.setBookletAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 69,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "792": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 71,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "802": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 71,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "830": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 73,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 34,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 35
                        }
                    }
                }
            ],
            "1495": [
                {
                    "accessible_scopes": [
                        "contracts.box_nft.minting",
                        "contracts.box_nft.minting",
                        "__wrappers__",
                        "__wrappers__.mint_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 171,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1604": [
                {
                    "accessible_scopes": [
                        "contracts.box_nft.unboxing",
                        "contracts.box_nft.unboxing",
                        "__wrappers__",
                        "__wrappers__.unbox_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 177,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2111": [
                {
                    "accessible_scopes": [
                        "contracts.box_nft.token_uri",
                        "contracts.box_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.get_box_data_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 215,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2157": [
                {
                    "accessible_scopes": [
                        "contracts.box_nft.token_uri",
                        "contracts.box_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.get_box_nb_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 219,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2195": [
                {
                    "accessible_scopes": [
                        "contracts.box_nft.token_uri",
                        "contracts.box_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.tokenURI__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 227,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2255": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 235,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2273": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 237,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2310": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.balanceOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 240,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2349": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.balanceOfBatch__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 244,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2444": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.safeTransferFrom_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 250,
                            "offset": 509
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2490": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.supportsInterface_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 252,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2535": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.balanceOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 256,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2585": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.balanceOfBatch_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 262,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2669": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 270,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2687": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 272,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2766": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.safeTransferFrom"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 275,
                            "offset": 644
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2786": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.uri_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 278,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "__main__._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "__main__.balanceOf": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOf",
                "type": "alias"
            },
            "__main__.balanceOfBatch": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch",
                "type": "alias"
            },
            "__main__.balanceOfBatch_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "__main__.balanceOf_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getBookletAddress_": {
                "destination": "contracts.ecosystem.to_booklet.getBookletAddress_",
                "type": "alias"
            },
            "__main__.getBriqAddress_": {
                "destination": "contracts.ecosystem.to_briq.getBriqAddress_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.get_box_data": {
                "destination": "contracts.box_nft.token_uri.get_box_data",
                "type": "alias"
            },
            "__main__.get_box_nb": {
                "destination": "contracts.box_nft.token_uri.get_box_nb",
                "type": "alias"
            },
            "__main__.isApprovedForAll": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll",
                "type": "alias"
            },
            "__main__.isApprovedForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "__main__.mint_": {
                "destination": "contracts.box_nft.minting.mint_",
                "type": "alias"
            },
            "__main__.safeTransferFrom": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom",
                "type": "alias"
            },
            "__main__.safeTransferFrom_": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "__main__.setApprovalForAll": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll",
                "type": "alias"
            },
            "__main__.setApprovalForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "__main__.setBookletAddress_": {
                "destination": "contracts.ecosystem.to_booklet.setBookletAddress_",
                "type": "alias"
            },
            "__main__.setBriqAddress_": {
                "destination": "contracts.ecosystem.to_briq.setBriqAddress_",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.supportsInterface": {
                "destination": "contracts.library_erc1155.IERC1155.supportsInterface",
                "type": "alias"
            },
            "__main__.tokenURI_": {
                "destination": "contracts.box_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__main__.unbox_": {
                "destination": "contracts.box_nft.unboxing.unbox_",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__main__.uri": {
                "decorators": [
                    "view"
                ],
                "pc": 2776,
                "type": "function"
            },
            "__main__.uri.Args": {
                "full_name": "__main__.uri.Args",
                "members": {
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.uri.ImplicitArgs": {
                "full_name": "__main__.uri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.uri.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "__main__.uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 2545,
                "type": "function"
            },
            "__wrappers__.balanceOf.Args": {
                "full_name": "__wrappers__.balanceOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOf",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch": {
                "decorators": [
                    "view"
                ],
                "pc": 2607,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch.Args": {
                "full_name": "__wrappers__.balanceOfBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceOfBatch.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch_": {
                "decorators": [
                    "view"
                ],
                "pc": 2368,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch_.Args": {
                "full_name": "__wrappers__.balanceOfBatch_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceOfBatch_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch__encode_return": {
                "decorators": [],
                "pc": 2349,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch__encode_return.Args": {
                "full_name": "__wrappers__.balanceOfBatch__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfBatch__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch_encode_return": {
                "decorators": [],
                "pc": 2585,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch_encode_return.Args": {
                "full_name": "__wrappers__.balanceOfBatch_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: starkware.cairo.common.uint256.Uint256*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfBatch_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 2319,
                "type": "function"
            },
            "__wrappers__.balanceOf_.Args": {
                "full_name": "__wrappers__.balanceOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "__wrappers__.balanceOf__encode_return": {
                "decorators": [],
                "pc": 2310,
                "type": "function"
            },
            "__wrappers__.balanceOf__encode_return.Args": {
                "full_name": "__wrappers__.balanceOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf_encode_return": {
                "decorators": [],
                "pc": 2535,
                "type": "function"
            },
            "__wrappers__.balanceOf_encode_return.Args": {
                "full_name": "__wrappers__.balanceOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 493,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 484,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBookletAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 742,
                "type": "function"
            },
            "__wrappers__.getBookletAddress_.Args": {
                "full_name": "__wrappers__.getBookletAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBookletAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBookletAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBookletAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBookletAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBookletAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_booklet.getBookletAddress_",
                "type": "alias"
            },
            "__wrappers__.getBookletAddress__encode_return": {
                "decorators": [],
                "pc": 733,
                "type": "function"
            },
            "__wrappers__.getBookletAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBookletAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBookletAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBookletAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBookletAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBookletAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBookletAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBriqAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 653,
                "type": "function"
            },
            "__wrappers__.getBriqAddress_.Args": {
                "full_name": "__wrappers__.getBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBriqAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBriqAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_briq.getBriqAddress_",
                "type": "alias"
            },
            "__wrappers__.getBriqAddress__encode_return": {
                "decorators": [],
                "pc": 644,
                "type": "function"
            },
            "__wrappers__.getBriqAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBriqAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBriqAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBriqAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBriqAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 524,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 515,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_box_data": {
                "decorators": [
                    "view"
                ],
                "pc": 2125,
                "type": "function"
            },
            "__wrappers__.get_box_data.Args": {
                "full_name": "__wrappers__.get_box_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_data.ImplicitArgs": {
                "full_name": "__wrappers__.get_box_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_data.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_box_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.get_box_data.__wrapped_func": {
                "destination": "contracts.box_nft.token_uri.get_box_data",
                "type": "alias"
            },
            "__wrappers__.get_box_data_encode_return": {
                "decorators": [],
                "pc": 2111,
                "type": "function"
            },
            "__wrappers__.get_box_data_encode_return.Args": {
                "full_name": "__wrappers__.get_box_data_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "ret_value": {
                        "cairo_type": "(data: contracts.box_nft.token_uri.BoxData)",
                        "offset": 0
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "__wrappers__.get_box_data_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_box_data_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_data_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_box_data_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.get_box_data_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_box_nb": {
                "decorators": [
                    "view"
                ],
                "pc": 2166,
                "type": "function"
            },
            "__wrappers__.get_box_nb.Args": {
                "full_name": "__wrappers__.get_box_nb.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_nb.ImplicitArgs": {
                "full_name": "__wrappers__.get_box_nb.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_nb.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_box_nb.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.get_box_nb.__wrapped_func": {
                "destination": "contracts.box_nft.token_uri.get_box_nb",
                "type": "alias"
            },
            "__wrappers__.get_box_nb_encode_return": {
                "decorators": [],
                "pc": 2157,
                "type": "function"
            },
            "__wrappers__.get_box_nb_encode_return.Args": {
                "full_name": "__wrappers__.get_box_nb_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(nb: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.get_box_nb_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_box_nb_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_box_nb_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_box_nb_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.get_box_nb_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 2696,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll.Args": {
                "full_name": "__wrappers__.isApprovedForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 2282,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_.Args": {
                "full_name": "__wrappers__.isApprovedForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll__encode_return": {
                "decorators": [],
                "pc": 2273,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll__encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(is_approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_encode_return": {
                "decorators": [],
                "pc": 2687,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(isApproved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mint_": {
                "decorators": [
                    "external"
                ],
                "pc": 1484,
                "type": "function"
            },
            "__wrappers__.mint_.Args": {
                "full_name": "__wrappers__.mint_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mint_.ImplicitArgs": {
                "full_name": "__wrappers__.mint_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mint_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mint_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mint_.__wrapped_func": {
                "destination": "contracts.box_nft.minting.mint_",
                "type": "alias"
            },
            "__wrappers__.mint__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 2742,
                "type": "function"
            },
            "__wrappers__.safeTransferFrom.Args": {
                "full_name": "__wrappers__.safeTransferFrom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.ImplicitArgs": {
                "full_name": "__wrappers__.safeTransferFrom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.safeTransferFrom.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2422,
                "type": "function"
            },
            "__wrappers__.safeTransferFrom_.Args": {
                "full_name": "__wrappers__.safeTransferFrom_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom_.ImplicitArgs": {
                "full_name": "__wrappers__.safeTransferFrom_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.safeTransferFrom_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 2659,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll.Args": {
                "full_name": "__wrappers__.setApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 2245,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll_.Args": {
                "full_name": "__wrappers__.setApprovalForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBookletAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 767,
                "type": "function"
            },
            "__wrappers__.setBookletAddress_.Args": {
                "full_name": "__wrappers__.setBookletAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBookletAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBookletAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBookletAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBookletAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBookletAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_booklet.setBookletAddress_",
                "type": "alias"
            },
            "__wrappers__.setBookletAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBriqAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 678,
                "type": "function"
            },
            "__wrappers__.setBriqAddress_.Args": {
                "full_name": "__wrappers__.setBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBriqAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBriqAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBriqAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBriqAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_briq.setBriqAddress_",
                "type": "alias"
            },
            "__wrappers__.setBriqAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 589,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2499,
                "type": "function"
            },
            "__wrappers__.supportsInterface.Args": {
                "full_name": "__wrappers__.supportsInterface.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.supportsInterface.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.supportsInterface",
                "type": "alias"
            },
            "__wrappers__.supportsInterface_encode_return": {
                "decorators": [],
                "pc": 2490,
                "type": "function"
            },
            "__wrappers__.supportsInterface_encode_return.Args": {
                "full_name": "__wrappers__.supportsInterface_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.supportsInterface_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 2214,
                "type": "function"
            },
            "__wrappers__.tokenURI_.Args": {
                "full_name": "__wrappers__.tokenURI_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.tokenURI_.__wrapped_func": {
                "destination": "contracts.box_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__wrappers__.tokenURI__encode_return": {
                "decorators": [],
                "pc": 2195,
                "type": "function"
            },
            "__wrappers__.tokenURI__encode_return.Args": {
                "full_name": "__wrappers__.tokenURI__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.unbox_": {
                "decorators": [
                    "external"
                ],
                "pc": 1594,
                "type": "function"
            },
            "__wrappers__.unbox_.Args": {
                "full_name": "__wrappers__.unbox_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.unbox_.ImplicitArgs": {
                "full_name": "__wrappers__.unbox_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.unbox_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.unbox_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.unbox_.__wrapped_func": {
                "destination": "contracts.box_nft.unboxing.unbox_",
                "type": "alias"
            },
            "__wrappers__.unbox__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 555,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.uri": {
                "decorators": [
                    "view"
                ],
                "pc": 2805,
                "type": "function"
            },
            "__wrappers__.uri.Args": {
                "full_name": "__wrappers__.uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri.ImplicitArgs": {
                "full_name": "__wrappers__.uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.uri.__wrapped_func": {
                "destination": "__main__.uri",
                "type": "alias"
            },
            "__wrappers__.uri_encode_return": {
                "decorators": [],
                "pc": 2786,
                "type": "function"
            },
            "__wrappers__.uri_encode_return.Args": {
                "full_name": "__wrappers__.uri_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.uri_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.uri_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.uri_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.uri_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "cairopen.math.array._loop_invert_arr": {
                "decorators": [],
                "pc": 1756,
                "type": "function"
            },
            "cairopen.math.array._loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array._sub_loop_invert_arr": {
                "decorators": [],
                "pc": 1783,
                "type": "function"
            },
            "cairopen.math.array._sub_loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "struct_index": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "struct_offset": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._sub_loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.math.array.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.math.array.invert_arr": {
                "decorators": [],
                "pc": 1725,
                "type": "function"
            },
            "cairopen.math.array.invert_arr.Args": {
                "full_name": "cairopen.math.array.invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "cairopen.math.array.invert_felt_arr": {
                "decorators": [],
                "pc": 1748,
                "type": "function"
            },
            "cairopen.math.array.invert_felt_arr.Args": {
                "full_name": "cairopen.math.array.invert_felt_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_felt_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_felt_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.squash_dict": {
                "destination": "starkware.cairo.common.squash_dict.squash_dict",
                "type": "alias"
            },
            "cairopen.string.constants.SHORT_STRING_MAX_LEN": {
                "type": "const",
                "value": 31
            },
            "cairopen.string.constants.SHORT_STRING_MAX_VALUE": {
                "type": "const",
                "value": 452312848583266388373324160190187140051835877600158453279131187530910662655
            },
            "cairopen.string.constants.STRING_MAX_LEN": {
                "type": "const",
                "value": 32768
            },
            "cairopen.string.libs.conversion.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.SHORT_STRING_MAX_VALUE": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_VALUE",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string": {
                "decorators": [],
                "pc": 1847,
                "type": "function"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "str_seed": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Return": {
                "cairo_type": "(str_len: felt)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.conversion.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.concat_felt_arr": {
                "destination": "cairopen.math.array.concat_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string": {
                "decorators": [],
                "pc": 1822,
                "type": "function"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Args": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "cairopen.string.libs.conversion.invert_felt_arr": {
                "destination": "cairopen.math.array.invert_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.libs.storage.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.SHORT_STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.storage.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.storage.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.storage.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "cairopen.string.libs.storage.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_data.Args": {
                "full_name": "cairopen.string.libs.storage.strings_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_data.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_len.Args": {
                "full_name": "cairopen.string.libs.storage.strings_len.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_len.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_len.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_len.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.string.String": {
                "full_name": "cairopen.string.string.String",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.box_nft.data.briq_data_end": {
                "pc": 1428,
                "type": "label"
            },
            "contracts.box_nft.data.briq_data_start": {
                "pc": 1378,
                "type": "label"
            },
            "contracts.box_nft.data.shape_data_end": {
                "pc": 1438,
                "type": "label"
            },
            "contracts.box_nft.data.shape_data_start": {
                "pc": 1428,
                "type": "label"
            },
            "contracts.box_nft.minting.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.box_nft.minting.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.box_nft.minting.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.minting.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.minting._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.box_nft.minting.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.box_nft.minting.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.box_nft.minting.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.box_nft.minting.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.box_nft.minting.mint_": {
                "decorators": [
                    "external"
                ],
                "pc": 1438,
                "type": "function"
            },
            "contracts.box_nft.minting.mint_.Args": {
                "full_name": "contracts.box_nft.minting.mint_.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.minting.mint_.ImplicitArgs": {
                "full_name": "contracts.box_nft.minting.mint_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.minting.mint_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.minting.mint_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.minting.shape_data_end": {
                "destination": "contracts.box_nft.data.shape_data_end",
                "type": "alias"
            },
            "contracts.box_nft.minting.shape_data_start": {
                "destination": "contracts.box_nft.data.shape_data_start",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.BoxData": {
                "full_name": "contracts.box_nft.token_uri.BoxData",
                "members": {
                    "briq_1": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "briq_3": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "briq_4": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "briq_5": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "briq_6": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "shape_class_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.TokenURIHelpers": {
                "destination": "contracts.utilities.token_uri.TokenURIHelpers",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.box_nft.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.box_nft.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.briq_data_end": {
                "destination": "contracts.box_nft.data.briq_data_end",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.briq_data_start": {
                "destination": "contracts.box_nft.data.briq_data_start",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.data_uri_start": {
                "pc": 2182,
                "type": "label"
            },
            "contracts.box_nft.token_uri.get_box_data": {
                "decorators": [
                    "view"
                ],
                "pc": 2068,
                "type": "function"
            },
            "contracts.box_nft.token_uri.get_box_data.Args": {
                "full_name": "contracts.box_nft.token_uri.get_box_data.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.get_box_data.ImplicitArgs": {
                "full_name": "contracts.box_nft.token_uri.get_box_data.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.get_box_data.Return": {
                "cairo_type": "(data: contracts.box_nft.token_uri.BoxData)",
                "type": "type_definition"
            },
            "contracts.box_nft.token_uri.get_box_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.box_nft.token_uri.get_box_nb": {
                "decorators": [
                    "view"
                ],
                "pc": 2144,
                "type": "function"
            },
            "contracts.box_nft.token_uri.get_box_nb.Args": {
                "full_name": "contracts.box_nft.token_uri.get_box_nb.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.get_box_nb.ImplicitArgs": {
                "full_name": "contracts.box_nft.token_uri.get_box_nb.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.get_box_nb.Return": {
                "cairo_type": "(nb: felt)",
                "type": "type_definition"
            },
            "contracts.box_nft.token_uri.get_box_nb.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.token_uri.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.shape_data_end": {
                "destination": "contracts.box_nft.data.shape_data_end",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.shape_data_start": {
                "destination": "contracts.box_nft.data.shape_data_start",
                "type": "alias"
            },
            "contracts.box_nft.token_uri.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 2186,
                "type": "function"
            },
            "contracts.box_nft.token_uri.tokenURI_.Args": {
                "full_name": "contracts.box_nft.token_uri.tokenURI_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.tokenURI_.ImplicitArgs": {
                "full_name": "contracts.box_nft.token_uri.tokenURI_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.token_uri.tokenURI_.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.box_nft.token_uri.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.unboxing.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.GENESIS_COLLECTION": {
                "destination": "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBookletContract": {
                "type": "namespace"
            },
            "contracts.box_nft.unboxing.IBookletContract.Args": {
                "full_name": "contracts.box_nft.unboxing.IBookletContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBookletContract.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing.IBookletContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBookletContract.MINT__SELECTOR": {
                "type": "const",
                "value": 48350788554288530742989392160357343298315509814803309553701115391721690693
            },
            "contracts.box_nft.unboxing.IBookletContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing.IBookletContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.unboxing.IBookletContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBookletContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBookletContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBookletContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBookletContract.mint_": {
                "decorators": [],
                "pc": 1505,
                "type": "function"
            },
            "contracts.box_nft.unboxing.IBookletContract.mint_.Args": {
                "full_name": "contracts.box_nft.unboxing.IBookletContract.mint_.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "shape_contract": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBookletContract.mint_.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing.IBookletContract.mint_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBookletContract.mint_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing.IBookletContract.mint_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.box_nft.unboxing.IBriqContract": {
                "type": "namespace"
            },
            "contracts.box_nft.unboxing.IBriqContract.Args": {
                "full_name": "contracts.box_nft.unboxing.IBriqContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBriqContract.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing.IBriqContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBriqContract.MINTFT__SELECTOR": {
                "type": "const",
                "value": 1065476871255732369457113275493683168109623121679377158127349464722084480223
            },
            "contracts.box_nft.unboxing.IBriqContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing.IBriqContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.unboxing.IBriqContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBriqContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBriqContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBriqContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.IBriqContract.mintFT_": {
                "decorators": [],
                "pc": 1526,
                "type": "function"
            },
            "contracts.box_nft.unboxing.IBriqContract.mintFT_.Args": {
                "full_name": "contracts.box_nft.unboxing.IBriqContract.mintFT_.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBriqContract.mintFT_.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing.IBriqContract.mintFT_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.IBriqContract.mintFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing.IBriqContract.mintFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.box_nft.unboxing.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.box_nft.unboxing._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.box_nft.unboxing._briq_address": {
                "destination": "contracts.ecosystem.to_briq._briq_address",
                "type": "alias"
            },
            "contracts.box_nft.unboxing._maybe_mint_briq": {
                "decorators": [],
                "pc": 1694,
                "type": "function"
            },
            "contracts.box_nft.unboxing._maybe_mint_briq.Args": {
                "full_name": "contracts.box_nft.unboxing._maybe_mint_briq.Args",
                "members": {
                    "_briq_data_start": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "briq_addr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "offset": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.box_nft.unboxing._maybe_mint_briq.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing._maybe_mint_briq.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.unboxing._maybe_mint_briq.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing._maybe_mint_briq.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.box_nft.unboxing._unbox_mint": {
                "decorators": [],
                "pc": 1614,
                "type": "function"
            },
            "contracts.box_nft.unboxing._unbox_mint.Args": {
                "full_name": "contracts.box_nft.unboxing._unbox_mint.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.box_nft.unboxing._unbox_mint.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing._unbox_mint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.unboxing._unbox_mint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing._unbox_mint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.box_nft.unboxing.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.briq_data_start": {
                "destination": "contracts.box_nft.data.briq_data_start",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.getBookletAddress_": {
                "destination": "contracts.ecosystem.to_booklet.getBookletAddress_",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.shape_data_start": {
                "destination": "contracts.box_nft.data.shape_data_start",
                "type": "alias"
            },
            "contracts.box_nft.unboxing.unbox_": {
                "decorators": [
                    "external"
                ],
                "pc": 1547,
                "type": "function"
            },
            "contracts.box_nft.unboxing.unbox_.Args": {
                "full_name": "contracts.box_nft.unboxing.unbox_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.unbox_.ImplicitArgs": {
                "full_name": "contracts.box_nft.unboxing.unbox_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.box_nft.unboxing.unbox_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.box_nft.unboxing.unbox_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.genesis_collection.DUCKS_COLLECTION": {
                "type": "const",
                "value": 3
            },
            "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION": {
                "type": "const",
                "value": 1
            },
            "contracts.ecosystem.genesis_collection.ZENDUCKS_COLLECTION": {
                "type": "const",
                "value": 4
            },
            "contracts.ecosystem.to_booklet.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_booklet._booklet_address.Args": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet._booklet_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_booklet._booklet_address.addr": {
                "decorators": [],
                "pc": 697,
                "type": "function"
            },
            "contracts.ecosystem.to_booklet._booklet_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet._booklet_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_booklet._booklet_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address.read": {
                "decorators": [],
                "pc": 702,
                "type": "function"
            },
            "contracts.ecosystem.to_booklet._booklet_address.read.Args": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet._booklet_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_booklet._booklet_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet._booklet_address.write": {
                "decorators": [],
                "pc": 715,
                "type": "function"
            },
            "contracts.ecosystem.to_booklet._booklet_address.write.Args": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet._booklet_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet._booklet_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet._booklet_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_booklet._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_booklet.getBookletAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 727,
                "type": "function"
            },
            "contracts.ecosystem.to_booklet.getBookletAddress_.Args": {
                "full_name": "contracts.ecosystem.to_booklet.getBookletAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet.getBookletAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet.getBookletAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet.getBookletAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet.getBookletAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_booklet.setBookletAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 758,
                "type": "function"
            },
            "contracts.ecosystem.to_booklet.setBookletAddress_.Args": {
                "full_name": "contracts.ecosystem.to_booklet.setBookletAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet.setBookletAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_booklet.setBookletAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_booklet.setBookletAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_booklet.setBookletAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_briq._briq_address.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.addr": {
                "decorators": [],
                "pc": 608,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.read": {
                "decorators": [],
                "pc": 613,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.read.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.write": {
                "decorators": [],
                "pc": 626,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.write.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 638,
                "type": "function"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.Args": {
                "full_name": "contracts.ecosystem.to_briq.getBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq.getBriqAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq.setBriqAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 669,
                "type": "function"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.Args": {
                "full_name": "contracts.ecosystem.to_briq.setBriqAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq.setBriqAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_token_uri": {
                "destination": "contracts.library_erc1155.token_uri.ERC1155_token_uri",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.FALSE": {
                "destination": "contracts.utilities.IERC165.FALSE",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC1155_ID": {
                "destination": "contracts.utilities.IERC165.IERC1155_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC1155_METADATA_ID": {
                "destination": "contracts.utilities.IERC165.IERC1155_METADATA_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC165_ID": {
                "destination": "contracts.utilities.IERC165.IERC165_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.TRUE": {
                "destination": "contracts.utilities.IERC165.TRUE",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_": {
                "decorators": [
                    "view"
                ],
                "pc": 2339,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOfBatch_.Args",
                "members": {
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOfBatch_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 2302,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 2265,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2410,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.safeTransferFrom_.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.safeTransferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 2237,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2454,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.supportsInterface.Args",
                "members": {
                    "interfaceId": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.supportsInterface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._felts_to_uints": {
                "destination": "contracts.utilities.Uint256_felt_conv._felts_to_uints",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._uints_to_felts": {
                "destination": "contracts.utilities.Uint256_felt_conv._uints_to_felts",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 2518,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOf.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch": {
                "decorators": [
                    "view"
                ],
                "pc": 2566,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Args",
                "members": {
                    "accounts": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "accounts_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "ids": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 3
                    },
                    "ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Return": {
                "cairo_type": "(balances_len: felt, balances: starkware.cairo.common.uint256.Uint256*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 2679,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Return": {
                "cairo_type": "(isApproved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 2716,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 4
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 7
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom_": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 2651,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.uri_": {
                "destination": "contracts.library_erc1155.IERC1155.uri_",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SELECTOR": {
                "type": "const",
                "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit": {
                "decorators": [],
                "pc": 1140,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.emit.Args",
                "members": {
                    "_approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll": {
                "decorators": [],
                "pc": 1224,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_": {
                "decorators": [],
                "pc": 1256,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_": {
                "decorators": [],
                "pc": 1212,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals._approval_all.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.addr": {
                "decorators": [],
                "pc": 1166,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.addr.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.read": {
                "decorators": [],
                "pc": 1183,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.read.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.read.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.read.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.write": {
                "decorators": [],
                "pc": 1198,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.write.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.write.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.ERC1155_balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch": {
                "decorators": [],
                "pc": 1111,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Args",
                "members": {
                    "balances": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Return": {
                "cairo_type": "(balance: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance": {
                "decorators": [],
                "pc": 1061,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance": {
                "decorators": [],
                "pc": 1042,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_": {
                "decorators": [],
                "pc": 1090,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Args",
                "members": {
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_": {
                "decorators": [],
                "pc": 1082,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance._balance.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.addr": {
                "decorators": [],
                "pc": 996,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.addr.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.read": {
                "decorators": [],
                "pc": 1013,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.read.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.write": {
                "decorators": [],
                "pc": 1028,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.write.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.Args": {
                "full_name": "contracts.library_erc1155.token_uri.ERC1155_token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri.ERC1155_token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri.URI.Args": {
                "full_name": "contracts.library_erc1155.token_uri.URI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.URI.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri.URI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.URI.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri.URI.SELECTOR": {
                "type": "const",
                "value": 1117463774533926613053234597629606061954066182299846485506120526289006522655
            },
            "contracts.library_erc1155.token_uri.URI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri.URI.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri._token_uri.Args": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri._token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri._token_uri.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.Args": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri_extra.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri_extra.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer": {
                "decorators": [],
                "pc": 1294,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer": {
                "decorators": [],
                "pc": 1321,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_": {
                "decorators": [],
                "pc": 1368,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferBatch.SELECTOR": {
                "type": "const",
                "value": 1056950791786541247294868560104033725539105339983750763525460393405057551112
            },
            "contracts.library_erc1155.transferability.TransferBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferBatch.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.SELECTOR": {
                "type": "const",
                "value": 683496163923431355190492689148098320408454942853027468141918222244294018099
            },
            "contracts.library_erc1155.transferability.TransferSingle.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferSingle.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit": {
                "decorators": [],
                "pc": 1264,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "_to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 478,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 509,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 574,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 540,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.IERC165.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.utilities.IERC165.IERC1155_ID": {
                "type": "const",
                "value": 3652614694
            },
            "contracts.utilities.IERC165.IERC1155_METADATA_ID": {
                "type": "const",
                "value": 243872796
            },
            "contracts.utilities.IERC165.IERC165_ID": {
                "type": "const",
                "value": 33540519
            },
            "contracts.utilities.IERC165.IERC721_ID": {
                "type": "const",
                "value": 2158778573
            },
            "contracts.utilities.IERC165.IERC721_METADATA_ID": {
                "type": "const",
                "value": 1532892063
            },
            "contracts.utilities.IERC165.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt": {
                "decorators": [],
                "pc": 855,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 890,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints": {
                "decorators": [],
                "pc": 956,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.Return": {
                "cairo_type": "(value_len: felt, value: starkware.cairo.common.uint256.Uint256*)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner": {
                "decorators": [],
                "pc": 972,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Args",
                "members": {
                    "out": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt": {
                "decorators": [],
                "pc": 871,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts": {
                "decorators": [],
                "pc": 904,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.Return": {
                "cairo_type": "(value_len: felt, value: felt*)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner": {
                "decorators": [],
                "pc": 920,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Args",
                "members": {
                    "out": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 450,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.utilities.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.StringCodec": {
                "destination": "contracts.vendor.cairopen.string.ASCII.StringCodec",
                "type": "alias"
            },
            "contracts.utilities.token_uri.TokenURIHelpers": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl": {
                "decorators": [],
                "pc": 1903,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args",
                "members": {
                    "label": {
                        "cairo_type": "codeoffset",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number": {
                "decorators": [],
                "pc": 1976,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args",
                "members": {
                    "data_in": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "data_out": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "i": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "leading_zero": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "sum": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Return": {
                "cairo_type": "(sum: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 6
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl": {
                "decorators": [],
                "pc": 1955,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.URI.Args": {
                "full_name": "contracts.utilities.token_uri.URI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.URI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.URI.SELECTOR": {
                "type": "const",
                "value": 1117463774533926613053234597629606061954066182299846485506120526289006522655
            },
            "contracts.utilities.token_uri.URI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.utilities.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.utilities.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.utilities.token_uri.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.utilities.token_uri.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.split_int": {
                "destination": "starkware.cairo.common.math.split_int",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec": {
                "type": "namespace"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.CHAR_SIZE": {
                "type": "const",
                "value": 256
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.LAST_CHAR_MASK": {
                "type": "const",
                "value": 255
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.NUMERICAL_OFFSET": {
                "type": "const",
                "value": 48
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string": {
                "decorators": [],
                "pc": 1893,
                "type": "function"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_assert_char_encoding": {
                "destination": "cairopen.string.libs.conversion.conversion_assert_char_encoding",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_felt_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_felt_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_arr_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_arr_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_delete": {
                "destination": "cairopen.string.libs.storage.storage_delete",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_read": {
                "destination": "cairopen.string.libs.storage.storage_read",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write": {
                "destination": "cairopen.string.libs.storage.storage_write",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write_from_char_arr": {
                "destination": "cairopen.string.libs.storage.storage_write_from_char_arr",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 301,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 411,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 432,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 386,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 405,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 399,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 356,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 361,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 374,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 326,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 331,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 344,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 277,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 99,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 85,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 141,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 8
                        },
                        "pc": 151,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 165,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 177,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 186,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 186,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 186,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 81,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 81,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 90,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal": {
                "decorators": [],
                "pc": 75,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_equal.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 75,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 75,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 70,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 70,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 112,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int": {
                "decorators": [],
                "pc": 212,
                "type": "function"
            },
            "starkware.cairo.common.math.split_int.Args": {
                "full_name": "starkware.cairo.common.math.split_int.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bound": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_int.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_int.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int.base": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.base",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.bound": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.bound",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.output": {
                "cairo_type": "felt*",
                "full_name": "starkware.cairo.common.math.split_int.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-7), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 197,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 825,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 830,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 73,
                            "offset": 0
                        },
                        "pc": 830,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 73,
                            "offset": 0
                        },
                        "pc": 830,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 842,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 792,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 71,
                            "offset": 0
                        },
                        "pc": 792,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 816,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 802,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 786,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "cairo_type": "codeoffset",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 788,
                "type": "label"
            },
            "starkware.cairo.common.squash_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_check": {
                "decorators": [],
                "pc": 850,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_check.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 237,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 0
                        },
                        "pc": 237,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 2
                        },
                        "pc": 257,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 1
                        },
                        "pc": 239,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 25,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 25,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 1
                        },
                        "pc": 32,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 60,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 60,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 1
                        },
                        "pc": 67,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 37,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 37,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 1
                        },
                        "pc": 40,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 44,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 44,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 1
                        },
                        "pc": 48,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 52,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 52,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 1
                        },
                        "pc": 57,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 25,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 37,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 44,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 52,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 60,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 70,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 75,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 75,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 81,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 186,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 186,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 237,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 1
                    },
                    "pc": 239,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 2
                    },
                    "pc": 257,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 71,
                        "offset": 0
                    },
                    "pc": 792,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 73,
                        "offset": 0
                    },
                    "pc": 830,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 73,
                        "offset": 0
                    },
                    "pc": 830,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
