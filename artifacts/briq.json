{
    "abi": [
        {
            "members": [
                {
                    "name": "material",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "balance",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "BalanceSpec",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "material",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "NFTSpec",
            "size": 2,
            "type": "struct"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "ownerOf_",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "balanceOfMaterial_",
            "outputs": [
                {
                    "name": "balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "materials_len",
                    "type": "felt"
                },
                {
                    "name": "materials",
                    "type": "felt*"
                }
            ],
            "name": "balanceOfMaterials_",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "materialsOf_",
            "outputs": [
                {
                    "name": "materials_len",
                    "type": "felt"
                },
                {
                    "name": "materials",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "balanceDetailsOfMaterial_",
            "outputs": [
                {
                    "name": "ft_balance",
                    "type": "felt"
                },
                {
                    "name": "nft_ids_len",
                    "type": "felt"
                },
                {
                    "name": "nft_ids",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "fullBalanceOf_",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "BalanceSpec*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "index",
                    "type": "felt"
                }
            ],
            "name": "tokenOfOwnerByIndex_",
            "outputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "totalSupplyOfMaterial_",
            "outputs": [
                {
                    "name": "supply",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_owner",
                    "type": "felt"
                },
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_approved",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                },
                {
                    "name": "_value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_ids_len",
                    "type": "felt"
                },
                {
                    "name": "_ids",
                    "type": "Uint256*"
                },
                {
                    "name": "_values_len",
                    "type": "felt"
                },
                {
                    "name": "_values",
                    "type": "Uint256*"
                }
            ],
            "keys": [],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getBoxAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBoxAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getFactoryAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setFactoryAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "mintFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                }
            ],
            "name": "mintOneNFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getSetAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setSetAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getMigrationAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setMigrationAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "transferFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "briq_token_id",
                    "type": "felt"
                }
            ],
            "name": "transferOneNFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "felt*"
                }
            ],
            "name": "transferNFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "owner_",
                    "type": "felt"
                },
                {
                    "name": "old_id_",
                    "type": "felt"
                },
                {
                    "name": "new_id_",
                    "type": "felt"
                },
                {
                    "name": "from_material_",
                    "type": "felt"
                },
                {
                    "name": "to_material_",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Mutate",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "owner_",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "id_",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ConvertToFT",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "owner_",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "id_",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ConvertToNFT",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "source_material",
                    "type": "felt"
                },
                {
                    "name": "target_material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "mutateFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "source_material",
                    "type": "felt"
                },
                {
                    "name": "target_material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                },
                {
                    "name": "new_uid",
                    "type": "felt"
                }
            ],
            "name": "mutateOneNFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "convertOneToFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "NFTSpec*"
                }
            ],
            "name": "convertToFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                }
            ],
            "name": "convertOneToNFT_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name_",
            "outputs": [
                {
                    "name": "name",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol_",
            "outputs": [
                {
                    "name": "symbol",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "balanceOfMaterial",
            "outputs": [
                {
                    "name": "balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "materials_len",
                    "type": "felt"
                },
                {
                    "name": "materials",
                    "type": "felt*"
                }
            ],
            "name": "balanceOfMaterials",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "materialsOf",
            "outputs": [
                {
                    "name": "materials_len",
                    "type": "felt"
                },
                {
                    "name": "materials",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "balanceDetailsOfMaterial",
            "outputs": [
                {
                    "name": "ft_balance",
                    "type": "felt"
                },
                {
                    "name": "nft_ids_len",
                    "type": "felt"
                },
                {
                    "name": "nft_ids",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "fullBalanceOf",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "BalanceSpec*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "index",
                    "type": "felt"
                }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "material",
                    "type": "felt"
                }
            ],
            "name": "totalSupplyOfMaterial",
            "outputs": [
                {
                    "name": "supply",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "transferFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "briq_token_id",
                    "type": "felt"
                }
            ],
            "name": "transferOneNFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "felt*"
                }
            ],
            "name": "transferNFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "mintFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                }
            ],
            "name": "mintOneNFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "source_material",
                    "type": "felt"
                },
                {
                    "name": "target_material",
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "type": "felt"
                }
            ],
            "name": "mutateFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "source_material",
                    "type": "felt"
                },
                {
                    "name": "target_material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                },
                {
                    "name": "new_uid",
                    "type": "felt"
                }
            ],
            "name": "mutateOneNFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "convertOneToFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "NFTSpec*"
                }
            ],
            "name": "convertToFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "material",
                    "type": "felt"
                },
                {
                    "name": "uid",
                    "type": "felt"
                }
            ],
            "name": "convertOneToNFT",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "name",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "symbol",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": 3862,
                "selector": "0x1191768715659b3a3680256339bd78db9af32f3934bf2d90e6fb16c71dcecf"
            },
            {
                "offset": 3297,
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": 3452,
                "selector": "0x2962ba17806af798afa6eaf4aa8c93a9fb60a3e305045b6eea33435086cae9"
            },
            {
                "offset": 4017,
                "selector": "0x32503544340c9255ef97a4b129bc922135ba4ff57a4c11d99f783732a26b39"
            },
            {
                "offset": 3362,
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": 3266,
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": 1663,
                "selector": "0x9a63fadec335793c3c0aa51fd6338cd4039274926086140d484b6453c15343"
            },
            {
                "offset": 457,
                "selector": "0x9e78561b8bca793e482b64be02eebb56ae2baef0a4b62b8a570c16a81c70c6"
            },
            {
                "offset": 3899,
                "selector": "0xa1c8d7c109b77140dc9cbdf5de4358a746574e1380033b8c9c707d67d023df"
            },
            {
                "offset": 4163,
                "selector": "0xa20bb3fa61cd81cb1216d8dabaac6bd21ee8b0b0f6fd92f66292e71a2ec5e7"
            },
            {
                "offset": 1688,
                "selector": "0xa722e584f728d713e0a344410ff0772caf64a7f59ed36945866d15715c5364"
            },
            {
                "offset": 1777,
                "selector": "0xc20e39fb98e488a21428bfd3f44a4e728d0336282bcb2c7140c370a972c289"
            },
            {
                "offset": 3676,
                "selector": "0xc6f4dfdfab2063786d6523c760ab6d921ca6c9b3b32bc0e41c7e1cf6681bb5"
            },
            {
                "offset": 591,
                "selector": "0xd3e08672edb461950f18195a381f9999fb08ce0fe129894906c91cfab88f1b"
            },
            {
                "offset": 4208,
                "selector": "0xd7c3269c2204ee31f425ad93457d300c7a61ada471bc9f8087a31e79c59f40"
            },
            {
                "offset": 4053,
                "selector": "0xe6db3e5dd83dd2b415a40492dd8bdf6e168fd78c905979f7492d17c6a87d54"
            },
            {
                "offset": 3494,
                "selector": "0xe6fd15e9b5cc285250bfcb0227adb9ee4b5a5d854f582b56c0b2edcbe0ecdc"
            },
            {
                "offset": 2440,
                "selector": "0xeca0ae07802ed15d3ca235ec7dd40d4aa12e010996e971ddcd6e3260a18f4c"
            },
            {
                "offset": 2330,
                "selector": "0x108bc87322228c3d779004310013380e94c17a1ee53a5569ca1519908bea1ac"
            },
            {
                "offset": 3937,
                "selector": "0x12d5782f8fdc9afeaa62ab708c2ce38ce9d99075992279227e5661b9d4bbfb7"
            },
            {
                "offset": 508,
                "selector": "0x1310ff4583e6d1a8df94b1b720262621613ceea77cff140cfedffe888747eb0"
            },
            {
                "offset": 2166,
                "selector": "0x1590b901b2b2cd0de37e3c214ffeb9264d63cfa9274e83b0bb72b05cca3fec5"
            },
            {
                "offset": 3737,
                "selector": "0x16e32b698fe6cbbbd565295551d2dede5370bcfe8d800e08457c4a88b5e7684"
            },
            {
                "offset": 3091,
                "selector": "0x18624e967250b3e7d6620e09405907b508eb15cde84257ddb02c35693a99ea7"
            },
            {
                "offset": 2102,
                "selector": "0x1a21f7301a20858459a3ba0dcf5ea261a13e6e33d7b38db7ecbe27abf59089b"
            },
            {
                "offset": 3028,
                "selector": "0x1aeb5e394b18b92dd3c8fa28bf024b0a5f0272ee7262d579b1d52c447fd7a09"
            },
            {
                "offset": 2916,
                "selector": "0x1af6d85d2953947630a957b0b57b5d164f57a743403ed72ca2466f0fc4dab55"
            },
            {
                "offset": 782,
                "selector": "0x1b191068fd11eadaeacc63412eba04434d1e2f06509446a9bb7affbd0995c56"
            },
            {
                "offset": 1752,
                "selector": "0x1b886c4a9e3c3a9e4e435f333d7213f6e53d1736f264b39beb51d810c3d704b"
            },
            {
                "offset": 3328,
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": 951,
                "selector": "0x1c5b43d62ca0ff3b72eb2c4a826c6a45cbdf3654115aed583e9f0f3bb81a0d9"
            },
            {
                "offset": 685,
                "selector": "0x1cfad4e1b3cce29757459959eb247a1813ba3147dc09d51bfa62846dd472f54"
            },
            {
                "offset": 4281,
                "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
            },
            {
                "offset": 871,
                "selector": "0x22ea530893fb6f6894ed97c1f0fba1cebbef10e6a79679f7a41c954239d0d72"
            },
            {
                "offset": 2720,
                "selector": "0x236cc0fa4b2eed40949aa05f63747b07885c006b343c61feafbd61c405ab788"
            },
            {
                "offset": 2077,
                "selector": "0x2590d896993b98c91c313ca0b46188a64792601f9ff24649d4ed412178aae1a"
            },
            {
                "offset": 1891,
                "selector": "0x25b09dda48c8b20c9ca39a74e140308e9266619a02f3f41415e45eb4fbc44df"
            },
            {
                "offset": 3828,
                "selector": "0x287fe01725e60dbb859587d2deb2c3975fd8e57e390791f7a00c4ced1de7b57"
            },
            {
                "offset": 4128,
                "selector": "0x288fa9215b60f1adc8e6bf19cb2751891bec0ae57f617cbafde2226451e8921"
            },
            {
                "offset": 2011,
                "selector": "0x2a7ab5bc86b6268dac18de64d5290ddc78f5df5d545b56ae9451f01dc92f72f"
            },
            {
                "offset": 3616,
                "selector": "0x2ebc02a12b511b8358a6cd6ca045668933715ba4decbc579b4711235a057d80"
            },
            {
                "offset": 2191,
                "selector": "0x30c01b5106792f295e0d30693936d510f381e46c0299a25d1ef40d385afa6b0"
            },
            {
                "offset": 988,
                "selector": "0x32d77db1add4e00d8a2be3b631f5ccc94512110d4169b81165d1cea84bec83f"
            },
            {
                "offset": 3785,
                "selector": "0x34e45f1a39063678f3d4c888e6fa7fd9f96160b4bebf14bf5f54845ead7fb79"
            },
            {
                "offset": 3230,
                "selector": "0x358b32314478156f39ab58f742e4735591dc663308ddf3d1ff286457af1c1d1"
            },
            {
                "offset": 4247,
                "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
            },
            {
                "offset": 4091,
                "selector": "0x36264d9044d7789a5633d0205bfe96d8834532939a3d225a207e90a610128d1"
            },
            {
                "offset": 3982,
                "selector": "0x3a196c6328992fb82871e0612e7fde82e6f5dd0a1a08c759025cf5dcd433631"
            },
            {
                "offset": 3549,
                "selector": "0x3a9fad113c4af89a65dc1da0464f8d2828cc02718b7a771712f167170b9ff2e"
            },
            {
                "offset": 3418,
                "selector": "0x3c4737e95ca4fc02f0854fd50357fdce3b1b292451cf0ca521f560aa5930c3b"
            },
            {
                "offset": 3393,
                "selector": "0x3d51ca2c14a9e484c9bf5215182d011d5d0e53e4f662fbd0bfba0840534956f"
            },
            {
                "offset": 2500,
                "selector": "0x3fb04b84f58f2e84215db4055561d2536f2992b035ca7a1f05f912171848f5a"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 1444,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 114,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1443,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 1484,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 118,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1481,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.utilities.authorization",
                    "contracts.utilities.authorization._only"
                ],
                "end_pc": 1513,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 119,
                        "offset": 7
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1509,
                "value": "You are not authorized to call this function"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.minting",
                    "contracts.briq.minting",
                    "contracts.briq.minting.mintFT_"
                ],
                "end_pc": 1848,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 148,
                        "offset": 96
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1845,
                "value": "Overflow in total supply"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.minting",
                    "contracts.briq.minting",
                    "contracts.briq.minting.mintFT_"
                ],
                "end_pc": 1862,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 148,
                        "offset": 245
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1859,
                "value": "Overflow in balance"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.minting",
                    "contracts.briq.minting",
                    "contracts.briq.minting.mintOneNFT_"
                ],
                "end_pc": 1948,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 153,
                        "offset": 122
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1944,
                "value": "Overflow in total supply"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.transferability",
                    "contracts.briq.transferability",
                    "contracts.briq.transferability.transferFT_"
                ],
                "end_pc": 2298,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 181,
                        "offset": 261
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2295,
                "value": "Transfer would overflow recipient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.transferability",
                    "contracts.briq.transferability",
                    "contracts.briq.transferability.transferOneNFT_"
                ],
                "end_pc": 2379,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 187,
                        "offset": 12
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2373,
                "value": "briq_token_id is not an NFT"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.transferability",
                    "contracts.briq.transferability",
                    "contracts.briq.transferability.transferOneNFT_"
                ],
                "end_pc": 2389,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 187,
                        "offset": 72
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2387,
                "value": "material does not match briq_token_id"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate.mutateFT_"
                ],
                "end_pc": 2641,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 205,
                        "offset": 101
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2636,
                "value": "Not enough briqs to mutate"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate.mutateFT_"
                ],
                "end_pc": 2656,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 205,
                        "offset": 253
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2653,
                "value": "Mutate would overflow recipient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate.mutateFT_"
                ],
                "end_pc": 2680,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 205,
                        "offset": 514
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2677,
                "value": "Mutate would overflow total supply"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate.mutateOneNFT_"
                ],
                "end_pc": 2823,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 213,
                        "offset": 58
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2819,
                "value": "Mutate would overflow total supply"
            },
            {
                "accessible_scopes": [
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate",
                    "contracts.briq.convert_mutate.convertOneToFT_"
                ],
                "end_pc": 2984,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 220,
                        "offset": 122
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2980,
                "value": "Convert would overflow balance"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.11.0.1",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574436f6e747261637441646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff98",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff92",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7b",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1b7e24dbc7e9f5269168b3096497c70e05d3998167db351e2ceab75a8ae9f06",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff28",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff25",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff36",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2e",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x37a9774624a0e3e0d8e6b72bd35514f62b3e8e70fbaff4ed27181de4ffd4604",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefa",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0c",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff05",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1bc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed1",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7a",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee3",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedc",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x12ce99fab9de2f86520be72d664508415ee2d4169b17d380fdcad895ebe8cf2",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea8",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea5",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea2",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4b",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb2",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x480a7ff77fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea9",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x2b2c36fa94f396350f1ab4d0677bd69f7fd8d84f5c9af719cfdb2b0a5df657d",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe75",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe72",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1b",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe83",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7b",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff81",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x2b",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48307ffc7fb88000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff57",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd4",
            "0x40137fff7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x39",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc1",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480280007ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff62",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd74",
            "0x40137fff7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x2d",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd63",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed4",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xe",
            "0x400280007ffc7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48297ffd80007ffc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1e",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x38",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf5",
            "0x4828800080007fbb",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x2",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd02",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe41",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbd",
            "0x40137fff7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x30",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ffb8000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x484680017ffb8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca9",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe18",
            "0x20680017fff7fff",
            "0xa",
            "0x484680017ffc8000",
            "0x2",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48317ffb80007ffd",
            "0x208b7fff7fff7ffe",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe46",
            "0x400280017ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd45",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd78",
            "0x48287ffc80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20680017fff7ffe",
            "0xc",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd76",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd47",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc19",
            "0x48287ffc80007ffd",
            "0x20680017fff7fff",
            "0xf",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffd8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xe",
            "0x208b7fff7fff7ffe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd22",
            "0x20680017fff7fff",
            "0x19",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc54",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd22",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1a",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd26",
            "0x48287ffc80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20680017fff7ffe",
            "0xb",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd24",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc50",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x6",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd64",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x6",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb79",
            "0x48287ffc80007ffd",
            "0x20680017fff7fff",
            "0xe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffd8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x208b7fff7fff7ffe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb5",
            "0x20680017fff7fff",
            "0x17",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb7",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb5",
            "0x480a7ffa7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcae",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb66",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8b",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3a",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad1",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacb",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf5",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab9",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab3",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffadc",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffabd",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab7",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa9f",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa99",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7d",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa77",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa3d",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa2b",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x3b04ac990d5707170db3baee01793ea0c63ddf2301338cf3915ae5cca436636",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482480017ffc8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff96",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0f",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e6",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x182d859c0807ba9db63baf8b9d9fdbfeb885d820be6e206b9dab626d995c433",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e0",
            "0x40137fff7fff8001",
            "0x4003800080017ff7",
            "0x4003800180017ff8",
            "0x4003800280017ff9",
            "0x4003800380017ffa",
            "0x4003800480017ffb",
            "0x4003800580017ffc",
            "0x4003800680017ffd",
            "0x4826800180018000",
            "0x7",
            "0x480a7ff57fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa04",
            "0x480a7ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee0",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fd77fff8000",
            "0x48127fd77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127ffe7fff8000",
            "0x48127fdc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3c1642488b9e91e5b87d74218388f665b4c91a55300448136c18b6a90407cf3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ca",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c4",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5c",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3b6c198dabc288a771c3134d57b7c5bbced252832744df4e154a1ac5ae65588",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff971",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff96b",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff03",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff914",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa7",
            "0x48307fff80007fe8",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff42",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef2",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff920",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91d",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97c",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff914",
            "0x48127fda7fff8000",
            "0x48127fda7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e2",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff970",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe38000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a9",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff962",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe28000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ad",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd21",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8cb",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed8",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8a",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c3",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c0",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91f",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8b7",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff916",
            "0x48127fc07fff8000",
            "0x48127fc07fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97f",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff90c",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017fe38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff981",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff994",
            "0x400680017fff7fff",
            "0x0",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48287ffc7ffc8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff997",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb8",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffc7ffa8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc29",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff856",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffd7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x48287ffc7ff98000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe60",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff95",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3cadaf481dda01da921c159bddad4d0df50db34e6ac0052a7994731899d9d5c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff82c",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff826",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x36c5c4059df8bce55d3e15cd3b3003ac556242a31a8e81408421d5c3717106e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d3",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7cd",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd65",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff776",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4e",
            "0x48307fff80007fe8",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb4",
            "0x48307fff80007fcb",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1b",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff776",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff773",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff770",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff76d",
            "0x48127ff37fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7cc",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff764",
            "0x48127fd47fff8000",
            "0x48127fd47fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff806",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff790",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007fe6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff808",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f5",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ae",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe28000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f9",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb92",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb69",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff713",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd21",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400b7ff77fff8000",
            "0x480a80007fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6c",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff707",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff704",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff701",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6fe",
            "0x48127ff37fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff75d",
            "0x48297ffc80007ffd",
            "0x48127ffe7fff8000",
            "0x484480017ffe8000",
            "0x800000000000010f7ffffffffffffef00000000000000000000000000000001",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbc",
            "0x400680017fff7fff",
            "0x1",
            "0x48127fb57fff8000",
            "0x48127fb57fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7e5",
            "0x40137fff7fff7ffa",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7eb",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa83",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb25",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffafc",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a6",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb3",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9f",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffd8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ff98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff61c",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x223cb24afff8a9e6ba337d5394a3f6cb1c2f55b9f60a2e82af77f6ab8121a93",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff616",
            "0x40137fff7fff8001",
            "0x4003800080017ff9",
            "0x4003800180017ffa",
            "0x4003800280017ffb",
            "0x4003800380017ffc",
            "0x4003800480017ffd",
            "0x4826800180018000",
            "0x5",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff63c",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff600",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x4a32ef2ad9071b0dee9a3d57b061ca32667eaa901bcc84bd4bd4221758962a",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5fa",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff622",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e6",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x1312c1a94195d31ac06c0e0d4b20ae084de5cd50979da5763e107dcf1dd38d2",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e0",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff608",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb8",
            "0x48297ffc80007ffb",
            "0x48527fff7ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff607",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff604",
            "0x48127ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff663",
            "0x48127fdc7fff8000",
            "0x48127fdc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a0",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff62a",
            "0x48127fe87fff8000",
            "0x48127fe87fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48287ffd80007fe6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a2",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff68f",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff61b",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe88000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff693",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6ac",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48287ffd80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b3",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a2",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff603",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe98000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6a6",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9f0",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0f",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff596",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba3",
            "0x48127f8f7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9b",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8a",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb35",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e8",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e3",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff57b",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff578",
            "0x48127ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5d7",
            "0x48127fab7fff8000",
            "0x48127fab7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff640",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x482480017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff646",
            "0x484680017ffc8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffa7ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff659",
            "0x400a7ff97fff7fff",
            "0x484680017ffc8000",
            "0x10000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48287ffa7ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff65c",
            "0x484680017ffc8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48287ffa7ffa8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91c",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff998",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff614",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff574",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x482480017fe98000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff616",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffb7ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff629",
            "0x400680017fff7fff",
            "0x0",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48287ffb7ffc8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff62c",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94d",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x48287ffb7ffa8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8be",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4eb",
            "0x484680017ffc8000",
            "0x10000000000000000",
            "0x48127ffd7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48287ffa7ff98000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf5",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127f8a7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ff97fff8000",
            "0x48287ffb7ff98000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae7",
            "0x484680017ffc8000",
            "0x10000000000000000",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x48287ffa7ffb8000",
            "0x48287ffb7ffb8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe86",
            "0x48127ffe7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x5",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff48",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa70",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4c0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4bd",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5b4",
            "0x48287ffb80007fff",
            "0x20680017fff7fff",
            "0x5",
            "0x400a7ffb7fff7ffe",
            "0x10780017fff7fff",
            "0x3",
            "0x40137ffe7fff7ffd",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff87d",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5ae",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff548",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4d3",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017fe88000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff54a",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff46e",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7a",
            "0x48127f8f7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa71",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe32",
            "0x48127ffe7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9f",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ec",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff43c",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff439",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9b9",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff409",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff406",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff465",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff460",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127fc37fff8000",
            "0x48127fc37fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4f0",
            "0x400680017fff7fff",
            "0x0",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48287ffc7ffc8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4f3",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffc7ffa8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff78b",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff481",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff487",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff3ab",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9b7",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127f8b7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x48287ffc7ff98000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a9",
            "0x484680017ffd8000",
            "0x10000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffc7ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd82",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8f9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8d4",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8fa",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff34a",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8cd",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8d8",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff328",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff896",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x62726971",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x62726971",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff44f",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff448",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff46b",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff233",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff488",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1f0",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4a4",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x2",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1b4",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x40137ff97fff8000",
            "0x40137ffa7fff8001",
            "0x40137ffb7fff8002",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4c9",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ffb8000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x484680017ffb8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff177",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4ee",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4ea",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9b6",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9fd",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa60",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff77fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff795",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7cf",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa66",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac3",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff77fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x5",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb63",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbc4",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbca",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb0",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca7",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "27": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 2
                        }
                    }
                }
            ],
            "34": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_contract_address"
                    ],
                    "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 3
                        }
                    }
                }
            ],
            "42": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 4
                        }
                    }
                }
            ],
            "51": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 5
                        }
                    }
                }
            ],
            "61": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 6
                        }
                    }
                }
            ],
            "64": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 7
                        }
                    }
                }
            ],
            "69": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 8
                        }
                    }
                }
            ],
            "78": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 11,
                            "starkware.cairo.common.math.assert_250_bit.low": 10,
                            "starkware.cairo.common.math.assert_250_bit.value": 9
                        }
                    }
                }
            ],
            "91": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 14,
                            "starkware.cairo.common.math.split_felt.low": 13,
                            "starkware.cairo.common.math.split_felt.value": 12
                        }
                    }
                }
            ],
            "120": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 15,
                            "starkware.cairo.common.math.assert_le_felt.b": 16,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 17
                        }
                    }
                }
            ],
            "130": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "144": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "156": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "165": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 18,
                            "starkware.cairo.common.math.assert_lt_felt.b": 19
                        }
                    }
                }
            ],
            "178": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 20,
                            "starkware.starknet.common.storage.normalize_address.is_small": 21
                        }
                    }
                }
            ],
            "196": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 20,
                            "starkware.starknet.common.storage.normalize_address.is_250": 22
                        }
                    }
                }
            ],
            "448": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.ownerOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 32,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "499": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.balanceOfMaterial__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 36,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "572": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.balanceOfMaterials__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 43,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "666": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.materialsOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 53,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "762": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.balanceDetailsOfMaterial__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 62,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "849": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.fullBalanceOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 71,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "942": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.tokenOfOwnerByIndex__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 80,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "979": [
                {
                    "accessible_scopes": [
                        "contracts.briq.balance_enumerability",
                        "contracts.briq.balance_enumerability",
                        "__wrappers__",
                        "__wrappers__.totalSupplyOfMaterial__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 83,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1292": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 104,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 23,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 24
                        }
                    }
                }
            ],
            "1654": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.getBoxAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 129,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1697": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.setBoxAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 134,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1743": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_factory",
                        "contracts.ecosystem.to_factory",
                        "__wrappers__",
                        "__wrappers__.getFactoryAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 139,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1786": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_factory",
                        "contracts.ecosystem.to_factory",
                        "__wrappers__",
                        "__wrappers__.setFactoryAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 144,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1902": [
                {
                    "accessible_scopes": [
                        "contracts.briq.minting",
                        "contracts.briq.minting",
                        "__wrappers__",
                        "__wrappers__.mintFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 151,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2022": [
                {
                    "accessible_scopes": [
                        "contracts.briq.minting",
                        "contracts.briq.minting",
                        "__wrappers__",
                        "__wrappers__.mintOneNFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 157,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2068": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_set",
                        "contracts.ecosystem.to_set",
                        "__wrappers__",
                        "__wrappers__.getSetAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 162,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2111": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_set",
                        "contracts.ecosystem.to_set",
                        "__wrappers__",
                        "__wrappers__.setSetAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 167,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2157": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_migration",
                        "contracts.ecosystem.to_migration",
                        "__wrappers__",
                        "__wrappers__.getMigrationAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 172,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2200": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_migration",
                        "contracts.ecosystem.to_migration",
                        "__wrappers__",
                        "__wrappers__.setMigrationAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 177,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2342": [
                {
                    "accessible_scopes": [
                        "contracts.briq.transferability",
                        "contracts.briq.transferability",
                        "__wrappers__",
                        "__wrappers__.transferFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 185,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2452": [
                {
                    "accessible_scopes": [
                        "contracts.briq.transferability",
                        "contracts.briq.transferability",
                        "__wrappers__",
                        "__wrappers__.transferOneNFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 193,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2521": [
                {
                    "accessible_scopes": [
                        "contracts.briq.transferability",
                        "contracts.briq.transferability",
                        "__wrappers__",
                        "__wrappers__.transferNFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 200,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2732": [
                {
                    "accessible_scopes": [
                        "contracts.briq.convert_mutate",
                        "contracts.briq.convert_mutate",
                        "__wrappers__",
                        "__wrappers__.mutateFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 209,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2929": [
                {
                    "accessible_scopes": [
                        "contracts.briq.convert_mutate",
                        "contracts.briq.convert_mutate",
                        "__wrappers__",
                        "__wrappers__.mutateOneNFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 217,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3039": [
                {
                    "accessible_scopes": [
                        "contracts.briq.convert_mutate",
                        "contracts.briq.convert_mutate",
                        "__wrappers__",
                        "__wrappers__.convertOneToFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 222,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3112": [
                {
                    "accessible_scopes": [
                        "contracts.briq.convert_mutate",
                        "contracts.briq.convert_mutate",
                        "__wrappers__",
                        "__wrappers__.convertToFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 230,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3241": [
                {
                    "accessible_scopes": [
                        "contracts.briq.convert_mutate",
                        "contracts.briq.convert_mutate",
                        "__wrappers__",
                        "__wrappers__.convertOneToNFT_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 235,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3257": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 237,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3288": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 240,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3337": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 245,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3371": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 249,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3384": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.name__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 251,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3409": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.symbol__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 254,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3443": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.ownerOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 257,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3485": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceOfMaterial_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 261,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3530": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceOfMaterials_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 266,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3597": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.materialsOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 273,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3656": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceDetailsOfMaterial_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 280,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3715": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.fullBalanceOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 287,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3776": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.tokenOfOwnerByIndex_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 293,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3819": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.totalSupplyOfMaterial_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 296,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3875": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 301,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3912": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferOneNFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 305,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3959": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferNFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 309,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3994": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.mintFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 313,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4029": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.mintOneNFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 317,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4066": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.mutateFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 321,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4105": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.mutateOneNFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 325,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4140": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.convertOneToFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 329,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4185": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.convertToFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 333,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4220": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.convertOneToNFT"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 337,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4238": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.name_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 339,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4272": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.symbol_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 342,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BalanceSpec": {
                "destination": "contracts.types.BalanceSpec",
                "type": "alias"
            },
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.NFTSpec": {
                "destination": "contracts.types.NFTSpec",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.balanceDetailsOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3641,
                "type": "function"
            },
            "__main__.balanceDetailsOfMaterial.Args": {
                "full_name": "__main__.balanceDetailsOfMaterial.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.balanceDetailsOfMaterial.ImplicitArgs": {
                "full_name": "__main__.balanceDetailsOfMaterial.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.balanceDetailsOfMaterial.Return": {
                "cairo_type": "(ft_balance: felt, nft_ids_len: felt, nft_ids: felt*)",
                "type": "type_definition"
            },
            "__main__.balanceDetailsOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.balanceDetailsOfMaterial_": {
                "destination": "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_",
                "type": "alias"
            },
            "__main__.balanceOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3472,
                "type": "function"
            },
            "__main__.balanceOfMaterial.Args": {
                "full_name": "__main__.balanceOfMaterial.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.balanceOfMaterial.ImplicitArgs": {
                "full_name": "__main__.balanceOfMaterial.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.balanceOfMaterial.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "__main__.balanceOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.balanceOfMaterial_": {
                "destination": "contracts.briq.balance_enumerability.balanceOfMaterial_",
                "type": "alias"
            },
            "__main__.balanceOfMaterials": {
                "decorators": [
                    "view"
                ],
                "pc": 3515,
                "type": "function"
            },
            "__main__.balanceOfMaterials.Args": {
                "full_name": "__main__.balanceOfMaterials.Args",
                "members": {
                    "materials": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "materials_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.balanceOfMaterials.ImplicitArgs": {
                "full_name": "__main__.balanceOfMaterials.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.balanceOfMaterials.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "__main__.balanceOfMaterials.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.balanceOfMaterials_": {
                "destination": "contracts.briq.balance_enumerability.balanceOfMaterials_",
                "type": "alias"
            },
            "__main__.convertOneToFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4115,
                "type": "function"
            },
            "__main__.convertOneToFT.Args": {
                "full_name": "__main__.convertOneToFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.convertOneToFT.ImplicitArgs": {
                "full_name": "__main__.convertOneToFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.convertOneToFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.convertOneToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.convertOneToFT_": {
                "destination": "contracts.briq.convert_mutate.convertOneToFT_",
                "type": "alias"
            },
            "__main__.convertOneToNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4195,
                "type": "function"
            },
            "__main__.convertOneToNFT.Args": {
                "full_name": "__main__.convertOneToNFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.convertOneToNFT.ImplicitArgs": {
                "full_name": "__main__.convertOneToNFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.convertOneToNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.convertOneToNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.convertOneToNFT_": {
                "destination": "contracts.briq.convert_mutate.convertOneToNFT_",
                "type": "alias"
            },
            "__main__.convertToFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4150,
                "type": "function"
            },
            "__main__.convertToFT.Args": {
                "full_name": "__main__.convertToFT.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "contracts.types.NFTSpec*",
                        "offset": 2
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.convertToFT.ImplicitArgs": {
                "full_name": "__main__.convertToFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.convertToFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.convertToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.convertToFT_": {
                "destination": "contracts.briq.convert_mutate.convertToFT_",
                "type": "alias"
            },
            "__main__.fullBalanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3702,
                "type": "function"
            },
            "__main__.fullBalanceOf.Args": {
                "full_name": "__main__.fullBalanceOf.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.fullBalanceOf.ImplicitArgs": {
                "full_name": "__main__.fullBalanceOf.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.fullBalanceOf.Return": {
                "cairo_type": "(balances_len: felt, balances: contracts.types.BalanceSpec*)",
                "type": "type_definition"
            },
            "__main__.fullBalanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.fullBalanceOf_": {
                "destination": "contracts.briq.balance_enumerability.fullBalanceOf_",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__main__.getFactoryAddress_": {
                "destination": "contracts.ecosystem.to_factory.getFactoryAddress_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.getMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "__main__.getSetAddress_": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "__main__.materialsOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3584,
                "type": "function"
            },
            "__main__.materialsOf.Args": {
                "full_name": "__main__.materialsOf.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.materialsOf.ImplicitArgs": {
                "full_name": "__main__.materialsOf.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.materialsOf.Return": {
                "cairo_type": "(materials_len: felt, materials: felt*)",
                "type": "type_definition"
            },
            "__main__.materialsOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.materialsOf_": {
                "destination": "contracts.briq.balance_enumerability.materialsOf_",
                "type": "alias"
            },
            "__main__.mintFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3969,
                "type": "function"
            },
            "__main__.mintFT.Args": {
                "full_name": "__main__.mintFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.mintFT.ImplicitArgs": {
                "full_name": "__main__.mintFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.mintFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.mintFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.mintFT_": {
                "destination": "contracts.briq.minting.mintFT_",
                "type": "alias"
            },
            "__main__.mintOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4004,
                "type": "function"
            },
            "__main__.mintOneNFT.Args": {
                "full_name": "__main__.mintOneNFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.mintOneNFT.ImplicitArgs": {
                "full_name": "__main__.mintOneNFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.mintOneNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.mintOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.mintOneNFT_": {
                "destination": "contracts.briq.minting.mintOneNFT_",
                "type": "alias"
            },
            "__main__.mutateFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4039,
                "type": "function"
            },
            "__main__.mutateFT.Args": {
                "full_name": "__main__.mutateFT.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "source_material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "target_material": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.mutateFT.ImplicitArgs": {
                "full_name": "__main__.mutateFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.mutateFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.mutateFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.mutateFT_": {
                "destination": "contracts.briq.convert_mutate.mutateFT_",
                "type": "alias"
            },
            "__main__.mutateOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4076,
                "type": "function"
            },
            "__main__.mutateOneNFT.Args": {
                "full_name": "__main__.mutateOneNFT.Args",
                "members": {
                    "new_uid": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "source_material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "target_material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.mutateOneNFT.ImplicitArgs": {
                "full_name": "__main__.mutateOneNFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.mutateOneNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.mutateOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.mutateOneNFT_": {
                "destination": "contracts.briq.convert_mutate.mutateOneNFT_",
                "type": "alias"
            },
            "__main__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 4230,
                "type": "function"
            },
            "__main__.name.Args": {
                "full_name": "__main__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name.ImplicitArgs": {
                "full_name": "__main__.name.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "__main__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.name_": {
                "decorators": [
                    "view"
                ],
                "pc": 3381,
                "type": "function"
            },
            "__main__.name_.Args": {
                "full_name": "__main__.name_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name_.ImplicitArgs": {
                "full_name": "__main__.name_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name_.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "__main__.name_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3431,
                "type": "function"
            },
            "__main__.ownerOf.Args": {
                "full_name": "__main__.ownerOf.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.ownerOf.ImplicitArgs": {
                "full_name": "__main__.ownerOf.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.ownerOf.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "__main__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ownerOf_": {
                "destination": "contracts.briq.balance_enumerability.ownerOf_",
                "type": "alias"
            },
            "__main__.setBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__main__.setFactoryAddress_": {
                "destination": "contracts.ecosystem.to_factory.setFactoryAddress_",
                "type": "alias"
            },
            "__main__.setMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.setMigrationAddress_",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.setSetAddress_": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "__main__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 4264,
                "type": "function"
            },
            "__main__.symbol.Args": {
                "full_name": "__main__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol.ImplicitArgs": {
                "full_name": "__main__.symbol.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "__main__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.symbol_": {
                "decorators": [
                    "view"
                ],
                "pc": 3406,
                "type": "function"
            },
            "__main__.symbol_.Args": {
                "full_name": "__main__.symbol_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol_.ImplicitArgs": {
                "full_name": "__main__.symbol_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol_.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "__main__.symbol_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenOfOwnerByIndex": {
                "decorators": [
                    "view"
                ],
                "pc": 3762,
                "type": "function"
            },
            "__main__.tokenOfOwnerByIndex.Args": {
                "full_name": "__main__.tokenOfOwnerByIndex.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.tokenOfOwnerByIndex.ImplicitArgs": {
                "full_name": "__main__.tokenOfOwnerByIndex.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.tokenOfOwnerByIndex.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "__main__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenOfOwnerByIndex_": {
                "destination": "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_",
                "type": "alias"
            },
            "__main__.totalSupplyOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3807,
                "type": "function"
            },
            "__main__.totalSupplyOfMaterial.Args": {
                "full_name": "__main__.totalSupplyOfMaterial.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.totalSupplyOfMaterial.ImplicitArgs": {
                "full_name": "__main__.totalSupplyOfMaterial.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.totalSupplyOfMaterial.Return": {
                "cairo_type": "(supply: felt)",
                "type": "type_definition"
            },
            "__main__.totalSupplyOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.totalSupplyOfMaterial_": {
                "destination": "contracts.briq.balance_enumerability.totalSupplyOfMaterial_",
                "type": "alias"
            },
            "__main__.transferFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3848,
                "type": "function"
            },
            "__main__.transferFT.Args": {
                "full_name": "__main__.transferFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferFT.ImplicitArgs": {
                "full_name": "__main__.transferFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferFT_": {
                "destination": "contracts.briq.transferability.transferFT_",
                "type": "alias"
            },
            "__main__.transferNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3922,
                "type": "function"
            },
            "__main__.transferNFT.Args": {
                "full_name": "__main__.transferNFT.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.transferNFT.ImplicitArgs": {
                "full_name": "__main__.transferNFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferNFT_": {
                "destination": "contracts.briq.transferability.transferNFT_",
                "type": "alias"
            },
            "__main__.transferOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3885,
                "type": "function"
            },
            "__main__.transferOneNFT.Args": {
                "full_name": "__main__.transferOneNFT.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferOneNFT.ImplicitArgs": {
                "full_name": "__main__.transferOneNFT.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferOneNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferOneNFT_": {
                "destination": "contracts.briq.transferability.transferOneNFT_",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3676,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOfMaterial.Args": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceDetailsOfMaterial.__wrapped_func": {
                "destination": "__main__.balanceDetailsOfMaterial",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 782,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOfMaterial_.Args": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceDetailsOfMaterial_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return": {
                "decorators": [],
                "pc": 762,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return.Args": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "ret_value": {
                        "cairo_type": "(ft_balance: felt, nft_ids_len: felt, nft_ids: felt*)",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceDetailsOfMaterial__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return": {
                "decorators": [],
                "pc": 3656,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return.Args": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "ret_value": {
                        "cairo_type": "(ft_balance: felt, nft_ids_len: felt, nft_ids: felt*)",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOfMaterial_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceDetailsOfMaterial_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3494,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterial.Args": {
                "full_name": "__wrappers__.balanceOfMaterial.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterial.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOfMaterial.__wrapped_func": {
                "destination": "__main__.balanceOfMaterial",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 508,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterial_.Args": {
                "full_name": "__wrappers__.balanceOfMaterial_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterial_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOfMaterial_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.balanceOfMaterial_",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterial__encode_return": {
                "decorators": [],
                "pc": 499,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterial__encode_return.Args": {
                "full_name": "__wrappers__.balanceOfMaterial__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterial__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterial__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOfMaterial__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterial_encode_return": {
                "decorators": [],
                "pc": 3485,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterial_encode_return.Args": {
                "full_name": "__wrappers__.balanceOfMaterial_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterial_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterial_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterial_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOfMaterial_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterials": {
                "decorators": [
                    "view"
                ],
                "pc": 3549,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterials.Args": {
                "full_name": "__wrappers__.balanceOfMaterials.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterials.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterials.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfMaterials.__wrapped_func": {
                "destination": "__main__.balanceOfMaterials",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterials_": {
                "decorators": [
                    "view"
                ],
                "pc": 591,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterials_.Args": {
                "full_name": "__wrappers__.balanceOfMaterials_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterials_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterials_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceOfMaterials_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.balanceOfMaterials_",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterials__encode_return": {
                "decorators": [],
                "pc": 572,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterials__encode_return.Args": {
                "full_name": "__wrappers__.balanceOfMaterials__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterials__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterials__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfMaterials__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfMaterials_encode_return": {
                "decorators": [],
                "pc": 3530,
                "type": "function"
            },
            "__wrappers__.balanceOfMaterials_encode_return.Args": {
                "full_name": "__wrappers__.balanceOfMaterials_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfMaterials_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfMaterials_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfMaterials_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfMaterials_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertOneToFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4128,
                "type": "function"
            },
            "__wrappers__.convertOneToFT.Args": {
                "full_name": "__wrappers__.convertOneToFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToFT.ImplicitArgs": {
                "full_name": "__wrappers__.convertOneToFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertOneToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertOneToFT.__wrapped_func": {
                "destination": "__main__.convertOneToFT",
                "type": "alias"
            },
            "__wrappers__.convertOneToFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 3028,
                "type": "function"
            },
            "__wrappers__.convertOneToFT_.Args": {
                "full_name": "__wrappers__.convertOneToFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToFT_.ImplicitArgs": {
                "full_name": "__wrappers__.convertOneToFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertOneToFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertOneToFT_.__wrapped_func": {
                "destination": "contracts.briq.convert_mutate.convertOneToFT_",
                "type": "alias"
            },
            "__wrappers__.convertOneToFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertOneToFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertOneToNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4208,
                "type": "function"
            },
            "__wrappers__.convertOneToNFT.Args": {
                "full_name": "__wrappers__.convertOneToNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToNFT.ImplicitArgs": {
                "full_name": "__wrappers__.convertOneToNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToNFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertOneToNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertOneToNFT.__wrapped_func": {
                "destination": "__main__.convertOneToNFT",
                "type": "alias"
            },
            "__wrappers__.convertOneToNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 3230,
                "type": "function"
            },
            "__wrappers__.convertOneToNFT_.Args": {
                "full_name": "__wrappers__.convertOneToNFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToNFT_.ImplicitArgs": {
                "full_name": "__wrappers__.convertOneToNFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertOneToNFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertOneToNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertOneToNFT_.__wrapped_func": {
                "destination": "contracts.briq.convert_mutate.convertOneToNFT_",
                "type": "alias"
            },
            "__wrappers__.convertOneToNFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertOneToNFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertToFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4163,
                "type": "function"
            },
            "__wrappers__.convertToFT.Args": {
                "full_name": "__wrappers__.convertToFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertToFT.ImplicitArgs": {
                "full_name": "__wrappers__.convertToFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertToFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertToFT.__wrapped_func": {
                "destination": "__main__.convertToFT",
                "type": "alias"
            },
            "__wrappers__.convertToFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 3091,
                "type": "function"
            },
            "__wrappers__.convertToFT_.Args": {
                "full_name": "__wrappers__.convertToFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertToFT_.ImplicitArgs": {
                "full_name": "__wrappers__.convertToFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.convertToFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.convertToFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.convertToFT_.__wrapped_func": {
                "destination": "contracts.briq.convert_mutate.convertToFT_",
                "type": "alias"
            },
            "__wrappers__.convertToFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.convertToFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.fullBalanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3737,
                "type": "function"
            },
            "__wrappers__.fullBalanceOf.Args": {
                "full_name": "__wrappers__.fullBalanceOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf.ImplicitArgs": {
                "full_name": "__wrappers__.fullBalanceOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fullBalanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.fullBalanceOf.__wrapped_func": {
                "destination": "__main__.fullBalanceOf",
                "type": "alias"
            },
            "__wrappers__.fullBalanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 871,
                "type": "function"
            },
            "__wrappers__.fullBalanceOf_.Args": {
                "full_name": "__wrappers__.fullBalanceOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf_.ImplicitArgs": {
                "full_name": "__wrappers__.fullBalanceOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fullBalanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.fullBalanceOf_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.fullBalanceOf_",
                "type": "alias"
            },
            "__wrappers__.fullBalanceOf__encode_return": {
                "decorators": [],
                "pc": 849,
                "type": "function"
            },
            "__wrappers__.fullBalanceOf__encode_return.Args": {
                "full_name": "__wrappers__.fullBalanceOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: contracts.types.BalanceSpec*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.fullBalanceOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fullBalanceOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.fullBalanceOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.fullBalanceOf_encode_return": {
                "decorators": [],
                "pc": 3715,
                "type": "function"
            },
            "__wrappers__.fullBalanceOf_encode_return.Args": {
                "full_name": "__wrappers__.fullBalanceOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: contracts.types.BalanceSpec*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.fullBalanceOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.fullBalanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.fullBalanceOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.fullBalanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 3266,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 3257,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 1663,
                "type": "function"
            },
            "__wrappers__.getBoxAddress_.Args": {
                "full_name": "__wrappers__.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress__encode_return": {
                "decorators": [],
                "pc": 1654,
                "type": "function"
            },
            "__wrappers__.getBoxAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getFactoryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 1752,
                "type": "function"
            },
            "__wrappers__.getFactoryAddress_.Args": {
                "full_name": "__wrappers__.getFactoryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getFactoryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getFactoryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getFactoryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getFactoryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getFactoryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_factory.getFactoryAddress_",
                "type": "alias"
            },
            "__wrappers__.getFactoryAddress__encode_return": {
                "decorators": [],
                "pc": 1743,
                "type": "function"
            },
            "__wrappers__.getFactoryAddress__encode_return.Args": {
                "full_name": "__wrappers__.getFactoryAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getFactoryAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getFactoryAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getFactoryAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getFactoryAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getFactoryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 3297,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 3288,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getMigrationAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 2166,
                "type": "function"
            },
            "__wrappers__.getMigrationAddress_.Args": {
                "full_name": "__wrappers__.getMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getMigrationAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getMigrationAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "__wrappers__.getMigrationAddress__encode_return": {
                "decorators": [],
                "pc": 2157,
                "type": "function"
            },
            "__wrappers__.getMigrationAddress__encode_return.Args": {
                "full_name": "__wrappers__.getMigrationAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getMigrationAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getMigrationAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getMigrationAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getSetAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 2077,
                "type": "function"
            },
            "__wrappers__.getSetAddress_.Args": {
                "full_name": "__wrappers__.getSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getSetAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getSetAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "__wrappers__.getSetAddress__encode_return": {
                "decorators": [],
                "pc": 2068,
                "type": "function"
            },
            "__wrappers__.getSetAddress__encode_return.Args": {
                "full_name": "__wrappers__.getSetAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getSetAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getSetAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSetAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getSetAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.materialsOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3616,
                "type": "function"
            },
            "__wrappers__.materialsOf.Args": {
                "full_name": "__wrappers__.materialsOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf.ImplicitArgs": {
                "full_name": "__wrappers__.materialsOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.materialsOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.materialsOf.__wrapped_func": {
                "destination": "__main__.materialsOf",
                "type": "alias"
            },
            "__wrappers__.materialsOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 685,
                "type": "function"
            },
            "__wrappers__.materialsOf_.Args": {
                "full_name": "__wrappers__.materialsOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf_.ImplicitArgs": {
                "full_name": "__wrappers__.materialsOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.materialsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.materialsOf_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.materialsOf_",
                "type": "alias"
            },
            "__wrappers__.materialsOf__encode_return": {
                "decorators": [],
                "pc": 666,
                "type": "function"
            },
            "__wrappers__.materialsOf__encode_return.Args": {
                "full_name": "__wrappers__.materialsOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(materials_len: felt, materials: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.materialsOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.materialsOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.materialsOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.materialsOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.materialsOf_encode_return": {
                "decorators": [],
                "pc": 3597,
                "type": "function"
            },
            "__wrappers__.materialsOf_encode_return.Args": {
                "full_name": "__wrappers__.materialsOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(materials_len: felt, materials: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.materialsOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.materialsOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.materialsOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.materialsOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.materialsOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mintFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3982,
                "type": "function"
            },
            "__wrappers__.mintFT.Args": {
                "full_name": "__wrappers__.mintFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintFT.ImplicitArgs": {
                "full_name": "__wrappers__.mintFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mintFT.__wrapped_func": {
                "destination": "__main__.mintFT",
                "type": "alias"
            },
            "__wrappers__.mintFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 1891,
                "type": "function"
            },
            "__wrappers__.mintFT_.Args": {
                "full_name": "__wrappers__.mintFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintFT_.ImplicitArgs": {
                "full_name": "__wrappers__.mintFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mintFT_.__wrapped_func": {
                "destination": "contracts.briq.minting.mintFT_",
                "type": "alias"
            },
            "__wrappers__.mintFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mintFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mintOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4017,
                "type": "function"
            },
            "__wrappers__.mintOneNFT.Args": {
                "full_name": "__wrappers__.mintOneNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintOneNFT.ImplicitArgs": {
                "full_name": "__wrappers__.mintOneNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintOneNFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mintOneNFT.__wrapped_func": {
                "destination": "__main__.mintOneNFT",
                "type": "alias"
            },
            "__wrappers__.mintOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2011,
                "type": "function"
            },
            "__wrappers__.mintOneNFT_.Args": {
                "full_name": "__wrappers__.mintOneNFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintOneNFT_.ImplicitArgs": {
                "full_name": "__wrappers__.mintOneNFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintOneNFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mintOneNFT_.__wrapped_func": {
                "destination": "contracts.briq.minting.mintOneNFT_",
                "type": "alias"
            },
            "__wrappers__.mintOneNFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mintOneNFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mutateFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4053,
                "type": "function"
            },
            "__wrappers__.mutateFT.Args": {
                "full_name": "__wrappers__.mutateFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateFT.ImplicitArgs": {
                "full_name": "__wrappers__.mutateFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mutateFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mutateFT.__wrapped_func": {
                "destination": "__main__.mutateFT",
                "type": "alias"
            },
            "__wrappers__.mutateFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2720,
                "type": "function"
            },
            "__wrappers__.mutateFT_.Args": {
                "full_name": "__wrappers__.mutateFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateFT_.ImplicitArgs": {
                "full_name": "__wrappers__.mutateFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mutateFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mutateFT_.__wrapped_func": {
                "destination": "contracts.briq.convert_mutate.mutateFT_",
                "type": "alias"
            },
            "__wrappers__.mutateFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mutateFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mutateOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 4091,
                "type": "function"
            },
            "__wrappers__.mutateOneNFT.Args": {
                "full_name": "__wrappers__.mutateOneNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateOneNFT.ImplicitArgs": {
                "full_name": "__wrappers__.mutateOneNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateOneNFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mutateOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mutateOneNFT.__wrapped_func": {
                "destination": "__main__.mutateOneNFT",
                "type": "alias"
            },
            "__wrappers__.mutateOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2916,
                "type": "function"
            },
            "__wrappers__.mutateOneNFT_.Args": {
                "full_name": "__wrappers__.mutateOneNFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateOneNFT_.ImplicitArgs": {
                "full_name": "__wrappers__.mutateOneNFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mutateOneNFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mutateOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mutateOneNFT_.__wrapped_func": {
                "destination": "contracts.briq.convert_mutate.mutateOneNFT_",
                "type": "alias"
            },
            "__wrappers__.mutateOneNFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mutateOneNFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 4247,
                "type": "function"
            },
            "__wrappers__.name.Args": {
                "full_name": "__wrappers__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.ImplicitArgs": {
                "full_name": "__wrappers__.name.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.name.__wrapped_func": {
                "destination": "__main__.name",
                "type": "alias"
            },
            "__wrappers__.name_": {
                "decorators": [
                    "view"
                ],
                "pc": 3393,
                "type": "function"
            },
            "__wrappers__.name_.Args": {
                "full_name": "__wrappers__.name_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name_.ImplicitArgs": {
                "full_name": "__wrappers__.name_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name_.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.name_.__wrapped_func": {
                "destination": "__main__.name_",
                "type": "alias"
            },
            "__wrappers__.name__encode_return": {
                "decorators": [],
                "pc": 3384,
                "type": "function"
            },
            "__wrappers__.name__encode_return.Args": {
                "full_name": "__wrappers__.name__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(name: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.name__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.name__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.name__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.name_encode_return": {
                "decorators": [],
                "pc": 4238,
                "type": "function"
            },
            "__wrappers__.name_encode_return.Args": {
                "full_name": "__wrappers__.name_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(name: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.name_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3452,
                "type": "function"
            },
            "__wrappers__.ownerOf.Args": {
                "full_name": "__wrappers__.ownerOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.ownerOf.__wrapped_func": {
                "destination": "__main__.ownerOf",
                "type": "alias"
            },
            "__wrappers__.ownerOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 457,
                "type": "function"
            },
            "__wrappers__.ownerOf_.Args": {
                "full_name": "__wrappers__.ownerOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.ownerOf_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.ownerOf_",
                "type": "alias"
            },
            "__wrappers__.ownerOf__encode_return": {
                "decorators": [],
                "pc": 448,
                "type": "function"
            },
            "__wrappers__.ownerOf__encode_return.Args": {
                "full_name": "__wrappers__.ownerOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.ownerOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.ownerOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.ownerOf_encode_return": {
                "decorators": [],
                "pc": 3443,
                "type": "function"
            },
            "__wrappers__.ownerOf_encode_return.Args": {
                "full_name": "__wrappers__.ownerOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.ownerOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 1688,
                "type": "function"
            },
            "__wrappers__.setBoxAddress_.Args": {
                "full_name": "__wrappers__.setBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setFactoryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 1777,
                "type": "function"
            },
            "__wrappers__.setFactoryAddress_.Args": {
                "full_name": "__wrappers__.setFactoryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setFactoryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setFactoryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setFactoryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setFactoryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setFactoryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_factory.setFactoryAddress_",
                "type": "alias"
            },
            "__wrappers__.setFactoryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setMigrationAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 2191,
                "type": "function"
            },
            "__wrappers__.setMigrationAddress_.Args": {
                "full_name": "__wrappers__.setMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMigrationAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setMigrationAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMigrationAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setMigrationAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_migration.setMigrationAddress_",
                "type": "alias"
            },
            "__wrappers__.setMigrationAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 3362,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setSetAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 2102,
                "type": "function"
            },
            "__wrappers__.setSetAddress_.Args": {
                "full_name": "__wrappers__.setSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setSetAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setSetAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setSetAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setSetAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "__wrappers__.setSetAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 4281,
                "type": "function"
            },
            "__wrappers__.symbol.Args": {
                "full_name": "__wrappers__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.ImplicitArgs": {
                "full_name": "__wrappers__.symbol.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.symbol.__wrapped_func": {
                "destination": "__main__.symbol",
                "type": "alias"
            },
            "__wrappers__.symbol_": {
                "decorators": [
                    "view"
                ],
                "pc": 3418,
                "type": "function"
            },
            "__wrappers__.symbol_.Args": {
                "full_name": "__wrappers__.symbol_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol_.ImplicitArgs": {
                "full_name": "__wrappers__.symbol_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol_.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.symbol_.__wrapped_func": {
                "destination": "__main__.symbol_",
                "type": "alias"
            },
            "__wrappers__.symbol__encode_return": {
                "decorators": [],
                "pc": 3409,
                "type": "function"
            },
            "__wrappers__.symbol__encode_return.Args": {
                "full_name": "__wrappers__.symbol__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(symbol: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.symbol__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.symbol__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.symbol__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.symbol_encode_return": {
                "decorators": [],
                "pc": 4272,
                "type": "function"
            },
            "__wrappers__.symbol_encode_return.Args": {
                "full_name": "__wrappers__.symbol_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(symbol: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.symbol_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex": {
                "decorators": [
                    "view"
                ],
                "pc": 3785,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.tokenOfOwnerByIndex.__wrapped_func": {
                "destination": "__main__.tokenOfOwnerByIndex",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex_": {
                "decorators": [
                    "view"
                ],
                "pc": 951,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex_.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.tokenOfOwnerByIndex_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return": {
                "decorators": [],
                "pc": 942,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(token_id: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return": {
                "decorators": [],
                "pc": 3776,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(token_id: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.totalSupplyOfMaterial": {
                "decorators": [
                    "view"
                ],
                "pc": 3828,
                "type": "function"
            },
            "__wrappers__.totalSupplyOfMaterial.Args": {
                "full_name": "__wrappers__.totalSupplyOfMaterial.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupplyOfMaterial.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupplyOfMaterial.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.totalSupplyOfMaterial.__wrapped_func": {
                "destination": "__main__.totalSupplyOfMaterial",
                "type": "alias"
            },
            "__wrappers__.totalSupplyOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 988,
                "type": "function"
            },
            "__wrappers__.totalSupplyOfMaterial_.Args": {
                "full_name": "__wrappers__.totalSupplyOfMaterial_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial_.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupplyOfMaterial_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupplyOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.totalSupplyOfMaterial_.__wrapped_func": {
                "destination": "contracts.briq.balance_enumerability.totalSupplyOfMaterial_",
                "type": "alias"
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return": {
                "decorators": [],
                "pc": 979,
                "type": "function"
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return.Args": {
                "full_name": "__wrappers__.totalSupplyOfMaterial__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(supply: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupplyOfMaterial__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.totalSupplyOfMaterial__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return": {
                "decorators": [],
                "pc": 3819,
                "type": "function"
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return.Args": {
                "full_name": "__wrappers__.totalSupplyOfMaterial_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(supply: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupplyOfMaterial_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.totalSupplyOfMaterial_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3862,
                "type": "function"
            },
            "__wrappers__.transferFT.Args": {
                "full_name": "__wrappers__.transferFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFT.ImplicitArgs": {
                "full_name": "__wrappers__.transferFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferFT.__wrapped_func": {
                "destination": "__main__.transferFT",
                "type": "alias"
            },
            "__wrappers__.transferFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2330,
                "type": "function"
            },
            "__wrappers__.transferFT_.Args": {
                "full_name": "__wrappers__.transferFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFT_.ImplicitArgs": {
                "full_name": "__wrappers__.transferFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferFT_.__wrapped_func": {
                "destination": "contracts.briq.transferability.transferFT_",
                "type": "alias"
            },
            "__wrappers__.transferFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3937,
                "type": "function"
            },
            "__wrappers__.transferNFT.Args": {
                "full_name": "__wrappers__.transferNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferNFT.ImplicitArgs": {
                "full_name": "__wrappers__.transferNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferNFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferNFT.__wrapped_func": {
                "destination": "__main__.transferNFT",
                "type": "alias"
            },
            "__wrappers__.transferNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2500,
                "type": "function"
            },
            "__wrappers__.transferNFT_.Args": {
                "full_name": "__wrappers__.transferNFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferNFT_.ImplicitArgs": {
                "full_name": "__wrappers__.transferNFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferNFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferNFT_.__wrapped_func": {
                "destination": "contracts.briq.transferability.transferNFT_",
                "type": "alias"
            },
            "__wrappers__.transferNFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferNFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferOneNFT": {
                "decorators": [
                    "external"
                ],
                "pc": 3899,
                "type": "function"
            },
            "__wrappers__.transferOneNFT.Args": {
                "full_name": "__wrappers__.transferOneNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOneNFT.ImplicitArgs": {
                "full_name": "__wrappers__.transferOneNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOneNFT.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferOneNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferOneNFT.__wrapped_func": {
                "destination": "__main__.transferOneNFT",
                "type": "alias"
            },
            "__wrappers__.transferOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2440,
                "type": "function"
            },
            "__wrappers__.transferOneNFT_.Args": {
                "full_name": "__wrappers__.transferOneNFT_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOneNFT_.ImplicitArgs": {
                "full_name": "__wrappers__.transferOneNFT_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOneNFT_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferOneNFT_.__wrapped_func": {
                "destination": "contracts.briq.transferability.transferOneNFT_",
                "type": "alias"
            },
            "__wrappers__.transferOneNFT__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferOneNFT_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 3328,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability.BalanceSpec": {
                "destination": "contracts.types.BalanceSpec",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT": {
                "decorators": [],
                "pc": 806,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.Args": {
                "full_name": "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nft_ids": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.Return": {
                "cairo_type": "(nft_ids: felt*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._balanceDetailsOfMaterialNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialNFT": {
                "decorators": [],
                "pc": 528,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialNFT.Args": {
                "full_name": "contracts.briq.balance_enumerability._balanceOfMaterialNFT.Args",
                "members": {
                    "balance": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialNFT.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._balanceOfMaterialNFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialNFT.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialsImpl": {
                "decorators": [],
                "pc": 624,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.Args": {
                "full_name": "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "materials": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._balanceOfMaterialsImpl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._fullBalanceOfImpl": {
                "decorators": [],
                "pc": 894,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._fullBalanceOfImpl.Args": {
                "full_name": "contracts.briq.balance_enumerability._fullBalanceOfImpl.Args",
                "members": {
                    "bals": {
                        "cairo_type": "contracts.types.BalanceSpec*",
                        "offset": 2
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._fullBalanceOfImpl.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._fullBalanceOfImpl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._fullBalanceOfImpl.Return": {
                "cairo_type": "(balances_len: felt, balances: contracts.types.BalanceSpec*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._fullBalanceOfImpl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._material_by_owner": {
                "type": "namespace"
            },
            "contracts.briq.balance_enumerability._material_by_owner.Args": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._material_by_owner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._material_by_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._material_by_owner.addr": {
                "decorators": [],
                "pc": 395,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._material_by_owner.addr.Args": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.addr.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.addr.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._material_by_owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._material_by_owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._material_by_owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._material_by_owner.read": {
                "decorators": [],
                "pc": 412,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._material_by_owner.read.Args": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.read.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.read.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.read.Return": {
                "cairo_type": "(material: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._material_by_owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._material_by_owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._material_by_owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._material_by_owner.write": {
                "decorators": [],
                "pc": 427,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._material_by_owner.write.Args": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.write.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.write.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._material_by_owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._material_by_owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._material_by_owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._materialsOfImpl": {
                "decorators": [],
                "pc": 708,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._materialsOfImpl.Args": {
                "full_name": "contracts.briq.balance_enumerability._materialsOfImpl.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "mat_ids": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._materialsOfImpl.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._materialsOfImpl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._materialsOfImpl.Return": {
                "cairo_type": "(materials_len: felt, materials: felt*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._materialsOfImpl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner": {
                "decorators": [],
                "pc": 1173,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.Args": {
                "full_name": "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._owner": {
                "type": "namespace"
            },
            "contracts.briq.balance_enumerability._owner.Args": {
                "full_name": "contracts.briq.balance_enumerability._owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._owner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._owner.addr": {
                "decorators": [],
                "pc": 303,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._owner.addr.Args": {
                "full_name": "contracts.briq.balance_enumerability._owner.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.addr.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._owner.read": {
                "decorators": [],
                "pc": 317,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._owner.read.Args": {
                "full_name": "contracts.briq.balance_enumerability._owner.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.read.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.read.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._owner.write": {
                "decorators": [],
                "pc": 331,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._owner.write.Args": {
                "full_name": "contracts.briq.balance_enumerability._owner.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.write.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._setMaterialByOwner": {
                "decorators": [],
                "pc": 1138,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._setMaterialByOwner.Args": {
                "full_name": "contracts.briq.balance_enumerability._setMaterialByOwner.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._setMaterialByOwner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._setMaterialByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._setMaterialByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._setMaterialByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._setTokenByOwner": {
                "decorators": [],
                "pc": 1007,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._setTokenByOwner.Args": {
                "full_name": "contracts.briq.balance_enumerability._setTokenByOwner.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._setTokenByOwner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._setTokenByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._setTokenByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._setTokenByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._token_by_owner": {
                "type": "namespace"
            },
            "contracts.briq.balance_enumerability._token_by_owner.Args": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._token_by_owner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._token_by_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._token_by_owner.addr": {
                "decorators": [],
                "pc": 344,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._token_by_owner.addr.Args": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.addr.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.addr.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._token_by_owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._token_by_owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._token_by_owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._token_by_owner.read": {
                "decorators": [],
                "pc": 364,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._token_by_owner.read.Args": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.read.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.read.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.read.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._token_by_owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._token_by_owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._token_by_owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._token_by_owner.write": {
                "decorators": [],
                "pc": 380,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._token_by_owner.write.Args": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.write.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.write.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._token_by_owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._token_by_owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._token_by_owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._total_supply": {
                "type": "namespace"
            },
            "contracts.briq.balance_enumerability._total_supply.Args": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._total_supply.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._total_supply.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._total_supply.addr": {
                "decorators": [],
                "pc": 262,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._total_supply.addr.Args": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.addr.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.addr.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._total_supply.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._total_supply.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._total_supply.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._total_supply.read": {
                "decorators": [],
                "pc": 276,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._total_supply.read.Args": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.read.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.read.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.read.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._total_supply.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._total_supply.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._total_supply.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability._total_supply.write": {
                "decorators": [],
                "pc": 290,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._total_supply.write.Args": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.write.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.write.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._total_supply.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._total_supply.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._total_supply.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase": {
                "decorators": [],
                "pc": 1251,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.Args": {
                "full_name": "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "last_known_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "target_index": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_erasePhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase": {
                "decorators": [],
                "pc": 1217,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.Args": {
                "full_name": "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._unsetMaterialByOwner_searchPhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner": {
                "decorators": [],
                "pc": 1045,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner.Args": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase": {
                "decorators": [],
                "pc": 1093,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.Args": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "last_known_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "target_index": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_erasePhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase": {
                "decorators": [],
                "pc": 1056,
                "type": "function"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.Args": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability._unsetTokenByOwner_searchPhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 737,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.Args": {
                "full_name": "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.Return": {
                "cairo_type": "(ft_balance: felt, nft_ids_len: felt, nft_ids: felt*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.balanceDetailsOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.briq.balance_enumerability.balanceOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 476,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterial_.Args": {
                "full_name": "contracts.briq.balance_enumerability.balanceOfMaterial_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterial_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.balanceOfMaterial_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterial_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability.balanceOfMaterials_": {
                "decorators": [
                    "view"
                ],
                "pc": 555,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterials_.Args": {
                "full_name": "contracts.briq.balance_enumerability.balanceOfMaterials_.Args",
                "members": {
                    "materials": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "materials_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterials_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.balanceOfMaterials_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterials_.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.balanceOfMaterials_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.briq.balance_enumerability.fullBalanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 834,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.fullBalanceOf_.Args": {
                "full_name": "contracts.briq.balance_enumerability.fullBalanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.fullBalanceOf_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.fullBalanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.fullBalanceOf_.Return": {
                "cairo_type": "(balances_len: felt, balances: contracts.types.BalanceSpec*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.fullBalanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.briq.balance_enumerability.materialsOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 651,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.materialsOf_.Args": {
                "full_name": "contracts.briq.balance_enumerability.materialsOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.materialsOf_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.materialsOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.materialsOf_.Return": {
                "cairo_type": "(materials_len: felt, materials: felt*)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.materialsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.briq.balance_enumerability.ownerOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 441,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.ownerOf_.Args": {
                "full_name": "contracts.briq.balance_enumerability.ownerOf_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.ownerOf_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.ownerOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.ownerOf_.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.ownerOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_": {
                "decorators": [
                    "view"
                ],
                "pc": 933,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.Args": {
                "full_name": "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.tokenOfOwnerByIndex_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.balance_enumerability.totalSupplyOfMaterial_": {
                "decorators": [
                    "view"
                ],
                "pc": 972,
                "type": "function"
            },
            "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.Args": {
                "full_name": "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.ImplicitArgs": {
                "full_name": "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.Return": {
                "cairo_type": "(supply: felt)",
                "type": "type_definition"
            },
            "contracts.briq.balance_enumerability.totalSupplyOfMaterial_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.ConvertToFT": {
                "type": "namespace"
            },
            "contracts.briq.convert_mutate.ConvertToFT.Args": {
                "full_name": "contracts.briq.convert_mutate.ConvertToFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToFT.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.ConvertToFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.ConvertToFT.SELECTOR": {
                "type": "const",
                "value": 131098218050589708285193267299719914225166976521286216603695800597387712042
            },
            "contracts.briq.convert_mutate.ConvertToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.ConvertToFT.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit": {
                "decorators": [],
                "pc": 2559,
                "type": "function"
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit.Args": {
                "full_name": "contracts.briq.convert_mutate.ConvertToFT.emit.Args",
                "members": {
                    "id_": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner_": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.ConvertToFT.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.briq.convert_mutate.ConvertToFT.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ConvertToFT.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ConvertToNFT": {
                "type": "namespace"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.Args": {
                "full_name": "contracts.briq.convert_mutate.ConvertToNFT.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.ConvertToNFT.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.SELECTOR": {
                "type": "const",
                "value": 539192748151932678710084396035114304729424071208752472708676196981127592146
            },
            "contracts.briq.convert_mutate.ConvertToNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.ConvertToNFT.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit": {
                "decorators": [],
                "pc": 2585,
                "type": "function"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit.Args": {
                "full_name": "contracts.briq.convert_mutate.ConvertToNFT.emit.Args",
                "members": {
                    "id_": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner_": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.ConvertToNFT.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.briq.convert_mutate.ConvertToNFT.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ConvertToNFT.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.Mutate": {
                "type": "namespace"
            },
            "contracts.briq.convert_mutate.Mutate.Args": {
                "full_name": "contracts.briq.convert_mutate.Mutate.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.Mutate.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.Mutate.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.Mutate.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.Mutate.SELECTOR": {
                "type": "const",
                "value": 967867388035029439552127639290524996876884956131565523540352854763760654995
            },
            "contracts.briq.convert_mutate.Mutate.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.Mutate.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.Mutate.emit": {
                "decorators": [],
                "pc": 2531,
                "type": "function"
            },
            "contracts.briq.convert_mutate.Mutate.emit.Args": {
                "full_name": "contracts.briq.convert_mutate.Mutate.emit.Args",
                "members": {
                    "from_material_": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "new_id_": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "old_id_": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_material_": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.Mutate.emit.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.Mutate.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.Mutate.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.Mutate.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.briq.convert_mutate.Mutate.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.Mutate.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.NFTSpec": {
                "destination": "contracts.types.NFTSpec",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._balance": {
                "destination": "contracts.briq.balance_enumerability._balance",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._convertToFT": {
                "decorators": [],
                "pc": 3049,
                "type": "function"
            },
            "contracts.briq.convert_mutate._convertToFT.Args": {
                "full_name": "contracts.briq.convert_mutate._convertToFT.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nfts": {
                        "cairo_type": "contracts.types.NFTSpec*",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate._convertToFT.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate._convertToFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate._convertToFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate._convertToFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate._maybeUnsetMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._owner": {
                "destination": "contracts.briq.balance_enumerability._owner",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._setMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._setMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._setTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._setTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._total_supply": {
                "destination": "contracts.briq.balance_enumerability._total_supply",
                "type": "alias"
            },
            "contracts.briq.convert_mutate._unsetTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._unsetTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.convertOneToFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2939,
                "type": "function"
            },
            "contracts.briq.convert_mutate.convertOneToFT_.Args": {
                "full_name": "contracts.briq.convert_mutate.convertOneToFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertOneToFT_.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.convertOneToFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertOneToFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.convertOneToFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.convertOneToNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 3122,
                "type": "function"
            },
            "contracts.briq.convert_mutate.convertOneToNFT_.Args": {
                "full_name": "contracts.briq.convert_mutate.convertOneToNFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertOneToNFT_.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.convertOneToNFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertOneToNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.convertOneToNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.convertToFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 3071,
                "type": "function"
            },
            "contracts.briq.convert_mutate.convertToFT_.Args": {
                "full_name": "contracts.briq.convert_mutate.convertToFT_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "contracts.types.NFTSpec*",
                        "offset": 2
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertToFT_.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.convertToFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.convertToFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.convertToFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.briq.convert_mutate.mutateFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2611,
                "type": "function"
            },
            "contracts.briq.convert_mutate.mutateFT_.Args": {
                "full_name": "contracts.briq.convert_mutate.mutateFT_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "source_material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "target_material": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.mutateFT_.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.mutateFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.mutateFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.mutateFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.convert_mutate.mutateOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2742,
                "type": "function"
            },
            "contracts.briq.convert_mutate.mutateOneNFT_.Args": {
                "full_name": "contracts.briq.convert_mutate.mutateOneNFT_.Args",
                "members": {
                    "new_uid": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "source_material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "target_material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.mutateOneNFT_.ImplicitArgs": {
                "full_name": "contracts.briq.convert_mutate.mutateOneNFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.convert_mutate.mutateOneNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.convert_mutate.mutateOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.minting.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.briq.minting.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.minting.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.briq.minting._balance": {
                "destination": "contracts.briq.balance_enumerability._balance",
                "type": "alias"
            },
            "contracts.briq.minting._box_address": {
                "destination": "contracts.ecosystem.to_box._box_address",
                "type": "alias"
            },
            "contracts.briq.minting._factory_address": {
                "destination": "contracts.ecosystem.to_factory._factory_address",
                "type": "alias"
            },
            "contracts.briq.minting._maybeUnsetMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.minting._onlyAdminAnd": {
                "destination": "contracts.utilities.authorization._onlyAdminAnd",
                "type": "alias"
            },
            "contracts.briq.minting._onlyAdminAndBoxContract": {
                "decorators": [],
                "pc": 1796,
                "type": "function"
            },
            "contracts.briq.minting._onlyAdminAndBoxContract.Args": {
                "full_name": "contracts.briq.minting._onlyAdminAndBoxContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.briq.minting._onlyAdminAndBoxContract.ImplicitArgs": {
                "full_name": "contracts.briq.minting._onlyAdminAndBoxContract.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.minting._onlyAdminAndBoxContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.minting._onlyAdminAndBoxContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.minting._owner": {
                "destination": "contracts.briq.balance_enumerability._owner",
                "type": "alias"
            },
            "contracts.briq.minting._setMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._setMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.minting._setTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._setTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.minting._total_supply": {
                "destination": "contracts.briq.balance_enumerability._total_supply",
                "type": "alias"
            },
            "contracts.briq.minting._unsetTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._unsetTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.minting.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.minting.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.briq.minting.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.briq.minting.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.briq.minting.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.briq.minting.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.briq.minting.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.briq.minting.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.briq.minting.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "contracts.briq.minting.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.briq.minting.mintFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 1819,
                "type": "function"
            },
            "contracts.briq.minting.mintFT_.Args": {
                "full_name": "contracts.briq.minting.mintFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.minting.mintFT_.ImplicitArgs": {
                "full_name": "contracts.briq.minting.mintFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.minting.mintFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.minting.mintFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.minting.mintOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 1912,
                "type": "function"
            },
            "contracts.briq.minting.mintOneNFT_.Args": {
                "full_name": "contracts.briq.minting.mintOneNFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "uid": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.minting.mintOneNFT_.ImplicitArgs": {
                "full_name": "contracts.briq.minting.mintOneNFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.minting.mintOneNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.minting.mintOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.transferability.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.briq.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.briq.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.briq.transferability._balance": {
                "destination": "contracts.briq.balance_enumerability._balance",
                "type": "alias"
            },
            "contracts.briq.transferability._maybeUnsetMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._maybeUnsetMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.transferability._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.briq.transferability._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.briq.transferability._onlyAdminAnd": {
                "destination": "contracts.utilities.authorization._onlyAdminAnd",
                "type": "alias"
            },
            "contracts.briq.transferability._onlySetAnd": {
                "decorators": [],
                "pc": 2210,
                "type": "function"
            },
            "contracts.briq.transferability._onlySetAnd.Args": {
                "full_name": "contracts.briq.transferability._onlySetAnd.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.briq.transferability._onlySetAnd.ImplicitArgs": {
                "full_name": "contracts.briq.transferability._onlySetAnd.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.transferability._onlySetAnd.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.transferability._onlySetAnd.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.transferability._owner": {
                "destination": "contracts.briq.balance_enumerability._owner",
                "type": "alias"
            },
            "contracts.briq.transferability._setMaterialByOwner": {
                "destination": "contracts.briq.balance_enumerability._setMaterialByOwner",
                "type": "alias"
            },
            "contracts.briq.transferability._setTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._setTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.transferability._set_address": {
                "destination": "contracts.ecosystem.to_set._set_address",
                "type": "alias"
            },
            "contracts.briq.transferability._total_supply": {
                "destination": "contracts.briq.balance_enumerability._total_supply",
                "type": "alias"
            },
            "contracts.briq.transferability._transferNFT": {
                "decorators": [],
                "pc": 2462,
                "type": "function"
            },
            "contracts.briq.transferability._transferNFT.Args": {
                "full_name": "contracts.briq.transferability._transferNFT.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.briq.transferability._transferNFT.ImplicitArgs": {
                "full_name": "contracts.briq.transferability._transferNFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.transferability._transferNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.transferability._transferNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.transferability._unsetTokenByOwner": {
                "destination": "contracts.briq.balance_enumerability._unsetTokenByOwner",
                "type": "alias"
            },
            "contracts.briq.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.briq.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.briq.transferability.getMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "contracts.briq.transferability.getSetAddress_": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "contracts.briq.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.briq.transferability.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "contracts.briq.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.briq.transferability.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.briq.transferability.setSetAddress_": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "contracts.briq.transferability.transferFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2244,
                "type": "function"
            },
            "contracts.briq.transferability.transferFT_.Args": {
                "full_name": "contracts.briq.transferability.transferFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.transferability.transferFT_.ImplicitArgs": {
                "full_name": "contracts.briq.transferability.transferFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.transferability.transferFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.transferability.transferFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.transferability.transferNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2489,
                "type": "function"
            },
            "contracts.briq.transferability.transferNFT_.Args": {
                "full_name": "contracts.briq.transferability.transferNFT_.Args",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.briq.transferability.transferNFT_.ImplicitArgs": {
                "full_name": "contracts.briq.transferability.transferNFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.transferability.transferNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.transferability.transferNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.briq.transferability.transferOneNFT_": {
                "decorators": [
                    "external"
                ],
                "pc": 2352,
                "type": "function"
            },
            "contracts.briq.transferability.transferOneNFT_.Args": {
                "full_name": "contracts.briq.transferability.transferOneNFT_.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.briq.transferability.transferOneNFT_.ImplicitArgs": {
                "full_name": "contracts.briq.transferability.transferOneNFT_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.briq.transferability.transferOneNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.briq.transferability.transferOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.ecosystem.to_box.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_box._box_address.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.addr": {
                "decorators": [],
                "pc": 1618,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.read": {
                "decorators": [],
                "pc": 1623,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.read.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.write": {
                "decorators": [],
                "pc": 1636,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.write.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 1648,
                "type": "function"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 1679,
                "type": "function"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_factory._factory_address.Args": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory._factory_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory._factory_address.addr": {
                "decorators": [],
                "pc": 1707,
                "type": "function"
            },
            "contracts.ecosystem.to_factory._factory_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory._factory_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory._factory_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address.read": {
                "decorators": [],
                "pc": 1712,
                "type": "function"
            },
            "contracts.ecosystem.to_factory._factory_address.read.Args": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory._factory_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory._factory_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory._factory_address.write": {
                "decorators": [],
                "pc": 1725,
                "type": "function"
            },
            "contracts.ecosystem.to_factory._factory_address.write.Args": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory._factory_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory._factory_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory._factory_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_factory.getFactoryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 1737,
                "type": "function"
            },
            "contracts.ecosystem.to_factory.getFactoryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_factory.getFactoryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory.getFactoryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory.getFactoryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory.getFactoryAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory.getFactoryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_factory.setFactoryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 1768,
                "type": "function"
            },
            "contracts.ecosystem.to_factory.setFactoryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_factory.setFactoryAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory.setFactoryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_factory.setFactoryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_factory.setFactoryAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_factory.setFactoryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_migration._migration_address.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.addr": {
                "decorators": [],
                "pc": 2121,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.read": {
                "decorators": [],
                "pc": 2126,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.read.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.write": {
                "decorators": [],
                "pc": 2139,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.write.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 2151,
                "type": "function"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.Args": {
                "full_name": "contracts.ecosystem.to_migration.getMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration.getMigrationAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 2182,
                "type": "function"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.Args": {
                "full_name": "contracts.ecosystem.to_migration.setMigrationAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration.setMigrationAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_set._set_address.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.addr": {
                "decorators": [],
                "pc": 2032,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.read": {
                "decorators": [],
                "pc": 2037,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.read.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.write": {
                "decorators": [],
                "pc": 2050,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.write.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set.getSetAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 2062,
                "type": "function"
            },
            "contracts.ecosystem.to_set.getSetAddress_.Args": {
                "full_name": "contracts.ecosystem.to_set.getSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.getSetAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set.getSetAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.getSetAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set.getSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set.setSetAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 2093,
                "type": "function"
            },
            "contracts.ecosystem.to_set.setSetAddress_.Args": {
                "full_name": "contracts.ecosystem.to_set.setSetAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.setSetAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set.setSetAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.setSetAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set.setSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SELECTOR": {
                "type": "const",
                "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals._approval_all.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.ERC1155_balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance._balance.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.addr": {
                "decorators": [],
                "pc": 216,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.addr.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.read": {
                "decorators": [],
                "pc": 233,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.read.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.write": {
                "decorators": [],
                "pc": 248,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.write.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer": {
                "decorators": [],
                "pc": 1591,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferBatch.SELECTOR": {
                "type": "const",
                "value": 1056950791786541247294868560104033725539105339983750763525460393405057551112
            },
            "contracts.library_erc1155.transferability.TransferBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferBatch.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.SELECTOR": {
                "type": "const",
                "value": 683496163923431355190492689148098320408454942853027468141918222244294018099
            },
            "contracts.library_erc1155.transferability.TransferSingle.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferSingle.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit": {
                "decorators": [],
                "pc": 1561,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "_to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.types.BalanceSpec": {
                "full_name": "contracts.types.BalanceSpec",
                "members": {
                    "balance": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.FTSpec": {
                "full_name": "contracts.types.FTSpec",
                "members": {
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.NFTSpec": {
                "full_name": "contracts.types.NFTSpec",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.ShapeItem": {
                "full_name": "contracts.types.ShapeItem",
                "members": {
                    "color_nft_material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_y_z": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 3251,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 3282,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 3347,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 3313,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 1312,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._only": {
                "decorators": [],
                "pc": 1499,
                "type": "function"
            },
            "contracts.utilities.authorization._only.Args": {
                "full_name": "contracts.utilities.authorization._only.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._only.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._only.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 1517,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization._onlyAdminAnd": {
                "decorators": [],
                "pc": 1545,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdminAnd.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdminAnd.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdminAnd.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdminAnd.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdminAnd.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdminAnd.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 1350,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 1460,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 1481,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 1435,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 1454,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 1448,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 1405,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 1410,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 1423,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 1375,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 1380,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 1393,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 1326,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 78,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 78,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 78,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 78,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 73,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 120,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 120,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 120,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 120,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 8
                        },
                        "pc": 130,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 144,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 156,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 165,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 165,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 165,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 69,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 69,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 64,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 64,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 91,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 91,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 91,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 91,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 1292,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 104,
                            "offset": 0
                        },
                        "pc": 1292,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 104,
                            "offset": 0
                        },
                        "pc": 1292,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 1304,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 176,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 176,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 2
                        },
                        "pc": 196,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 1
                        },
                        "pc": 178,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 54,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 54,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 1
                        },
                        "pc": 61,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 1
                        },
                        "pc": 27,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_contract_address": {
                "decorators": [],
                "pc": 31,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 31,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 1
                        },
                        "pc": 34,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 38,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 38,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 1
                        },
                        "pc": 42,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 46,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 46,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 1
                        },
                        "pc": 51,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 31,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 38,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 46,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 54,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 64,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 69,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 78,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 78,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 78,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 91,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 91,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 91,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 120,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 120,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 120,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 165,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 165,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 176,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 1
                    },
                    "pc": 178,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 2
                    },
                    "pc": 196,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 104,
                        "offset": 0
                    },
                    "pc": 1292,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 104,
                        "offset": 0
                    },
                    "pc": 1292,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
