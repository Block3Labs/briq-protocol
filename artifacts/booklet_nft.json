{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "color_nft_material",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "x_y_z",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "ShapeItem",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "token_id",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "FTSpec",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAttributesRegistryAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setAttributesRegistryAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBoxAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBoxAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_owner",
                    "type": "felt"
                },
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_approved",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                },
                {
                    "name": "_value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_ids_len",
                    "type": "felt"
                },
                {
                    "name": "_ids",
                    "type": "Uint256*"
                },
                {
                    "name": "_values_len",
                    "type": "felt"
                },
                {
                    "name": "_values",
                    "type": "Uint256*"
                }
            ],
            "keys": [],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_value_len",
                    "type": "felt"
                },
                {
                    "name": "_value",
                    "type": "felt*"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "get_shape_contract_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "get_shape_",
            "outputs": [
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "tokenURI_",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                },
                {
                    "name": "shape_contract",
                    "type": "felt"
                }
            ],
            "name": "mint_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                },
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "name": "assign_attribute",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "name": "remove_attribute",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_value_len",
                    "type": "felt"
                },
                {
                    "name": "_value",
                    "type": "felt*"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "approved_address",
                    "type": "felt"
                },
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "on_behalf_of",
                    "type": "felt"
                },
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll_",
            "outputs": [
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "balanceOf_",
            "outputs": [
                {
                    "name": "balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owners_len",
                    "type": "felt"
                },
                {
                    "name": "owners",
                    "type": "felt*"
                },
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "felt*"
                }
            ],
            "name": "balanceOfBatch_",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                },
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                }
            ],
            "name": "safeTransferFrom_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "felt"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "account",
                    "type": "felt"
                },
                {
                    "name": "id",
                    "type": "Uint256"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "accounts_len",
                    "type": "felt"
                },
                {
                    "name": "accounts",
                    "type": "felt*"
                },
                {
                    "name": "ids_len",
                    "type": "felt"
                },
                {
                    "name": "ids",
                    "type": "Uint256*"
                }
            ],
            "name": "balanceOfBatch",
            "outputs": [
                {
                    "name": "balances_len",
                    "type": "felt"
                },
                {
                    "name": "balances",
                    "type": "Uint256*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "operator",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "account",
                    "type": "felt"
                },
                {
                    "name": "operator",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "name": "isApproved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "id",
                    "type": "Uint256"
                },
                {
                    "name": "amount",
                    "type": "Uint256"
                },
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "id",
                    "type": "Uint256"
                }
            ],
            "name": "uri",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": "0x7f3",
                "selector": "0x1b5d966c47351d79022336a404619bf402017905cdc40bd13de7df2f455645"
            },
            {
                "offset": "0x204",
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": "0x245",
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": "0x1e5",
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": "0x2eb",
                "selector": "0x9a63fadec335793c3c0aa51fd6338cd4039274926086140d484b6453c15343"
            },
            {
                "offset": "0x304",
                "selector": "0xa722e584f728d713e0a344410ff0772caf64a7f59ed36945866d15715c5364"
            },
            {
                "offset": "0x8b0",
                "selector": "0x10c403876c66c8baf909caa7fccd3cb58eddd85a32f3a10e5d5f423662d6c79"
            },
            {
                "offset": "0x948",
                "selector": "0x112844c6769836ade5cb7dc37b93a10fc30ddc40322ef9e7e964d0a716ba1e3"
            },
            {
                "offset": "0xa37",
                "selector": "0x116d888b0a9ad3998fcf1cdb2711375c69ac1847e806a480e3585c3da18eac3"
            },
            {
                "offset": "0x8f2",
                "selector": "0x12975dbd1bf8f80a3be19e5a30f03a9edf464878d7bada5dae7ef00481a9384"
            },
            {
                "offset": "0x7b9",
                "selector": "0x13d9296e8ee23d9a89be9be7f4fee0f8462a32e986d7b71dc97deb58eff209a"
            },
            {
                "offset": "0x8cd",
                "selector": "0x176e2c487053e7ed6866780b059c976db79d819266074c8769e1bf22cbdbf82"
            },
            {
                "offset": "0xabe",
                "selector": "0x19d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444"
            },
            {
                "offset": "0x223",
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": "0x917",
                "selector": "0x1e6d3cbfeefef1d609db7db9516768ba077a394d54e97c2fcc92f0e18117083"
            },
            {
                "offset": "0x285",
                "selector": "0x1e7ea19aceb2249ac377cd890237f578578ca88a9820a855fb7fe8f7bc30d33"
            },
            {
                "offset": "0xa90",
                "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
            },
            {
                "offset": "0x782",
                "selector": "0x27ee4b27879250dbac06caf4252a2ebe51d794783336b11a8658c15dd248079"
            },
            {
                "offset": "0x9cb",
                "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
            },
            {
                "offset": "0xa6b",
                "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
            },
            {
                "offset": "0x9f9",
                "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
            },
            {
                "offset": "0xb03",
                "selector": "0x2ee3279dd30231650e0b4a1a3516ab3dc26b6d3dfcb6ef20fb4329cfc1213e1"
            },
            {
                "offset": "0x97e",
                "selector": "0x31bbc41a2f2a54c5a3f04ab6f38b7b8ed0d165b15f3c5a85165254fa7eab4f3"
            },
            {
                "offset": "0x86c",
                "selector": "0x3651fe1f6fb2c1c8c20999a3596e0ef90bb0062bd892a2883e6dff09e4d7fda"
            },
            {
                "offset": "0x735",
                "selector": "0x3d70fa8e86a2ff8432945a3fb3f36eb71c77ce629ddf5443cfd9cc249baa0d2"
            },
            {
                "offset": "0x29e",
                "selector": "0x3fda4b5bddfa34de48f7f87778e53c38712792b406872e9953df114b46b8b41"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 395,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 30,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 394,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 435,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 34,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 432,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.ecosystem.to_attributes_registry",
                    "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry"
                ],
                "end_pc": 698,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 60,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 697,
                "value": "Only the attributes registry may call this function."
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance"
                ],
                "end_pc": 1057,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 90,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1054,
                "value": "Mint would overflow balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance"
                ],
                "end_pc": 1078,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 91,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1073,
                "value": "Insufficient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1232,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 103,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1229,
                "value": "ERC721: either the caller or operator is the zero address"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1236,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 103,
                        "offset": 3
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1232,
                "value": "ERC721: approve to caller"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals",
                    "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1242,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 103,
                        "offset": 8
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1236,
                "value": "ERC721: approved is not a Cairo boolean"
            },
            {
                "accessible_scopes": [
                    "cairopen.math.array",
                    "cairopen.math.array.invert_arr"
                ],
                "end_pc": 1412,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 111,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1406,
                "value": "invert_arr: size must be greather or equal to 1"
            },
            {
                "accessible_scopes": [
                    "cairopen.string.libs.conversion",
                    "cairopen.string.libs.conversion._loop_felt_to_inverted_string"
                ],
                "end_pc": 1534,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 123,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1528,
                "value": "felt_to_string: exceeding max String length 2^15"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.10.3",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x6",
            "0x400780017fff7ff9",
            "0x0",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7c",
            "0x48317fec80007ff9",
            "0x48127ffe7fff8000",
            "0x48487ffb80007ffe",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff70",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6a",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x4c69627261727943616c6c",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeea",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee4",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed2",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecc",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff72",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff32",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff98",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffac",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff91",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8a",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdde",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1d1bc5efa05ad70dc7a0e84a39949caeb2574be324a86f18f58e09d42d6a78c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe99",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe93",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2b",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe43",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa7",
            "0x40127fff7fff7fe8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3c1642488b9e91e5b87d74218388f665b4c91a55300448136c18b6a90407cf3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe33",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2d",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec5",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd02",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce8",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd28",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd17",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd3c",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x20680017fff7fff",
            "0x6",
            "0x400780017fff7ffd",
            "0x8000000000000110000000000000000",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x484680017ffd8000",
            "0x100000000000000000000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc3",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc72",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480280007ffc8000",
            "0x480280017ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb2",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffd7fff8000",
            "0x480280007ffc8000",
            "0x480280017ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x48307fff7ffe8000",
            "0x400280007ffd7fff",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3e",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480280007ffc8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6b",
            "0x400280017ffd7ffe",
            "0x400280007ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1b7e24dbc7e9f5269168b3096497c70e05d3998167db351e2ceab75a8ae9f06",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc17",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc14",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffccd",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcfa",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf2",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6f",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe28000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5a",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007fe0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400b7ffc7fff7ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb7",
            "0x40137fff7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x7",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480280007ffb8000",
            "0x480280007ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffb8000",
            "0x1",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb86",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x6ad9ed7b6318f1bcffefe19df9aeb40d22c36bed567e1925a5ccde0536edd",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb80",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7d",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x2dfea59337e4d10ab6fcff512bb04538a8c9a0d63079dd6e4c05672eddf00d2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6d",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6a",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc23",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc50",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc48",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc33",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4c",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4d",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480680017fff8000",
            "0x0",
            "0x40527ffe7ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x48127ffe7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbff",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf3",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x182d859c0807ba9db63baf8b9d9fdbfeb885d820be6e206b9dab626d995c433",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaed",
            "0x40137fff7fff8001",
            "0x4003800080017ff7",
            "0x4003800180017ff8",
            "0x4003800280017ff9",
            "0x4003800380017ffa",
            "0x4003800480017ffb",
            "0x4003800580017ffc",
            "0x4003800680017ffd",
            "0x4826800180018000",
            "0x7",
            "0x480a7ff57fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe6",
            "0x480a7ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe52",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4c",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fd77fff8000",
            "0x48127fd77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127ffe7fff8000",
            "0x48127fdc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad4",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad1",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffface",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacb",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac8",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb9",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb93",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaa7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7d",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x13",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x4",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffa8000",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ff98000",
            "0x480080007fff8000",
            "0x400080007ffa7fff",
            "0x20780017fff7ffd",
            "0x4",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa22",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0xe",
            "0x40137fff7fff8001",
            "0x40137ffe7fff8002",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa2d",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa98",
            "0x482a7ffd7ffc8000",
            "0x48287ffa7ffe8000",
            "0x400080007ffe7fff",
            "0x20680017fff7ffc",
            "0x7",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2f",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x7",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fda7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x30",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce7",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9cd",
            "0x40137fff7fff8001",
            "0x4802800080008000",
            "0x4002800080017fff",
            "0x4802800180008000",
            "0x4002800180017fff",
            "0x4802800280008000",
            "0x4002800280017fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c4",
            "0x40137fff7fff8002",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x56bc75e2d63100000",
            "0x480680017fff8000",
            "0x100000000000000000000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa5f",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x3",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x21",
            "0x48327fff80018000",
            "0x4802800380008000",
            "0x400080007ffe7fff",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x482480017ffa8000",
            "0x1",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x8",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x14",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x30",
            "0x400280007ffd7fff",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x20780017fff7ff9",
            "0x7",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480a7ff87fff8000",
            "0x480080007ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa0",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x40137ffd7fff8002",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480080007fff8000",
            "0x20680017fff7fff",
            "0x13",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0xf",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x48507ffc7ffa8000",
            "0x482a7ffa7ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x40137ffc7fff8003",
            "0x40137ffd7fff8004",
            "0x40137ffe7fff8005",
            "0x482a7ffa7ffc8000",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48307fff7ffa8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94e",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48327fff7ffa8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482880007ffb8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff92c",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x222cde1c893f24fb4bf6beb830c54e83e32650f5a9cd0f56fa025872c60bdb",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa08",
            "0x480080007fff8000",
            "0x400280007ffb7fff",
            "0x482480017ffe8000",
            "0x1",
            "0x480080007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480080007fff8000",
            "0x400280017ffb7fff",
            "0x482480017ffe8000",
            "0x1",
            "0x480080007ffd8000",
            "0x48307fff7ffe8000",
            "0x40307ff67ff57fff",
            "0x48127ff47fff8000",
            "0x482680017ffb8000",
            "0x2",
            "0x480080007ff48000",
            "0x482480017ff38000",
            "0x1",
            "0x480080007ff78000",
            "0x482480017ff68000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x5d2b00d991f844f219d999a03fe89265412f8b6ecc0a6bffbf3498ce8f4579",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff904",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9bd",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9eb",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e4",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x484480017ffc8000",
            "0x800000000000010fffffffffffffffffffffffffffffffff7fffffffffffff0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7f",
            "0x48127ffa7fff8000",
            "0x48127fd67fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x4003800080007ff9",
            "0x400380007ffd7ff9",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ff98000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x484680017ff98000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff89b",
            "0x4003800080027ffb",
            "0x4003800080017ffb",
            "0x4027800180018003",
            "0x1",
            "0x4826800180028000",
            "0x1",
            "0x40297ffb7fff8004",
            "0x4826800180028000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff88e",
            "0x480a80037fff8000",
            "0x4829800080008004",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbe",
            "0x40137ff97fff8000",
            "0x40137ffa7fff8001",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x68747470733a2f2f6170692e627269712e636f6e737472756374696f6e",
            "0x2f76312f7572692f626f6f6b6c65742f",
            "0x737461726b6e65742d6d61696e6e65742f",
            "0x2e6a736f6e",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x799",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff857",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc41",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3e",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff917",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae1",
            "0x40127fff7fff7fe8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127fe57fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd3b",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f7",
            "0x40137fff7fff8000",
            "0x4003800080007ff7",
            "0x4003800180007ff8",
            "0x400380007ff57ff8",
            "0x402780017ff58001",
            "0x1",
            "0x4826800180008000",
            "0x2",
            "0x484680017ff88000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x484680017ff88000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ee",
            "0x4003800080027ffa",
            "0x4003800080017ffa",
            "0x4027800180018003",
            "0x1",
            "0x4826800180028000",
            "0x1",
            "0x484680017ffa8000",
            "0x2",
            "0x40317fff7ffe8004",
            "0x4826800180028000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x484680017ffa8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7de",
            "0x4003800080047ffc",
            "0x4003800080037ffc",
            "0x4027800180038005",
            "0x1",
            "0x4826800180048000",
            "0x1",
            "0x40297ffc7fff8006",
            "0x4826800180048000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d1",
            "0x480a7ff47fff8000",
            "0x480a7ff67fff8000",
            "0x480680017fff8000",
            "0x2265e9cb4d0ca5983c569b39e7a1a523d6ea342207bb700f558a588f6922f38",
            "0x4829800080008006",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8a8",
            "0x48127ffd7fff8000",
            "0x480a80057fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa67",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed8",
            "0x40137fff7fff8000",
            "0x40137ffd7fff8001",
            "0x482680017ff78000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x484480017ffc8000",
            "0x800000000000010fffffffffffffffffffffffffffffffff7fffffffffffff0",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffaa",
            "0x48127ffe7fff8000",
            "0x480a80017fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdd",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x3",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x480080007feb8000",
            "0x482480017fea8000",
            "0x1",
            "0x480080007fef8000",
            "0x482480017fee8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0c",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc99",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf8",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc08",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb35",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb16",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6c8",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff48000",
            "0x482480017ff38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc8",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf5",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280047ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x5",
            "0x480280047ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x482680017ffd8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffff264985db",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffff176cbe5",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98a",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1d",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff994",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97b",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff10",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a4",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ffb8000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x484680017ffb8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5d9",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff38000",
            "0x482480017ff28000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc8",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c4",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8bd",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x48127fbd7fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb8",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280067ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x7",
            "0x480280067ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x480280057ffd8000",
            "0x480280067ffd8000",
            "0x482680017ffd8000",
            "0x7",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff888",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb7",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff50d",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "25": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 2
                        }
                    }
                }
            ],
            "30": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_equal"
                    ],
                    "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_equal.a": 3,
                            "starkware.cairo.common.math.assert_not_equal.b": 4
                        }
                    }
                }
            ],
            "36": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 5
                        }
                    }
                }
            ],
            "54": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 8,
                            "starkware.cairo.common.math.assert_250_bit.low": 7,
                            "starkware.cairo.common.math.assert_250_bit.value": 6
                        }
                    }
                }
            ],
            "67": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 11,
                            "starkware.cairo.common.math.split_felt.low": 10,
                            "starkware.cairo.common.math.split_felt.value": 9
                        }
                    }
                }
            ],
            "96": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 12,
                            "starkware.cairo.common.math.assert_le_felt.b": 13,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 14
                        }
                    }
                }
            ],
            "106": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "120": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "132": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "141": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 15,
                            "starkware.cairo.common.math.assert_lt_felt.b": 16
                        }
                    }
                }
            ],
            "152": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 18,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 20,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 19,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 17
                        }
                    }
                }
            ],
            "169": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "assert ids.value == 0, 'split_int(): value is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.value": 21
                        }
                    }
                }
            ],
            "173": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "memory[ids.output] = res = (int(ids.value) % PRIME) % ids.base\nassert res < ids.bound, f'split_int(): Limb {res} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.base": 22,
                            "starkware.cairo.common.math.split_int.bound": 23,
                            "starkware.cairo.common.math.split_int.output": 24,
                            "starkware.cairo.common.math.split_int.value": 21
                        }
                    }
                }
            ],
            "194": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 25,
                            "starkware.starknet.common.storage.normalize_address.is_small": 26
                        }
                    }
                }
            ],
            "212": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 25,
                            "starkware.starknet.common.storage.normalize_address.is_250": 27
                        }
                    }
                }
            ],
            "239": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.library_call"
                    ],
                    "code": "syscall_handler.library_call(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.library_call.syscall_ptr": 28
                        }
                    }
                }
            ],
            "247": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 29
                        }
                    }
                }
            ],
            "255": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 30
                        }
                    }
                }
            ],
            "264": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 20,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 31
                        }
                    }
                }
            ],
            "274": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 32
                        }
                    }
                }
            ],
            "476": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 37,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "507": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 40,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "556": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 45,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "590": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 49,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "636": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_attributes_registry",
                        "contracts.ecosystem.to_attributes_registry",
                        "__wrappers__",
                        "__wrappers__.getAttributesRegistryAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 54,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "679": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_attributes_registry",
                        "contracts.ecosystem.to_attributes_registry",
                        "__wrappers__",
                        "__wrappers__.setAttributesRegistryAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 59,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "738": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.getBoxAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 65,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "781": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.setBoxAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 70,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "797": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 72,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "807": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 72,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "835": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 74,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 34,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 35
                        }
                    }
                }
            ],
            "1836": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.token_uri",
                        "contracts.booklet_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.get_shape_contract__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 144,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1887": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.token_uri",
                        "contracts.booklet_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.get_shape__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 147,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1958": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.token_uri",
                        "contracts.booklet_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.tokenURI__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 158,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2046": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.minting",
                        "contracts.booklet_nft.minting",
                        "__wrappers__",
                        "__wrappers__.mint_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 164,
                            "offset": 374
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2201": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.attribute",
                        "contracts.booklet_nft.attribute",
                        "__wrappers__",
                        "__wrappers__.assign_attribute"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 172,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2235": [
                {
                    "accessible_scopes": [
                        "contracts.booklet_nft.attribute",
                        "contracts.booklet_nft.attribute",
                        "__wrappers__",
                        "__wrappers__.remove_attribute"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 174,
                            "offset": 518
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2263": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 178,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2281": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 180,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2318": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.balanceOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 183,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2357": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.balanceOfBatch__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 187,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2452": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.safeTransferFrom_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 195,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2498": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155",
                        "contracts.library_erc1155.IERC1155",
                        "__wrappers__",
                        "__wrappers__.supportsInterface_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 197,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2543": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.balanceOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 201,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2593": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.balanceOfBatch_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 207,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2677": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 215,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2695": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 217,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2774": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc1155.IERC1155_OZ",
                        "contracts.library_erc1155.IERC1155_OZ",
                        "__wrappers__",
                        "__wrappers__.safeTransferFrom"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 222,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2800": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.uri_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 225,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "__main__._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "__main__.assign_attribute": {
                "destination": "contracts.booklet_nft.attribute.assign_attribute",
                "type": "alias"
            },
            "__main__.balanceOf": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOf",
                "type": "alias"
            },
            "__main__.balanceOfBatch": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch",
                "type": "alias"
            },
            "__main__.balanceOfBatch_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "__main__.balanceOf_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getAttributesRegistryAddress_": {
                "destination": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_",
                "type": "alias"
            },
            "__main__.getBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.get_shape_": {
                "destination": "contracts.booklet_nft.token_uri.get_shape_",
                "type": "alias"
            },
            "__main__.get_shape_contract_": {
                "destination": "contracts.booklet_nft.token_uri.get_shape_contract_",
                "type": "alias"
            },
            "__main__.isApprovedForAll": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll",
                "type": "alias"
            },
            "__main__.isApprovedForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "__main__.mint_": {
                "destination": "contracts.booklet_nft.minting.mint_",
                "type": "alias"
            },
            "__main__.remove_attribute": {
                "destination": "contracts.booklet_nft.attribute.remove_attribute",
                "type": "alias"
            },
            "__main__.safeTransferFrom": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom",
                "type": "alias"
            },
            "__main__.safeTransferFrom_": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "__main__.setApprovalForAll": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll",
                "type": "alias"
            },
            "__main__.setApprovalForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "__main__.setAttributesRegistryAddress_": {
                "destination": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_",
                "type": "alias"
            },
            "__main__.setBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.supportsInterface": {
                "destination": "contracts.library_erc1155.IERC1155.supportsInterface",
                "type": "alias"
            },
            "__main__.tokenURI_": {
                "destination": "contracts.booklet_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__main__.uri": {
                "decorators": [
                    "view"
                ],
                "pc": 2784,
                "type": "function"
            },
            "__main__.uri.Args": {
                "full_name": "__main__.uri.Args",
                "members": {
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.uri.ImplicitArgs": {
                "full_name": "__main__.uri.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.uri.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "__main__.uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assign_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 2156,
                "type": "function"
            },
            "__wrappers__.assign_attribute.Args": {
                "full_name": "__wrappers__.assign_attribute.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attribute.ImplicitArgs": {
                "full_name": "__wrappers__.assign_attribute.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attribute.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assign_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assign_attribute.__wrapped_func": {
                "destination": "contracts.booklet_nft.attribute.assign_attribute",
                "type": "alias"
            },
            "__wrappers__.assign_attribute_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 2553,
                "type": "function"
            },
            "__wrappers__.balanceOf.Args": {
                "full_name": "__wrappers__.balanceOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOf",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch": {
                "decorators": [
                    "view"
                ],
                "pc": 2615,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch.Args": {
                "full_name": "__wrappers__.balanceOfBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceOfBatch.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch_": {
                "decorators": [
                    "view"
                ],
                "pc": 2376,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch_.Args": {
                "full_name": "__wrappers__.balanceOfBatch_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceOfBatch_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch__encode_return": {
                "decorators": [],
                "pc": 2357,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch__encode_return.Args": {
                "full_name": "__wrappers__.balanceOfBatch__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfBatch__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOfBatch_encode_return": {
                "decorators": [],
                "pc": 2593,
                "type": "function"
            },
            "__wrappers__.balanceOfBatch_encode_return.Args": {
                "full_name": "__wrappers__.balanceOfBatch_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balances_len: felt, balances: starkware.cairo.common.uint256.Uint256*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOfBatch_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOfBatch_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOfBatch_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceOfBatch_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 2327,
                "type": "function"
            },
            "__wrappers__.balanceOf_.Args": {
                "full_name": "__wrappers__.balanceOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "__wrappers__.balanceOf__encode_return": {
                "decorators": [],
                "pc": 2318,
                "type": "function"
            },
            "__wrappers__.balanceOf__encode_return.Args": {
                "full_name": "__wrappers__.balanceOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf_encode_return": {
                "decorators": [],
                "pc": 2543,
                "type": "function"
            },
            "__wrappers__.balanceOf_encode_return.Args": {
                "full_name": "__wrappers__.balanceOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 485,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 476,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAttributesRegistryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 645,
                "type": "function"
            },
            "__wrappers__.getAttributesRegistryAddress_.Args": {
                "full_name": "__wrappers__.getAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getAttributesRegistryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAttributesRegistryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_",
                "type": "alias"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return": {
                "decorators": [],
                "pc": 636,
                "type": "function"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.Args": {
                "full_name": "__wrappers__.getAttributesRegistryAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAttributesRegistryAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 747,
                "type": "function"
            },
            "__wrappers__.getBoxAddress_.Args": {
                "full_name": "__wrappers__.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress__encode_return": {
                "decorators": [],
                "pc": 738,
                "type": "function"
            },
            "__wrappers__.getBoxAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 516,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 507,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_shape_": {
                "decorators": [
                    "view"
                ],
                "pc": 1922,
                "type": "function"
            },
            "__wrappers__.get_shape_.Args": {
                "full_name": "__wrappers__.get_shape_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape_.ImplicitArgs": {
                "full_name": "__wrappers__.get_shape_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_shape_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.get_shape_.__wrapped_func": {
                "destination": "contracts.booklet_nft.token_uri.get_shape_",
                "type": "alias"
            },
            "__wrappers__.get_shape__encode_return": {
                "decorators": [],
                "pc": 1887,
                "type": "function"
            },
            "__wrappers__.get_shape__encode_return.Args": {
                "full_name": "__wrappers__.get_shape__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "ret_value": {
                        "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__wrappers__.get_shape__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_shape__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_shape__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 5
            },
            "__wrappers__.get_shape__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_shape_contract_": {
                "decorators": [
                    "view"
                ],
                "pc": 1845,
                "type": "function"
            },
            "__wrappers__.get_shape_contract_.Args": {
                "full_name": "__wrappers__.get_shape_contract_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape_contract_.ImplicitArgs": {
                "full_name": "__wrappers__.get_shape_contract_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape_contract_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_shape_contract_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.get_shape_contract_.__wrapped_func": {
                "destination": "contracts.booklet_nft.token_uri.get_shape_contract_",
                "type": "alias"
            },
            "__wrappers__.get_shape_contract__encode_return": {
                "decorators": [],
                "pc": 1836,
                "type": "function"
            },
            "__wrappers__.get_shape_contract__encode_return.Args": {
                "full_name": "__wrappers__.get_shape_contract__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.get_shape_contract__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_shape_contract__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_shape_contract__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_shape_contract__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.get_shape_contract__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 2704,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll.Args": {
                "full_name": "__wrappers__.isApprovedForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 2290,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_.Args": {
                "full_name": "__wrappers__.isApprovedForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll__encode_return": {
                "decorators": [],
                "pc": 2281,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll__encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(is_approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_encode_return": {
                "decorators": [],
                "pc": 2695,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(isApproved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mint_": {
                "decorators": [
                    "external"
                ],
                "pc": 2035,
                "type": "function"
            },
            "__wrappers__.mint_.Args": {
                "full_name": "__wrappers__.mint_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mint_.ImplicitArgs": {
                "full_name": "__wrappers__.mint_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mint_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mint_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mint_.__wrapped_func": {
                "destination": "contracts.booklet_nft.minting.mint_",
                "type": "alias"
            },
            "__wrappers__.mint__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.remove_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 2224,
                "type": "function"
            },
            "__wrappers__.remove_attribute.Args": {
                "full_name": "__wrappers__.remove_attribute.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attribute.ImplicitArgs": {
                "full_name": "__wrappers__.remove_attribute.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attribute.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.remove_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.remove_attribute.__wrapped_func": {
                "destination": "contracts.booklet_nft.attribute.remove_attribute",
                "type": "alias"
            },
            "__wrappers__.remove_attribute_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 2750,
                "type": "function"
            },
            "__wrappers__.safeTransferFrom.Args": {
                "full_name": "__wrappers__.safeTransferFrom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.ImplicitArgs": {
                "full_name": "__wrappers__.safeTransferFrom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.safeTransferFrom.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2430,
                "type": "function"
            },
            "__wrappers__.safeTransferFrom_.Args": {
                "full_name": "__wrappers__.safeTransferFrom_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom_.ImplicitArgs": {
                "full_name": "__wrappers__.safeTransferFrom_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.safeTransferFrom_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 2667,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll.Args": {
                "full_name": "__wrappers__.setApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 2253,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll_.Args": {
                "full_name": "__wrappers__.setApprovalForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll_.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setAttributesRegistryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 670,
                "type": "function"
            },
            "__wrappers__.setAttributesRegistryAddress_.Args": {
                "full_name": "__wrappers__.setAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setAttributesRegistryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setAttributesRegistryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setAttributesRegistryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_",
                "type": "alias"
            },
            "__wrappers__.setAttributesRegistryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 772,
                "type": "function"
            },
            "__wrappers__.setBoxAddress_.Args": {
                "full_name": "__wrappers__.setBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 581,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2507,
                "type": "function"
            },
            "__wrappers__.supportsInterface.Args": {
                "full_name": "__wrappers__.supportsInterface.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.supportsInterface.__wrapped_func": {
                "destination": "contracts.library_erc1155.IERC1155.supportsInterface",
                "type": "alias"
            },
            "__wrappers__.supportsInterface_encode_return": {
                "decorators": [],
                "pc": 2498,
                "type": "function"
            },
            "__wrappers__.supportsInterface_encode_return.Args": {
                "full_name": "__wrappers__.supportsInterface_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.supportsInterface_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 1977,
                "type": "function"
            },
            "__wrappers__.tokenURI_.Args": {
                "full_name": "__wrappers__.tokenURI_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.tokenURI_.__wrapped_func": {
                "destination": "contracts.booklet_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__wrappers__.tokenURI__encode_return": {
                "decorators": [],
                "pc": 1958,
                "type": "function"
            },
            "__wrappers__.tokenURI__encode_return.Args": {
                "full_name": "__wrappers__.tokenURI__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 547,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.uri": {
                "decorators": [
                    "view"
                ],
                "pc": 2819,
                "type": "function"
            },
            "__wrappers__.uri.Args": {
                "full_name": "__wrappers__.uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri.ImplicitArgs": {
                "full_name": "__wrappers__.uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.uri.__wrapped_func": {
                "destination": "__main__.uri",
                "type": "alias"
            },
            "__wrappers__.uri_encode_return": {
                "decorators": [],
                "pc": 2800,
                "type": "function"
            },
            "__wrappers__.uri_encode_return.Args": {
                "full_name": "__wrappers__.uri_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.uri_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.uri_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.uri_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.uri_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.uri_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "cairopen.math.array._loop_invert_arr": {
                "decorators": [],
                "pc": 1435,
                "type": "function"
            },
            "cairopen.math.array._loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array._sub_loop_invert_arr": {
                "decorators": [],
                "pc": 1462,
                "type": "function"
            },
            "cairopen.math.array._sub_loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "struct_index": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "struct_offset": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._sub_loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.math.array.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.math.array.invert_arr": {
                "decorators": [],
                "pc": 1404,
                "type": "function"
            },
            "cairopen.math.array.invert_arr.Args": {
                "full_name": "cairopen.math.array.invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "cairopen.math.array.invert_felt_arr": {
                "decorators": [],
                "pc": 1427,
                "type": "function"
            },
            "cairopen.math.array.invert_felt_arr.Args": {
                "full_name": "cairopen.math.array.invert_felt_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_felt_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_felt_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.squash_dict": {
                "destination": "starkware.cairo.common.squash_dict.squash_dict",
                "type": "alias"
            },
            "cairopen.string.constants.SHORT_STRING_MAX_LEN": {
                "type": "const",
                "value": 31
            },
            "cairopen.string.constants.SHORT_STRING_MAX_VALUE": {
                "type": "const",
                "value": 452312848583266388373324160190187140051835877600158453279131187530910662655
            },
            "cairopen.string.constants.STRING_MAX_LEN": {
                "type": "const",
                "value": 32768
            },
            "cairopen.string.libs.conversion.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.SHORT_STRING_MAX_VALUE": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_VALUE",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string": {
                "decorators": [],
                "pc": 1526,
                "type": "function"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "str_seed": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Return": {
                "cairo_type": "(str_len: felt)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.conversion.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.concat_felt_arr": {
                "destination": "cairopen.math.array.concat_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string": {
                "decorators": [],
                "pc": 1501,
                "type": "function"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Args": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "cairopen.string.libs.conversion.invert_felt_arr": {
                "destination": "cairopen.math.array.invert_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.libs.storage.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.SHORT_STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.storage.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.storage.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.storage.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "cairopen.string.libs.storage.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_data.Args": {
                "full_name": "cairopen.string.libs.storage.strings_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_data.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_len.Args": {
                "full_name": "cairopen.string.libs.storage.strings_len.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_len.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_len.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_len.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.string.String": {
                "full_name": "cairopen.string.string.String",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.FTSpec": {
                "destination": "contracts.types.FTSpec",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.GENESIS_COLLECTION": {
                "destination": "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.IShapeContract": {
                "type": "namespace"
            },
            "contracts.booklet_nft.attribute.IShapeContract.Args": {
                "full_name": "contracts.booklet_nft.attribute.IShapeContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.IShapeContract.CHECK_SHAPE_NUMBERS__SELECTOR": {
                "type": "const",
                "value": 972418874578493670465650598460926003639932514899135824839238336169158782776
            },
            "contracts.booklet_nft.attribute.IShapeContract.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.attribute.IShapeContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.IShapeContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.attribute.IShapeContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.attribute.IShapeContract._SHAPE_SELECTOR": {
                "type": "const",
                "value": 1146484552810070994004327819305039407681482376618709134811073310975423977398
            },
            "contracts.booklet_nft.attribute.IShapeContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.IShapeContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_": {
                "decorators": [],
                "pc": 2056,
                "type": "function"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.Args": {
                "full_name": "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 5
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 7
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 3
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.attribute.IShapeContract.library_call_check_shape_numbers_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 7
            },
            "contracts.booklet_nft.attribute.IShapeContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute._onlyAttributesRegistry": {
                "destination": "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.assign_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 2118,
                "type": "function"
            },
            "contracts.booklet_nft.attribute.assign_attribute.Args": {
                "full_name": "contracts.booklet_nft.attribute.assign_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 6
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 8
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 4
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.assign_attribute.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.attribute.assign_attribute.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.assign_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.attribute.assign_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.booklet_nft.attribute.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.get_shape_contract_": {
                "destination": "contracts.booklet_nft.token_uri.get_shape_contract_",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.booklet_nft.attribute.remove_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 2211,
                "type": "function"
            },
            "contracts.booklet_nft.attribute.remove_attribute.Args": {
                "full_name": "contracts.booklet_nft.attribute.remove_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.remove_attribute.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.attribute.remove_attribute.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.attribute.remove_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.attribute.remove_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.minting.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.minting._box_address": {
                "destination": "contracts.ecosystem.to_box._box_address",
                "type": "alias"
            },
            "contracts.booklet_nft.minting._shape_contract": {
                "destination": "contracts.booklet_nft.token_uri._shape_contract",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.booklet_nft.minting.mint_": {
                "decorators": [
                    "external"
                ],
                "pc": 2000,
                "type": "function"
            },
            "contracts.booklet_nft.minting.mint_.Args": {
                "full_name": "contracts.booklet_nft.minting.mint_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "shape_contract": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.minting.mint_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.minting.mint_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.minting.mint_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.minting.mint_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.GENESIS_COLLECTION": {
                "destination": "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.IShapeContract": {
                "type": "namespace"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.Args": {
                "full_name": "contracts.booklet_nft.token_uri.IShapeContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri.IShapeContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.SHAPE__SELECTOR": {
                "type": "const",
                "value": 60382465155088126496594968383111926804835018812871863530547923311353269211
            },
            "contracts.booklet_nft.token_uri.IShapeContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri.IShapeContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_": {
                "decorators": [],
                "pc": 1747,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.Args": {
                "full_name": "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "global_index": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.Return": {
                "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri.IShapeContract.library_call_shape_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.booklet_nft.token_uri.IShapeContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri.TokenURIHelpers": {
                "destination": "contracts.utilities.token_uri.TokenURIHelpers",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract": {
                "type": "namespace"
            },
            "contracts.booklet_nft.token_uri._shape_contract.Args": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri._shape_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri._shape_contract.addr": {
                "decorators": [],
                "pc": 1788,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri._shape_contract.addr.Args": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.addr.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri._shape_contract.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri._shape_contract.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract.read": {
                "decorators": [],
                "pc": 1802,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri._shape_contract.read.Args": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.read.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.read.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri._shape_contract.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri._shape_contract.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.booklet_nft.token_uri._shape_contract.write": {
                "decorators": [],
                "pc": 1816,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri._shape_contract.write.Args": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.write.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri._shape_contract.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri._shape_contract.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri._shape_contract.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri.data_uri_start": {
                "pc": 1945,
                "type": "label"
            },
            "contracts.booklet_nft.token_uri.get_shape_": {
                "decorators": [
                    "view"
                ],
                "pc": 1864,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri.get_shape_.Args": {
                "full_name": "contracts.booklet_nft.token_uri.get_shape_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.get_shape_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri.get_shape_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.get_shape_.Return": {
                "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri.get_shape_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri.get_shape_contract_": {
                "decorators": [
                    "view"
                ],
                "pc": 1829,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri.get_shape_contract_.Args": {
                "full_name": "contracts.booklet_nft.token_uri.get_shape_contract_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.get_shape_contract_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri.get_shape_contract_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.get_shape_contract_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri.get_shape_contract_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.booklet_nft.token_uri.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 1949,
                "type": "function"
            },
            "contracts.booklet_nft.token_uri.tokenURI_.Args": {
                "full_name": "contracts.booklet_nft.token_uri.tokenURI_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.tokenURI_.ImplicitArgs": {
                "full_name": "contracts.booklet_nft.token_uri.tokenURI_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.booklet_nft.token_uri.tokenURI_.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.booklet_nft.token_uri.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION": {
                "type": "const",
                "value": 1
            },
            "contracts.ecosystem.to_attributes_registry.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr": {
                "decorators": [],
                "pc": 600,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read": {
                "decorators": [],
                "pc": 605,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write": {
                "decorators": [],
                "pc": 618,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry": {
                "decorators": [],
                "pc": 689,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._onlyAttributesRegistry.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 630,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 661,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_box._box_address.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.addr": {
                "decorators": [],
                "pc": 702,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.read": {
                "decorators": [],
                "pc": 707,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.read.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.write": {
                "decorators": [],
                "pc": 720,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.write.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 732,
                "type": "function"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 763,
                "type": "function"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_token_uri": {
                "destination": "contracts.library_erc1155.token_uri.ERC1155_token_uri",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.FALSE": {
                "destination": "contracts.utilities.IERC165.FALSE",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC1155_ID": {
                "destination": "contracts.utilities.IERC165.IERC1155_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC1155_METADATA_ID": {
                "destination": "contracts.utilities.IERC165.IERC1155_METADATA_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.IERC165_ID": {
                "destination": "contracts.utilities.IERC165.IERC165_ID",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.TRUE": {
                "destination": "contracts.utilities.IERC165.TRUE",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_": {
                "decorators": [
                    "view"
                ],
                "pc": 2347,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOfBatch_.Args",
                "members": {
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOfBatch_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 2310,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 2273,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2418,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.safeTransferFrom_.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.safeTransferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 2245,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2462,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.Args": {
                "full_name": "contracts.library_erc1155.IERC1155.supportsInterface.Args",
                "members": {
                    "interfaceId": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155.supportsInterface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._felts_to_uints": {
                "destination": "contracts.utilities.Uint256_felt_conv._felts_to_uints",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ._uints_to_felts": {
                "destination": "contracts.utilities.Uint256_felt_conv._uints_to_felts",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 2526,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOf.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch": {
                "decorators": [
                    "view"
                ],
                "pc": 2574,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Args",
                "members": {
                    "accounts": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "accounts_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "ids": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 3
                    },
                    "ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.Return": {
                "cairo_type": "(balances_len: felt, balances: starkware.cairo.common.uint256.Uint256*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOfBatch_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOfBatch_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.balanceOf_": {
                "destination": "contracts.library_erc1155.IERC1155.balanceOf_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 2687,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.Return": {
                "cairo_type": "(isApproved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.isApprovedForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.isApprovedForAll_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 2724,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 4
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 7
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.safeTransferFrom_": {
                "destination": "contracts.library_erc1155.IERC1155.safeTransferFrom_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 2659,
                "type": "function"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.IERC1155_OZ.setApprovalForAll_": {
                "destination": "contracts.library_erc1155.IERC1155.setApprovalForAll_",
                "type": "alias"
            },
            "contracts.library_erc1155.IERC1155_OZ.uri_": {
                "destination": "contracts.library_erc1155.IERC1155.uri_",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SELECTOR": {
                "type": "const",
                "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit": {
                "decorators": [],
                "pc": 1145,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.emit.Args",
                "members": {
                    "_approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll": {
                "decorators": [],
                "pc": 1269,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.Args",
                "members": {
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._onlyApprovedAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll": {
                "decorators": [],
                "pc": 1229,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals._setExplicitApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_": {
                "decorators": [],
                "pc": 1261,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_": {
                "decorators": [],
                "pc": 1217,
                "type": "function"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals._approval_all.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.addr": {
                "decorators": [],
                "pc": 1171,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.addr.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.read": {
                "decorators": [],
                "pc": 1188,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.read.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.read.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.read.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.write": {
                "decorators": [],
                "pc": 1203,
                "type": "function"
            },
            "contracts.library_erc1155.approvals._approval_all.write.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.write.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.ERC1155_balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch": {
                "decorators": [],
                "pc": 1116,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Args",
                "members": {
                    "balances": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.Return": {
                "cairo_type": "(balance: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._balanceOfBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance": {
                "decorators": [],
                "pc": 1066,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance": {
                "decorators": [],
                "pc": 1047,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_": {
                "decorators": [],
                "pc": 1095,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Args",
                "members": {
                    "owners": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "owners_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_ids": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "token_ids_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.Return": {
                "cairo_type": "(balances_len: felt, balances: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOfBatch_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_": {
                "decorators": [],
                "pc": 1087,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance._balance.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.addr": {
                "decorators": [],
                "pc": 1001,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.addr.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.read": {
                "decorators": [],
                "pc": 1018,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.read.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.write": {
                "decorators": [],
                "pc": 1033,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.write.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.Args": {
                "full_name": "contracts.library_erc1155.token_uri.ERC1155_token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri.ERC1155_token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri.ERC1155_token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri.URI.Args": {
                "full_name": "contracts.library_erc1155.token_uri.URI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.URI.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri.URI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri.URI.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri.URI.SELECTOR": {
                "type": "const",
                "value": 1117463774533926613053234597629606061954066182299846485506120526289006522655
            },
            "contracts.library_erc1155.token_uri.URI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri.URI.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.URI.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri._token_uri.Args": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri._token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri._token_uri.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra": {
                "type": "namespace"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.Args": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri_extra.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.token_uri._token_uri_extra.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._token_uri_extra.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.token_uri.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer": {
                "decorators": [],
                "pc": 1322,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer": {
                "decorators": [],
                "pc": 1349,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_": {
                "decorators": [],
                "pc": 1391,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferBatch.SELECTOR": {
                "type": "const",
                "value": 1056950791786541247294868560104033725539105339983750763525460393405057551112
            },
            "contracts.library_erc1155.transferability.TransferBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferBatch.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.SELECTOR": {
                "type": "const",
                "value": 683496163923431355190492689148098320408454942853027468141918222244294018099
            },
            "contracts.library_erc1155.transferability.TransferSingle.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferSingle.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit": {
                "decorators": [],
                "pc": 1292,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "_to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.types.BalanceSpec": {
                "full_name": "contracts.types.BalanceSpec",
                "members": {
                    "balance": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.FTSpec": {
                "full_name": "contracts.types.FTSpec",
                "members": {
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.NFTSpec": {
                "full_name": "contracts.types.NFTSpec",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.ShapeItem": {
                "full_name": "contracts.types.ShapeItem",
                "members": {
                    "color_nft_material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_y_z": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 470,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 501,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 566,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 532,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.IERC165.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.utilities.IERC165.IERC1155_ID": {
                "type": "const",
                "value": 3652614694
            },
            "contracts.utilities.IERC165.IERC1155_METADATA_ID": {
                "type": "const",
                "value": 243872796
            },
            "contracts.utilities.IERC165.IERC165_ID": {
                "type": "const",
                "value": 33540519
            },
            "contracts.utilities.IERC165.IERC721_ID": {
                "type": "const",
                "value": 2158778573
            },
            "contracts.utilities.IERC165.IERC721_METADATA_ID": {
                "type": "const",
                "value": 1532892063
            },
            "contracts.utilities.IERC165.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt": {
                "decorators": [],
                "pc": 860,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 895,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints": {
                "decorators": [],
                "pc": 961,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.Return": {
                "cairo_type": "(value_len: felt, value: starkware.cairo.common.uint256.Uint256*)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner": {
                "decorators": [],
                "pc": 977,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Args",
                "members": {
                    "out": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felts_to_uints_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt": {
                "decorators": [],
                "pc": 876,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts": {
                "decorators": [],
                "pc": 909,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.Return": {
                "cairo_type": "(value_len: felt, value: felt*)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner": {
                "decorators": [],
                "pc": 925,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Args",
                "members": {
                    "out": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256*",
                        "offset": 1
                    },
                    "value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uints_to_felts_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 450,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.utilities.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.StringCodec": {
                "destination": "contracts.vendor.cairopen.string.ASCII.StringCodec",
                "type": "alias"
            },
            "contracts.utilities.token_uri.TokenURIHelpers": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl": {
                "decorators": [],
                "pc": 1582,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args",
                "members": {
                    "label": {
                        "cairo_type": "codeoffset",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number": {
                "decorators": [],
                "pc": 1655,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args",
                "members": {
                    "data_in": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "data_out": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "i": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "leading_zero": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "sum": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Return": {
                "cairo_type": "(sum: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 6
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl": {
                "decorators": [],
                "pc": 1634,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.URI.Args": {
                "full_name": "contracts.utilities.token_uri.URI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.URI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.URI.SELECTOR": {
                "type": "const",
                "value": 1117463774533926613053234597629606061954066182299846485506120526289006522655
            },
            "contracts.utilities.token_uri.URI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.utilities.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.utilities.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.utilities.token_uri.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.utilities.token_uri.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.split_int": {
                "destination": "starkware.cairo.common.math.split_int",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec": {
                "type": "namespace"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.CHAR_SIZE": {
                "type": "const",
                "value": 256
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.LAST_CHAR_MASK": {
                "type": "const",
                "value": 255
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.NUMERICAL_OFFSET": {
                "type": "const",
                "value": 48
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string": {
                "decorators": [],
                "pc": 1572,
                "type": "function"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_assert_char_encoding": {
                "destination": "cairopen.string.libs.conversion.conversion_assert_char_encoding",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_felt_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_felt_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_arr_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_arr_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_delete": {
                "destination": "cairopen.string.libs.storage.storage_delete",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_read": {
                "destination": "cairopen.string.libs.storage.storage_read",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write": {
                "destination": "cairopen.string.libs.storage.storage_write",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write_from_char_arr": {
                "destination": "cairopen.string.libs.storage.storage_write_from_char_arr",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 301,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 411,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 432,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 386,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 405,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 399,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 356,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 361,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 374,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 326,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 331,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 344,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 277,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 54,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 54,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 54,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 54,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 40,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 96,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 8
                        },
                        "pc": 106,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 120,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 132,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 141,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 36,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 36,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 45,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal": {
                "decorators": [],
                "pc": 30,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_equal.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 25,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 25,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 67,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 67,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 67,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 67,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int": {
                "decorators": [],
                "pc": 167,
                "type": "function"
            },
            "starkware.cairo.common.math.split_int.Args": {
                "full_name": "starkware.cairo.common.math.split_int.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bound": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_int.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_int.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int.base": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.base",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 167,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.bound": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.bound",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 167,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.output": {
                "cairo_type": "felt*",
                "full_name": "starkware.cairo.common.math.split_int.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 167,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 167,
                        "value": "[cast(fp + (-7), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 152,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 152,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 152,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 152,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 152,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 830,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 835,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 74,
                            "offset": 0
                        },
                        "pc": 835,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 74,
                            "offset": 0
                        },
                        "pc": 835,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 847,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 797,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 72,
                            "offset": 0
                        },
                        "pc": 797,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 821,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 807,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 791,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "cairo_type": "codeoffset",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 793,
                "type": "label"
            },
            "starkware.cairo.common.squash_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_check": {
                "decorators": [],
                "pc": 855,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_check.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 192,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 192,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 2
                        },
                        "pc": 212,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 1
                        },
                        "pc": 194,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 267,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 0
                        },
                        "pc": 267,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 1
                        },
                        "pc": 274,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 244,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 244,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 1
                        },
                        "pc": 247,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.library_call": {
                "decorators": [],
                "pc": 232,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.library_call.Args": {
                "full_name": "starkware.starknet.common.syscalls.library_call.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.library_call.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.library_call.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.library_call.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.library_call.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.library_call.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 232,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 1
                        },
                        "pc": 239,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 251,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 251,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 1
                        },
                        "pc": 255,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 259,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 20,
                            "offset": 0
                        },
                        "pc": 259,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 20,
                            "offset": 1
                        },
                        "pc": 264,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 25,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 36,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 54,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 54,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 54,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 67,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 67,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 67,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 152,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 152,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 152,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 152,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 167,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 167,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 167,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 167,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 192,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 1
                    },
                    "pc": 194,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 2
                    },
                    "pc": 212,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 232,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 244,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 251,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 20,
                        "offset": 0
                    },
                    "pc": 259,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 72,
                        "offset": 0
                    },
                    "pc": 797,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 74,
                        "offset": 0
                    },
                    "pc": 835,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 74,
                        "offset": 0
                    },
                    "pc": 835,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
