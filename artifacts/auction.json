{
    "abi": [
        {
            "members": [
                {
                    "name": "bidder",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "auction_index",
                    "offset": 1,
                    "type": "felt"
                },
                {
                    "name": "box_token_id",
                    "offset": 2,
                    "type": "felt"
                },
                {
                    "name": "bid_amount",
                    "offset": 3,
                    "type": "felt"
                }
            ],
            "name": "BidData",
            "size": 4,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "box_token_id",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "total_supply",
                    "offset": 1,
                    "type": "felt"
                },
                {
                    "name": "auction_start",
                    "offset": 2,
                    "type": "felt"
                },
                {
                    "name": "auction_duration",
                    "offset": 3,
                    "type": "felt"
                },
                {
                    "name": "initial_price",
                    "offset": 4,
                    "type": "felt"
                }
            ],
            "name": "AuctionData",
            "size": 5,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBoxAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBoxAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "bidder",
                    "type": "felt"
                },
                {
                    "name": "box_token_id",
                    "type": "felt"
                },
                {
                    "name": "bid_amount",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Bid",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "bid",
                    "type": "BidData"
                }
            ],
            "name": "make_bid",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "bids_len",
                    "type": "felt"
                },
                {
                    "name": "bids",
                    "type": "BidData*"
                }
            ],
            "name": "close_auction",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "receiver",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "felt"
                }
            ],
            "name": "transfer_funds",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "auction_index",
                    "type": "felt"
                }
            ],
            "name": "get_price",
            "outputs": [
                {
                    "name": "price",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "get_auction_data",
            "outputs": [
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "AuctionData*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": "0x4ba",
                "selector": "0x15cbdfd86e04fc1247c8cea1f9f6c9c0d92f1f1668c7a46591ed6e4091fbad"
            },
            {
                "offset": "0x194",
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": "0x1d3",
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": "0x473",
                "selector": "0x751a9d6ae67a437ef52b7158a74592b1bdfab0e222f1d7ef873d8ef672c2c3"
            },
            {
                "offset": "0x176",
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": "0x313",
                "selector": "0x9a63fadec335793c3c0aa51fd6338cd4039274926086140d484b6453c15343"
            },
            {
                "offset": "0x32b",
                "selector": "0xa722e584f728d713e0a344410ff0772caf64a7f59ed36945866d15715c5364"
            },
            {
                "offset": "0x1b2",
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": "0x598",
                "selector": "0x22c2588b4d9cccb5d134343c37cc7ee5e8191ef50a2b2a7a17f6ede5726e10d"
            },
            {
                "offset": "0x552",
                "selector": "0x273869799b60805eb1234567119139c190ff198cdfb89caf331322b767266e8"
            },
            {
                "offset": "0x40b",
                "selector": "0x3cc1b2f70544db698a164818a3f5b282889a5ffac4c10aa0287378d6aaa0194"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 284,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 23,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 283,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 324,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 27,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 321,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 876,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 19
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 871,
                "value": "box_token_id does not match auction_index"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 887,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 22
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 876,
                "value": "Bid lower than price"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 901,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 52
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 890,
                "value": "Bid is too early"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 920,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 76
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 901,
                "value": "Bid is too late"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 1009,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 207
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1000,
                "value": "Bid greater than allowance"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 1021,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 291
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1015,
                "value": "Bid greater than balance"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.make_bid"
                ],
                "end_pc": 1024,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 110,
                        "offset": 338
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1021,
                "value": "Bid must be greater than 0"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib._make_direct_bid"
                ],
                "end_pc": 1101,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 114,
                        "offset": 69
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1091,
                "value": "Failed to transfer ETH funds"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.transfer_funds"
                ],
                "end_pc": 1197,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 124,
                        "offset": 49
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1188,
                "value": "Failed to approve"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.transfer_funds"
                ],
                "end_pc": 1206,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 124,
                        "offset": 77
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1197,
                "value": "Failed to transfer ETH funds"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.try_bid"
                ],
                "end_pc": 1270,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 129,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1266,
                "value": "All bids exhausted"
            },
            {
                "accessible_scopes": [
                    "contracts.auction.auction_lib",
                    "contracts.auction.auction_lib.try_bid"
                ],
                "end_pc": 1279,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 129,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1274,
                "value": "Bids incorrectly ordered"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check"
        ],
        "compiler_version": "0.10.0",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574436f6e747261637441646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574426c6f636b54696d657374616d70",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff59",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff41",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3b",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff64",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed2",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff24",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff99",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6b",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4a",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5d",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3e",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe08",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf4",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48307ffd80007ffe",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd1",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe30",
            "0x482480017fff8000",
            "0x2",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x480080017ffb8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb9",
            "0x40137fff7fff8000",
            "0x4003800080007ffc",
            "0x4003800180007ffd",
            "0x4826800180008000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1e888a1026b19c8c0b57c72d63ed1737106aa10034105b980ba117bd0c29fe1",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe17",
            "0x482480017fff8000",
            "0x2",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480080007ffc8000",
            "0x480080017ffb8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda0",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x83afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfd",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd87",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde3",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff87fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6d",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdca",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd75",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x1",
            "0x96",
            "0x637cabb0",
            "0x2a300",
            "0xb1a2bc2ec50000",
            "0x2",
            "0x32",
            "0x637cabb0",
            "0x2a300",
            "0x2c68af0bb140000",
            "0x3",
            "0x5",
            "0x637cabb0",
            "0x2a300",
            "0x6f05b59d3b20000",
            "0x4",
            "0x96",
            "0x637f4eb0",
            "0x2a300",
            "0xb1a2bc2ec50000",
            "0x5",
            "0x32",
            "0x637f4eb0",
            "0x2a300",
            "0x2c68af0bb140000",
            "0x6",
            "0x5",
            "0x637f4eb0",
            "0x2a300",
            "0x6f05b59d3b20000",
            "0x7",
            "0x96",
            "0x6381f1b0",
            "0x2a300",
            "0xb1a2bc2ec50000",
            "0x8",
            "0x32",
            "0x6381f1b0",
            "0x2a300",
            "0x2c68af0bb140000",
            "0x9",
            "0x5",
            "0x6381f1b0",
            "0x2a300",
            "0x6f05b59d3b20000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3c1642488b9e91e5b87d74218388f665b4c91a55300448136c18b6a90407cf3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9c",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd96",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2f",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc2",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x3e727d37704e42fa5fbf46503274ce0a243e57923f61bdd6e08df243633423d",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbc",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd4a",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1e",
            "0x400a7ffa7fff7fff",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb6",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb3",
            "0x480680017fff8000",
            "0x2b9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea7",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x48307fff7ffd8000",
            "0x400180007fff7ffc",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x4",
            "0x48307fff7ff98000",
            "0x480a7ff97fff8000",
            "0x480080007ffe8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcca",
            "0x48127fd67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0e",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x2",
            "0x48307fff7fdb8000",
            "0x48127ff57fff8000",
            "0x480080007ffe8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbc",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x2",
            "0x48307fff7fc38000",
            "0x480080007fff8000",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x3",
            "0x48307fff7fbe8000",
            "0x480080007fff8000",
            "0x48127ff57fff8000",
            "0x48127fdc7fff8000",
            "0x48307ffd7ff88000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca9",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x1",
            "0x48307fff7fa58000",
            "0x480080007fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x2d",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x48307fff7fa08000",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x1",
            "0x48307fff7f9c8000",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x2",
            "0x48307fff7f988000",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x3",
            "0x48307fff7f948000",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x4",
            "0x48307fff7f908000",
            "0x48127faf7fff8000",
            "0x480a7ff87fff8000",
            "0x48127fe47fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480080007fe88000",
            "0x480080007feb8000",
            "0x480080007fee8000",
            "0x480080007ff18000",
            "0x480080007ff48000",
            "0x1104800180018000",
            "0x53",
            "0x208b7fff7fff7ffe",
            "0x48127fc27fff8000",
            "0x480a7ff87fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed8",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca8",
            "0x48127ffe7fff8000",
            "0x48127ff67fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x480a7ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe68",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe49",
            "0x48127ffd7fff8000",
            "0x48127fc07fff8000",
            "0x48127fc07fff8000",
            "0x48127fe07fff8000",
            "0x48127fe07fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe36",
            "0x400680017fff7fff",
            "0x1",
            "0x48127fca7fff8000",
            "0x48127f8c7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb7",
            "0x48127faa7fff8000",
            "0x48127faa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2a",
            "0x400680017fff7fff",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc16",
            "0x48127fc97fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff39",
            "0x48127ffe7fff8000",
            "0x48127fae7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff43",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee0",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc57",
            "0x48127ffe7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7e",
            "0x40137ffc7fff8000",
            "0x20780017fff7ffd",
            "0x12",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127fd57fff8000",
            "0x48127fda7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x8e",
            "0x10780017fff7fff",
            "0x1a",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x480a7ff57fff8000",
            "0x48127fd97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2e",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127fb87fff8000",
            "0x48127fbd7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x74",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbaf",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x7e",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x4",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7e",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe10",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd9",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbdd",
            "0x48127ffe7fff8000",
            "0x48127ff07fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x48127ff67fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde8",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x480a7ffc7fff8000",
            "0x48127fd27fff8000",
            "0x48127fd27fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdac",
            "0x48127ffd7fff8000",
            "0x48127fb77fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb32",
            "0x40137fff7fff8000",
            "0x4003800080007ff8",
            "0x4003800180007ff9",
            "0x4003800280007ffa",
            "0x4003800380007ffb",
            "0x4003800480007ffc",
            "0x400380007ff67ffc",
            "0x402780017ff68001",
            "0x1",
            "0x4826800180008000",
            "0x5",
            "0x40297ffc7fff8002",
            "0x4826800180008000",
            "0x5",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb23",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x31bbc41a2f2a54c5a3f04ab6f38b7b8ed0d165b15f3c5a85165254fa7eab4f3",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb83",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20780017fff7ff8",
            "0xa",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480280037ff98000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb42",
            "0x480a7ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7f",
            "0x48127ffe7fff8000",
            "0x480a7ff67fff8000",
            "0x48127ff77fff8000",
            "0x480280037ff98000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda6",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",
            "0x480280007ff98000",
            "0x48127fd97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd69",
            "0x20680017fff7fff",
            "0x10",
            "0x48127ffd7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffc7fff8000",
            "0x482680017ff88000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ff98000",
            "0x4",
            "0x480280007ff98000",
            "0x480280017ff98000",
            "0x480280027ff98000",
            "0x480280037ff98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde0",
            "0x40137ffd7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127fa17fff8000",
            "0x480280007ff98000",
            "0x480280027ff98000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9a",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x2b9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd0",
            "0x480680017fff8000",
            "0x5",
            "0x48487ffd7fff8000",
            "0x482480017fff8000",
            "0x4",
            "0x48307fff7ffc8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x2b9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca4",
            "0x480680017fff8000",
            "0x2e6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa93",
            "0x40137fff7fff8000",
            "0x48307ff580007ffc",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x484480017ffc8000",
            "0x666666666666674000000000000000000000000000000000000000000000001",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x33",
            "0x4828800080007fff",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x484480017ffc8000",
            "0x666666666666674000000000000000000000000000000000000000000000001",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ffb8000",
            "0x5",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x484680017ffb8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa72",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc7",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x2b9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc58",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x48307fff7ffd8000",
            "0x480080007fff8000",
            "0x400280007ffd7fff",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x482480017fff8000",
            "0x1",
            "0x48307fff7ff88000",
            "0x480080007fff8000",
            "0x400280017ffd7fff",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x482480017fff8000",
            "0x2",
            "0x48307fff7ff38000",
            "0x480080007fff8000",
            "0x400280027ffd7fff",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x482480017fff8000",
            "0x3",
            "0x48307fff7fee8000",
            "0x480080007fff8000",
            "0x400280037ffd7fff",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x5",
            "0x482480017fff8000",
            "0x4",
            "0x48307fff7fe98000",
            "0x480080007fff8000",
            "0x400280047ffd7fff",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
            "0x208b7fff7fff7ffe"
        ],
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "6": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "14": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "17": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "19": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 2
                        }
                    }
                }
            ],
            "24": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 3
                        }
                    }
                }
            ],
            "33": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 6,
                            "starkware.cairo.common.math.split_felt.low": 5,
                            "starkware.cairo.common.math.split_felt.value": 4
                        }
                    }
                }
            ],
            "62": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 7,
                            "starkware.cairo.common.math.assert_le_felt.b": 8,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 9
                        }
                    }
                }
            ],
            "72": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "86": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "98": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "114": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 10
                        }
                    }
                }
            ],
            "122": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 11
                        }
                    }
                }
            ],
            "129": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_contract_address"
                    ],
                    "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 12
                        }
                    }
                }
            ],
            "136": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_block_timestamp"
                    ],
                    "code": "syscall_handler.get_block_timestamp(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": 13
                        }
                    }
                }
            ],
            "144": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 14
                        }
                    }
                }
            ],
            "153": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 15
                        }
                    }
                }
            ],
            "163": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 16
                        }
                    }
                }
            ],
            "365": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 30,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "395": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 33,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "443": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 38,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "476": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 42,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "485": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 43,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 17
                        }
                    }
                }
            ],
            "495": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 43,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 17
                        }
                    }
                }
            ],
            "778": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.getBoxAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 103,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "820": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_box",
                        "contracts.ecosystem.to_box",
                        "__wrappers__",
                        "__wrappers__.setBoxAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 108,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1047": [
                {
                    "accessible_scopes": [
                        "contracts.auction.auction_lib",
                        "contracts.auction.auction_lib",
                        "__wrappers__",
                        "__wrappers__.make_bid"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 113,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1159": [
                {
                    "accessible_scopes": [
                        "contracts.auction.auction_lib",
                        "contracts.auction.auction_lib",
                        "__wrappers__",
                        "__wrappers__.close_auction"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 122,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1220": [
                {
                    "accessible_scopes": [
                        "contracts.auction.auction_lib",
                        "contracts.auction.auction_lib",
                        "__wrappers__",
                        "__wrappers__.transfer_funds"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 126,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1353": [
                {
                    "accessible_scopes": [
                        "contracts.auction.auction_lib",
                        "contracts.auction.auction_lib",
                        "__wrappers__",
                        "__wrappers__.get_price_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 133,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1410": [
                {
                    "accessible_scopes": [
                        "contracts.auction.auction_lib",
                        "contracts.auction.auction_lib",
                        "__wrappers__",
                        "__wrappers__.get_auction_data_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 137,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.close_auction": {
                "destination": "contracts.auction.auction_lib.close_auction",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.get_auction_data": {
                "destination": "contracts.auction.auction_lib.get_auction_data",
                "type": "alias"
            },
            "__main__.get_price": {
                "destination": "contracts.auction.auction_lib.get_price",
                "type": "alias"
            },
            "__main__.make_bid": {
                "destination": "contracts.auction.auction_lib.make_bid",
                "type": "alias"
            },
            "__main__.setBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.transfer_funds": {
                "destination": "contracts.auction.auction_lib.transfer_funds",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.close_auction": {
                "decorators": [
                    "external"
                ],
                "pc": 1139,
                "type": "function"
            },
            "__wrappers__.close_auction.Args": {
                "full_name": "__wrappers__.close_auction.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.close_auction.ImplicitArgs": {
                "full_name": "__wrappers__.close_auction.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.close_auction.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.close_auction.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.close_auction.__wrapped_func": {
                "destination": "contracts.auction.auction_lib.close_auction",
                "type": "alias"
            },
            "__wrappers__.close_auction_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 374,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 365,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 787,
                "type": "function"
            },
            "__wrappers__.getBoxAddress_.Args": {
                "full_name": "__wrappers__.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.getBoxAddress__encode_return": {
                "decorators": [],
                "pc": 778,
                "type": "function"
            },
            "__wrappers__.getBoxAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBoxAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBoxAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBoxAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 404,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 395,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_auction_data": {
                "decorators": [
                    "view"
                ],
                "pc": 1432,
                "type": "function"
            },
            "__wrappers__.get_auction_data.Args": {
                "full_name": "__wrappers__.get_auction_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_auction_data.ImplicitArgs": {
                "full_name": "__wrappers__.get_auction_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_auction_data.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_auction_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.get_auction_data.__wrapped_func": {
                "destination": "contracts.auction.auction_lib.get_auction_data",
                "type": "alias"
            },
            "__wrappers__.get_auction_data_encode_return": {
                "decorators": [],
                "pc": 1410,
                "type": "function"
            },
            "__wrappers__.get_auction_data_encode_return.Args": {
                "full_name": "__wrappers__.get_auction_data_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(data_len: felt, data: contracts.auction.auction_lib.AuctionData*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.get_auction_data_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_auction_data_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_auction_data_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_auction_data_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.get_auction_data_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_price": {
                "decorators": [
                    "view"
                ],
                "pc": 1362,
                "type": "function"
            },
            "__wrappers__.get_price.Args": {
                "full_name": "__wrappers__.get_price.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price.ImplicitArgs": {
                "full_name": "__wrappers__.get_price.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_price.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.get_price.__wrapped_func": {
                "destination": "contracts.auction.auction_lib.get_price",
                "type": "alias"
            },
            "__wrappers__.get_price_encode_return": {
                "decorators": [],
                "pc": 1353,
                "type": "function"
            },
            "__wrappers__.get_price_encode_return.Args": {
                "full_name": "__wrappers__.get_price_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(price: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.get_price_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_price_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_price_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_price_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.get_price_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.make_bid": {
                "decorators": [
                    "external"
                ],
                "pc": 1035,
                "type": "function"
            },
            "__wrappers__.make_bid.Args": {
                "full_name": "__wrappers__.make_bid.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.make_bid.ImplicitArgs": {
                "full_name": "__wrappers__.make_bid.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.make_bid.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.make_bid.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.make_bid.__wrapped_func": {
                "destination": "contracts.auction.auction_lib.make_bid",
                "type": "alias"
            },
            "__wrappers__.make_bid_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 811,
                "type": "function"
            },
            "__wrappers__.setBoxAddress_.Args": {
                "full_name": "__wrappers__.setBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBoxAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBoxAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBoxAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_box.setBoxAddress_",
                "type": "alias"
            },
            "__wrappers__.setBoxAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 467,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transfer_funds": {
                "decorators": [
                    "external"
                ],
                "pc": 1210,
                "type": "function"
            },
            "__wrappers__.transfer_funds.Args": {
                "full_name": "__wrappers__.transfer_funds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transfer_funds.ImplicitArgs": {
                "full_name": "__wrappers__.transfer_funds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transfer_funds.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transfer_funds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transfer_funds.__wrapped_func": {
                "destination": "contracts.auction.auction_lib.transfer_funds",
                "type": "alias"
            },
            "__wrappers__.transfer_funds_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 434,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.auction.auction_lib.AuctionData": {
                "full_name": "contracts.auction.auction_lib.AuctionData",
                "members": {
                    "auction_duration": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "auction_start": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "box_token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "initial_price": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "total_supply": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.auction.auction_lib.Bid": {
                "type": "namespace"
            },
            "contracts.auction.auction_lib.Bid.Args": {
                "full_name": "contracts.auction.auction_lib.Bid.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.auction.auction_lib.Bid.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.Bid.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.auction.auction_lib.Bid.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.Bid.SELECTOR": {
                "type": "const",
                "value": 1765355086904052440109840560063430717445362440580517354105078949199507309117
            },
            "contracts.auction.auction_lib.Bid.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.Bid.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.auction.auction_lib.Bid.emit": {
                "decorators": [],
                "pc": 829,
                "type": "function"
            },
            "contracts.auction.auction_lib.Bid.emit.Args": {
                "full_name": "contracts.auction.auction_lib.Bid.emit.Args",
                "members": {
                    "bid_amount": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bidder": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "box_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.Bid.emit.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.Bid.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.auction.auction_lib.Bid.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.Bid.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.auction.auction_lib.Bid.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.auction.auction_lib.Bid.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.auction.auction_lib.BidData": {
                "full_name": "contracts.auction.auction_lib.BidData",
                "members": {
                    "auction_index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "bid_amount": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "bidder": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "box_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.auction.auction_lib.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.auction.auction_lib.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IBoxContract": {
                "type": "namespace"
            },
            "contracts.auction.auction_lib.IBoxContract.Args": {
                "full_name": "contracts.auction.auction_lib.IBoxContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.auction.auction_lib.IBoxContract.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.IBoxContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.auction.auction_lib.IBoxContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.IBoxContract.SAFETRANSFERFROM__SELECTOR": {
                "type": "const",
                "value": 1405942714368955432876407261113466378321199369614394545785813874870464460019
            },
            "contracts.auction.auction_lib.IBoxContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.IBoxContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IBoxContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IBoxContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IBoxContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_": {
                "decorators": [],
                "pc": 1229,
                "type": "function"
            },
            "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.Args": {
                "full_name": "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 6
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.IBoxContract.safeTransferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.auction.auction_lib.IERC20": {
                "destination": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20",
                "type": "alias"
            },
            "contracts.auction.auction_lib.IERC721": {
                "destination": "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721",
                "type": "alias"
            },
            "contracts.auction.auction_lib.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.auction.auction_lib.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.auction.auction_lib._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.auction.auction_lib._get_auction_data": {
                "decorators": [],
                "pc": 1451,
                "type": "function"
            },
            "contracts.auction.auction_lib._get_auction_data.Args": {
                "full_name": "contracts.auction.auction_lib._get_auction_data.Args",
                "members": {
                    "data": {
                        "cairo_type": "contracts.auction.auction_lib.AuctionData*",
                        "offset": 1
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.auction.auction_lib._get_auction_data.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib._get_auction_data.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib._get_auction_data.Return": {
                "cairo_type": "(data_end: contracts.auction.auction_lib.AuctionData*)",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib._get_auction_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib._make_direct_bid": {
                "decorators": [],
                "pc": 1056,
                "type": "function"
            },
            "contracts.auction.auction_lib._make_direct_bid.Args": {
                "full_name": "contracts.auction.auction_lib._make_direct_bid.Args",
                "members": {
                    "bid": {
                        "cairo_type": "contracts.auction.auction_lib.BidData",
                        "offset": 0
                    },
                    "data": {
                        "cairo_type": "contracts.auction.auction_lib.AuctionData",
                        "offset": 4
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "contracts.auction.auction_lib._make_direct_bid.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib._make_direct_bid.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib._make_direct_bid.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib._make_direct_bid.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.auction.auction_lib._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.auction.auction_lib.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.auction.auction_lib.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.auction.auction_lib.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.auction.auction_lib.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.auction.auction_lib.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.auction.auction_lib.auction_data_end": {
                "destination": "contracts.auction.data.auction_data_end",
                "type": "alias"
            },
            "contracts.auction.auction_lib.auction_data_start": {
                "destination": "contracts.auction.data.auction_data_start",
                "type": "alias"
            },
            "contracts.auction.auction_lib.close_auction": {
                "decorators": [
                    "external"
                ],
                "pc": 1119,
                "type": "function"
            },
            "contracts.auction.auction_lib.close_auction.Args": {
                "full_name": "contracts.auction.auction_lib.close_auction.Args",
                "members": {
                    "bids": {
                        "cairo_type": "contracts.auction.auction_lib.BidData*",
                        "offset": 1
                    },
                    "bids_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.auction.auction_lib.close_auction.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.close_auction.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.close_auction.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.close_auction.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.erc20_address": {
                "destination": "contracts.auction.data.erc20_address",
                "type": "alias"
            },
            "contracts.auction.auction_lib.getBoxAddress_": {
                "destination": "contracts.ecosystem.to_box.getBoxAddress_",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_auction_data": {
                "decorators": [
                    "view"
                ],
                "pc": 1380,
                "type": "function"
            },
            "contracts.auction.auction_lib.get_auction_data.Args": {
                "full_name": "contracts.auction.auction_lib.get_auction_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.auction.auction_lib.get_auction_data.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.get_auction_data.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.get_auction_data.Return": {
                "cairo_type": "(data_len: felt, data: contracts.auction.auction_lib.AuctionData*)",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.get_auction_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.auction.auction_lib.get_block_number": {
                "destination": "starkware.starknet.common.syscalls.get_block_number",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_block_timestamp": {
                "destination": "starkware.starknet.common.syscalls.get_block_timestamp",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.auction.auction_lib.get_price": {
                "decorators": [
                    "view"
                ],
                "pc": 1338,
                "type": "function"
            },
            "contracts.auction.auction_lib.get_price.Args": {
                "full_name": "contracts.auction.auction_lib.get_price.Args",
                "members": {
                    "auction_index": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.auction.auction_lib.get_price.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.get_price.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.get_price.Return": {
                "cairo_type": "(price: felt)",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.get_price.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.is_not_zero": {
                "destination": "starkware.cairo.common.math_cmp.is_not_zero",
                "type": "alias"
            },
            "contracts.auction.auction_lib.make_bid": {
                "decorators": [
                    "external"
                ],
                "pc": 855,
                "type": "function"
            },
            "contracts.auction.auction_lib.make_bid.Args": {
                "full_name": "contracts.auction.auction_lib.make_bid.Args",
                "members": {
                    "bid": {
                        "cairo_type": "contracts.auction.auction_lib.BidData",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.auction.auction_lib.make_bid.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.make_bid.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.make_bid.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.make_bid.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.auction.auction_lib.transfer_funds": {
                "decorators": [
                    "external"
                ],
                "pc": 1168,
                "type": "function"
            },
            "contracts.auction.auction_lib.transfer_funds.Args": {
                "full_name": "contracts.auction.auction_lib.transfer_funds.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "receiver": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.auction.auction_lib.transfer_funds.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.transfer_funds.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.transfer_funds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.transfer_funds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.auction_lib.try_bid": {
                "decorators": [],
                "pc": 1262,
                "type": "function"
            },
            "contracts.auction.auction_lib.try_bid.Args": {
                "full_name": "contracts.auction.auction_lib.try_bid.Args",
                "members": {
                    "bids": {
                        "cairo_type": "contracts.auction.auction_lib.BidData*",
                        "offset": 1
                    },
                    "bids_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "last_bid": {
                        "cairo_type": "contracts.auction.auction_lib.BidData",
                        "offset": 2
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "contracts.auction.auction_lib.try_bid.ImplicitArgs": {
                "full_name": "contracts.auction.auction_lib.try_bid.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.auction.auction_lib.try_bid.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.auction.auction_lib.try_bid.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.auction.auction_lib.uint256_le": {
                "destination": "starkware.cairo.common.uint256.uint256_le",
                "type": "alias"
            },
            "contracts.auction.auction_lib.uint256_mul": {
                "destination": "starkware.cairo.common.uint256.uint256_mul",
                "type": "alias"
            },
            "contracts.auction.auction_lib.uint256_sub": {
                "destination": "starkware.cairo.common.uint256.uint256_sub",
                "type": "alias"
            },
            "contracts.auction.data.auction_data_end": {
                "pc": 742,
                "type": "label"
            },
            "contracts.auction.data.auction_data_start": {
                "pc": 697,
                "type": "label"
            },
            "contracts.auction.data.box_address": {
                "type": "const",
                "value": 0
            },
            "contracts.auction.data.erc20_address": {
                "type": "const",
                "value": -1531481363943511436577813308151597459855447218982827121852527537121361113658
            },
            "contracts.ecosystem.to_box.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_box._box_address.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.addr": {
                "decorators": [],
                "pc": 742,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.read": {
                "decorators": [],
                "pc": 747,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.read.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._box_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_box._box_address.write": {
                "decorators": [],
                "pc": 760,
                "type": "function"
            },
            "contracts.ecosystem.to_box._box_address.write.Args": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box._box_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box._box_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box._box_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_box.getBoxAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 772,
                "type": "function"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.getBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.getBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_box.setBoxAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 802,
                "type": "function"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Args": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_box.setBoxAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_box.setBoxAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 359,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 389,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 452,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 419,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 683,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 339,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.ALLOWANCE_SELECTOR": {
                "type": "const",
                "value": 863164345921111744606866654754108663958095967665259696902984674202985078753
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.APPROVE_SELECTOR": {
                "type": "const",
                "value": 949021990203918389843157787496164629863144228991510976554585288817234167820
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.BALANCEOF_SELECTOR": {
                "type": "const",
                "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.DECIMALS_SELECTOR": {
                "type": "const",
                "value": 134830404806214277570220174593674215737759987247891306080029841794115377321
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.NAME_SELECTOR": {
                "type": "const",
                "value": 1528802474226268325865027367859591458315299653151958663884057507666229546336
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.SYMBOL_SELECTOR": {
                "type": "const",
                "value": 944713526212149105522785400348068751682982210605126537021911324578866405028
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.TOTALSUPPLY_SELECTOR": {
                "type": "const",
                "value": 227334030968744315992796982100494617316223563777432855541120004521101595501
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.TRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.TRANSFER_SELECTOR": {
                "type": "const",
                "value": 232670485425082704932579856502088130646006032362877466777181098476241604910
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance": {
                "decorators": [],
                "pc": 582,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.Return": {
                "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.allowance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve": {
                "decorators": [],
                "pc": 658,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf": {
                "decorators": [],
                "pc": 558,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer": {
                "decorators": [],
                "pc": 607,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom": {
                "decorators": [],
                "pc": 632,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.IERC20.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.vendor.openzeppelin.token.erc20.IERC20.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.APPROVE_SELECTOR": {
                "type": "const",
                "value": 949021990203918389843157787496164629863144228991510976554585288817234167820
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.Args": {
                "full_name": "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.BALANCEOF_SELECTOR": {
                "type": "const",
                "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.GETAPPROVED_SELECTOR": {
                "type": "const",
                "value": 313621473760873935122783910304240840031223477451753145243382550859039628062
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.ISAPPROVEDFORALL_SELECTOR": {
                "type": "const",
                "value": 955640681311292084896022829531366384024621189567662336953606158378698906672
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.OWNEROF_SELECTOR": {
                "type": "const",
                "value": 73122117822990066614852869276021392412342625629800410280609241172256672489
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.SAFETRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 730327702935662484951878015260342994925824754530470619774470754812327453764
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.SETAPPROVALFORALL_SELECTOR": {
                "type": "const",
                "value": 1280583940859288259579061247154630474140520431395903753515491282704959909530
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.TRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.IERC721.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.token.erc721.IERC721.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 190,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 300,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 321,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 275,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 294,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 288,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 245,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 250,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 263,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 215,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 220,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 233,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 166,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 28,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 62,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 62,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 62,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 62,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 8
                        },
                        "pc": 72,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 86,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 98,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 19,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 19,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 33,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 33,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 33,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 33,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 518,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 485,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 43,
                            "offset": 0
                        },
                        "pc": 485,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 509,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 495,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 3
                        },
                        "pc": 10,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 0
                        },
                        "pc": 3,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 8,
                "type": "label"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 523,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "cairo_type": "codeoffset",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 525,
                "type": "label"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_le": {
                "decorators": [],
                "pc": 546,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_le.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_lt": {
                "decorators": [],
                "pc": 529,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_lt.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 107,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 107,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 1
                        },
                        "pc": 114,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 156,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 156,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 1
                        },
                        "pc": 163,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp": {
                "decorators": [],
                "pc": 133,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Return": {
                "cairo_type": "(block_timestamp: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 133,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 1
                        },
                        "pc": 136,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 119,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 119,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 1
                        },
                        "pc": 122,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_contract_address": {
                "decorators": [],
                "pc": 126,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 126,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 1
                        },
                        "pc": 129,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 140,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 140,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 1
                        },
                        "pc": 144,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 148,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 148,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "pc": 153,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 3,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 3
                    },
                    "pc": 10,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 19,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 62,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 62,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 62,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 107,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 119,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 126,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 133,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 140,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 148,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 156,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 43,
                        "offset": 0
                    },
                    "pc": 485,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
