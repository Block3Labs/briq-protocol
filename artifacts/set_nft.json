{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "token_id",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "FTSpec",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "color_nft_material",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "x_y_z",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "ShapeItem",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getMigrationAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setMigrationAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBriqAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setBriqAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAttributesRegistryAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setAttributesRegistryAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to_",
                    "type": "felt"
                },
                {
                    "name": "token_id_",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "approve_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "approved_address",
                    "type": "felt"
                },
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "getApproved_",
            "outputs": [
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "on_behalf_of",
                    "type": "felt"
                },
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll_",
            "outputs": [
                {
                    "name": "is_approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "ownerOf_",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "balanceOf_",
            "outputs": [
                {
                    "name": "balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "balanceDetailsOf_",
            "outputs": [
                {
                    "name": "token_ids_len",
                    "type": "felt"
                },
                {
                    "name": "token_ids",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "index",
                    "type": "felt"
                }
            ],
            "name": "tokenOfOwnerByIndex_",
            "outputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "felt"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "sender",
                    "type": "felt"
                },
                {
                    "name": "recipient",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "transferFrom_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_value_len",
                    "type": "felt"
                },
                {
                    "name": "_value",
                    "type": "felt*"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "felt"
                }
            ],
            "name": "tokenURI_",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id_hint",
                    "type": "felt"
                },
                {
                    "name": "name_len",
                    "type": "felt"
                },
                {
                    "name": "name",
                    "type": "felt*"
                },
                {
                    "name": "description_len",
                    "type": "felt"
                },
                {
                    "name": "description",
                    "type": "felt*"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                },
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "attributes_len",
                    "type": "felt"
                },
                {
                    "name": "attributes",
                    "type": "felt*"
                }
            ],
            "name": "assemble_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "token_id",
                    "type": "felt"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                },
                {
                    "name": "attributes_len",
                    "type": "felt"
                },
                {
                    "name": "attributes",
                    "type": "felt*"
                }
            ],
            "name": "disassemble_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "name",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "symbol",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "name": "tokenURI_len",
                    "type": "felt"
                },
                {
                    "name": "tokenURI",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "index",
                    "type": "felt"
                }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
                {
                    "name": "token_id",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "balanceDetailsOf",
            "outputs": [
                {
                    "name": "tokenIds_len",
                    "type": "felt"
                },
                {
                    "name": "tokenIds",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "approved",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "operator",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "operator",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "name": "isApproved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": 755,
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": 1657,
                "selector": "0x2099a9e463536c983cf05f4354d0874b8cdcae11390c1dfa10baa03a04112f"
            },
            {
                "offset": 3503,
                "selector": "0x2962ba17806af798afa6eaf4aa8c93a9fb60a3e305045b6eea33435086cae9"
            },
            {
                "offset": 3461,
                "selector": "0x357827dc896562fdfcadcc4749cd0f21e36520c4cb91358d08ce14a542817c"
            },
            {
                "offset": 3539,
                "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
            },
            {
                "offset": 820,
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": 724,
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": 1793,
                "selector": "0x9e78561b8bca793e482b64be02eebb56ae2baef0a4b62b8a570c16a81c70c6"
            },
            {
                "offset": 884,
                "selector": "0xb06355e8c165a06a8974c58013b5f4a0a5a14de7144d8df78900b466c3def3"
            },
            {
                "offset": 3644,
                "selector": "0xb180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e"
            },
            {
                "offset": 909,
                "selector": "0xcb23989aa3fbbdcb496dbd25bc15d8af5889a5ab811324ff498908cc4e961d"
            },
            {
                "offset": 1757,
                "selector": "0x12975dbd1bf8f80a3be19e5a30f03a9edf464878d7bada5dae7ef00481a9384"
            },
            {
                "offset": 3331,
                "selector": "0x12a7823b0c6bee58f8c694888f32f862c6584caa8afa0242de046d298ba684d"
            },
            {
                "offset": 2480,
                "selector": "0x13d9296e8ee23d9a89be9be7f4fee0f8462a32e986d7b71dc97deb58eff209a"
            },
            {
                "offset": 665,
                "selector": "0x1590b901b2b2cd0de37e3c214ffeb9264d63cfa9274e83b0bb72b05cca3fec5"
            },
            {
                "offset": 1685,
                "selector": "0x176e2c487053e7ed6866780b059c976db79d819266074c8769e1bf22cbdbf82"
            },
            {
                "offset": 786,
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": 1913,
                "selector": "0x1c5b43d62ca0ff3b72eb2c4a826c6a45cbdf3654115aed583e9f0f3bb81a0d9"
            },
            {
                "offset": 1828,
                "selector": "0x1e6d3cbfeefef1d609db7db9516768ba077a394d54e97c2fcc92f0e18117083"
            },
            {
                "offset": 973,
                "selector": "0x1e7ea19aceb2249ac377cd890237f578578ca88a9820a855fb7fe8f7bc30d33"
            },
            {
                "offset": 2025,
                "selector": "0x1eee4fd822352181d873bf6d7f1b48d0d50a80d324bab4e1d82b38e872c20ba"
            },
            {
                "offset": 3283,
                "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
            },
            {
                "offset": 3576,
                "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
            },
            {
                "offset": 3681,
                "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
            },
            {
                "offset": 1873,
                "selector": "0x264627b82671221c10798326ae1e75a08887503777c8782c5cdbd927b7abcf8"
            },
            {
                "offset": 1978,
                "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
            },
            {
                "offset": 1721,
                "selector": "0x2bb87cbac65cc41a182fb38159f5ba91b6b2a5c9b002cebbe01a1594a310d7f"
            },
            {
                "offset": 3605,
                "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
            },
            {
                "offset": 3416,
                "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
            },
            {
                "offset": 3065,
                "selector": "0x2f2e26c65fb52f0e637c698caccdefaa2a146b9ec39f18899efe271f0ed83d3"
            },
            {
                "offset": 690,
                "selector": "0x30c01b5106792f295e0d30693936d510f381e46c0299a25d1ef40d385afa6b0"
            },
            {
                "offset": 3377,
                "selector": "0x34e45f1a39063678f3d4c888e6fa7fd9f96160b4bebf14bf5f54845ead7fb79"
            },
            {
                "offset": 3258,
                "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
            },
            {
                "offset": 3194,
                "selector": "0x397ecfa20a4c390073bd5f1130f870a0717d2907d7e390f0ba04cdf5a04b9d0"
            },
            {
                "offset": 998,
                "selector": "0x3fda4b5bddfa34de48f7f87778e53c38712792b406872e9953df114b46b8b41"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 519,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 39,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 518,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 559,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 43,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 556,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.utilities.authorization",
                    "contracts.utilities.authorization._only"
                ],
                "end_pc": 588,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 44,
                        "offset": 7
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 584,
                "value": "You are not authorized to call this function"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals.approve_"
                ],
                "end_pc": 1216,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 105,
                        "offset": 61
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1214,
                "value": "ERC721: cannot approve from the zero address"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals.approve_"
                ],
                "end_pc": 1220,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 105,
                        "offset": 63
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1216,
                "value": "ERC721: approval to current owner"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1246,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 109,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1243,
                "value": "ERC721: either the caller or operator is the zero address"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1250,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 109,
                        "offset": 3
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1246,
                "value": "ERC721: approve to caller"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals",
                    "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll"
                ],
                "end_pc": 1256,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 109,
                        "offset": 8
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1250,
                "value": "ERC721: approved is not a Cairo boolean"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.transferability",
                    "contracts.library_erc721.transferability.ERC721_transferability",
                    "contracts.library_erc721.transferability.ERC721_transferability._transfer"
                ],
                "end_pc": 1620,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 132,
                        "offset": 287
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1614,
                "value": "Insufficient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc721.transferability",
                    "contracts.library_erc721.transferability.ERC721_transferability",
                    "contracts.library_erc721.transferability.ERC721_transferability._transfer"
                ],
                "end_pc": 1635,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 132,
                        "offset": 431
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1631,
                "value": "Transfer would overflow recipient balance"
            },
            {
                "accessible_scopes": [
                    "cairopen.math.array",
                    "cairopen.math.array.invert_arr"
                ],
                "end_pc": 2054,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 174,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2048,
                "value": "invert_arr: size must be greather or equal to 1"
            },
            {
                "accessible_scopes": [
                    "cairopen.string.libs.conversion",
                    "cairopen.string.libs.conversion._loop_felt_to_inverted_string"
                ],
                "end_pc": 2176,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 186,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2170,
                "value": "felt_to_string: exceeding max String length 2^15"
            },
            {
                "accessible_scopes": [
                    "contracts.set_nft.assembly",
                    "contracts.set_nft.assembly._create_token_"
                ],
                "end_pc": 2892,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 237,
                        "offset": 254
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2888,
                "value": "Mint would overflow balance"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.11.0.1",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x6",
            "0x400780017fff7ff9",
            "0x0",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7c",
            "0x48317fec80007ff9",
            "0x48127ffe7fff8000",
            "0x48487ffb80007ffe",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff70",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6a",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x5",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff57",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff46",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6b",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec4",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeaa",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x20680017fff7fff",
            "0x6",
            "0x400780017fff7ffd",
            "0x8000000000000110000000000000000",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x484680017ffd8000",
            "0x100000000000000000000000000000000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeec",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6e",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe68",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe98",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe56",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe50",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7f",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe60",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5a",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe42",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3c",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe27",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1a",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde7",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd5",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x3b04ac990d5707170db3baee01793ea0c63ddf2301338cf3915ae5cca436636",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482480017ffc8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff96",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x36c5c4059df8bce55d3e15cd3b3003ac556242a31a8e81408421d5c3717106e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb6",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb0",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4a",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff25",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4b",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd3e",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1e",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff29",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1c",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee7",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f3f3753200ae7bbd5c0730d72faae48b297e22f8b7782ab7098a368772ab7c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdb",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd5",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeca",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1d1bc5efa05ad70dc7a0e84a39949caeb2574be324a86f18f58e09d42d6a78c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc82",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7c",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe71",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1b7e24dbc7e9f5269168b3096497c70e05d3998167db351e2ceab75a8ae9f06",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc07",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffced",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1f",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc18",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1bc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbde",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc4",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf6",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbef",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x13a5760dd3219014baf01421529222ae370f01e72900a58fd81e2cbc5de986c",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba7",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8d",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbf",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb8",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x2dfea59337e4d10ab6fcff512bb04538a8c9a0d63079dd6e4c05672eddf00d2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7e",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7b",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc61",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb92",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8a",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff75",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb89",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8a",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x1104800180018000",
            "0x38",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffaa",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb56",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x484a7ffc7ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6b",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6c",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480680017fff8000",
            "0x0",
            "0x40527ffe7ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb5",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff73",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff97",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb25",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x12ce99fab9de2f86520be72d664508415ee2d4169b17d380fdcad895ebe8cf2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae9",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae6",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbcc",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffafd",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf5",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaba",
            "0x40137fff7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x20680017fff7fff",
            "0x7",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa9",
            "0x48287ffc80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20680017fff7ffe",
            "0xb",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa7",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7c",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa98",
            "0x48287ffc80007ffd",
            "0x20680017fff7fff",
            "0xe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffd8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x208b7fff7fff7ffe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x20680017fff7fff",
            "0x17",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae5",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x480a7ffa7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa0c",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa06",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa33",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb72",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x48127ffe7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa26",
            "0x48297ffc80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa23",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa20",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe82",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdff",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9f1",
            "0x48127ffe7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc51",
            "0x48307fff80007fe3",
            "0x20680017fff7fff",
            "0x5",
            "0x40127ffe7fff7fe2",
            "0x10780017fff7fff",
            "0x4",
            "0x400680017fff7fe2",
            "0x3ef5b02bcc5d30f3f0d35d55f365e6388fe9501eca216cb1596940bf41083e2",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf6",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa69",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x482480017fe18000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdab",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa5a",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017fe38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdad",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe43",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3e",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe45",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe28",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd57",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd3b",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0b",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8bf",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe07",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffff7f53a734",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffa4a1ec62",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4e",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc8",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9f",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff852",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7fb",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x13",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x4",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffa8000",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ff98000",
            "0x480080007fff8000",
            "0x400080007ffa7fff",
            "0x20780017fff7ffd",
            "0x4",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7a0",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0xe",
            "0x40137fff7fff8001",
            "0x40137ffe7fff8002",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d8",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff843",
            "0x482a7ffd7ffc8000",
            "0x48287ffa7ffe8000",
            "0x400080007ffe7fff",
            "0x20680017fff7ffc",
            "0x7",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ab",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x7",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fda7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x30",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff74f",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x278764b0e84f45a602e24e86f19a3e2af7956f2a9112d825c8b5ca7991c711f",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff749",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x400380007ff97ffa",
            "0x402780017ff98002",
            "0x1",
            "0x4826800180018000",
            "0x1",
            "0x40297ffa7fff8003",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff744",
            "0x4003800080037ffc",
            "0x4003800180037ffd",
            "0x4826800180038000",
            "0x2",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff76b",
            "0x480a80027fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8a8",
            "0x40137ffc7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff868",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff710",
            "0x40137fff7fff8001",
            "0x4802800080008000",
            "0x4002800080017fff",
            "0x4802800180008000",
            "0x4002800180017fff",
            "0x4802800280008000",
            "0x4002800280017fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff707",
            "0x40137fff7fff8002",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x56bc75e2d63100000",
            "0x480680017fff8000",
            "0x100000000000000000000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7cf",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x4",
            "0x480680017fff8000",
            "0x3",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x21",
            "0x48327fff80018000",
            "0x4802800380008000",
            "0x400080007ffe7fff",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x482480017ffa8000",
            "0x1",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x8",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x14",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x30",
            "0x400280007ffd7fff",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x20780017fff7ff9",
            "0x7",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480a7ff87fff8000",
            "0x480080007ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff65",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x40137ffd7fff8002",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffb8000",
            "0x480080007fff8000",
            "0x20680017fff7fff",
            "0x13",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0xf",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a80027fff8000",
            "0x48507ffc7ffa8000",
            "0x482a7ffa7ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x40137ffc7fff8003",
            "0x40137ffd7fff8004",
            "0x40137ffe7fff8005",
            "0x482a7ffa7ffc8000",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48307fff7ffa8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff691",
            "0x480680017fff8000",
            "0x14",
            "0x4828800080007fff",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x48507fff7ffd8000",
            "0x48327fff7ffa8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482880007ffb8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa8",
            "0x208b7fff7fff7ffe",
            "0x68747470733a2f2f6170692e627269712e636f6e737472756374696f6e",
            "0x2f76312f7572692f7365742f",
            "0x737461726b6e65742d6d61696e6e65742f",
            "0x2e6a736f6e",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x990",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff52",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff660",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff650",
            "0x400780017fff8000",
            "0x0",
            "0x400780017fff8001",
            "0x0",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480280007ffc8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff62e",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff641",
            "0x40137ffd7fff8000",
            "0x480280017ffc8000",
            "0x402580017fff8001",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff620",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff618",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x108bc87322228c3d779004310013380e94c17a1ee53a5569ca1519908bea1ac",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff622",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff602",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0xeca0ae07802ed15d3ca235ec7dd40d4aa12e010996e971ddcd6e3260a18f4c",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff60c",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5ec",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1cfad4e1b3cce29757459959eb247a1813ba3147dc09d51bfa62846dd472f54",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5f9",
            "0x480080007fff8000",
            "0x400280007ffb7fff",
            "0x482480017ffe8000",
            "0x1",
            "0x480080007ffd8000",
            "0x48307fff7ffe8000",
            "0x40307ffb7ffa7fff",
            "0x48127ff97fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480080007ff98000",
            "0x482480017ff88000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5ce",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x2ea201af3d436c244bcfa95f8346e4f44f50d24a120330d53e0c7f761737274",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5db",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5b7",
            "0x40137fff7fff8000",
            "0x4003800080007ff4",
            "0x4003800180007ff5",
            "0x4003800280007ff6",
            "0x400380007ff27ff6",
            "0x402780017ff28001",
            "0x1",
            "0x4826800180008000",
            "0x3",
            "0x40297ff67fff8002",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff77fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5b0",
            "0x4003800080027ff8",
            "0x4003800080017ff8",
            "0x4027800180018003",
            "0x1",
            "0x4826800180028000",
            "0x1",
            "0x484680017ff88000",
            "0x2",
            "0x40317fff7ffe8004",
            "0x4826800180028000",
            "0x1",
            "0x480a7ff97fff8000",
            "0x484680017ff88000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5a0",
            "0x4003800080047ffa",
            "0x4003800080037ffa",
            "0x4027800180038005",
            "0x1",
            "0x4826800180048000",
            "0x1",
            "0x484680017ffa8000",
            "0x2",
            "0x40317fff7ffe8006",
            "0x4826800180048000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x484680017ffa8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff590",
            "0x4003800080067ffc",
            "0x4003800080057ffc",
            "0x4027800180058007",
            "0x1",
            "0x4826800180068000",
            "0x1",
            "0x40297ffc7fff8008",
            "0x4826800180068000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff583",
            "0x480a7ff17fff8000",
            "0x480a7ff37fff8000",
            "0x480680017fff8000",
            "0x88889fdd740438882ca171a518974d0c5250f47e340a789330ee628ac6504d",
            "0x4829800080008008",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff58b",
            "0x48127ffd7fff8000",
            "0x480a80077fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff56b",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x400380007ff87ffc",
            "0x402780017ff88001",
            "0x1",
            "0x4826800180008000",
            "0x3",
            "0x40297ffc7fff8002",
            "0x4826800180008000",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff564",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x9ddf7a6a702beac169ae95059fd3eb6fe442d192e8b74664a4e40debb78438",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff56c",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff891",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x2",
            "0x48327fff7ffd8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8000",
            "0x2",
            "0x482480017fff8000",
            "0x1",
            "0x48327fff7ffd8000",
            "0x48127ff57fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ff68000",
            "0x480080007ff98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff17",
            "0x48127ffe7fff8000",
            "0x48127fda7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff866",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffd8000",
            "0x48127ffc7fff8000",
            "0x480080007ffe8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5d6",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48327fff7ffd8000",
            "0x48127fe37fff8000",
            "0x48127ffa7fff8000",
            "0x48127fe47fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff87fff8000",
            "0x480080007ff98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff02",
            "0x48127ffe7fff8000",
            "0x48127fc87fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebf",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec4",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecf",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffff800000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5fd",
            "0x480a7ff87fff8000",
            "0x48127ff67fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff718",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff51d",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x40137fff7fff8000",
            "0x40137ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8f7",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8fc",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c2",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff571",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017fe38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c4",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa24",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab1",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe34",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a80007fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6e",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6c8",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4cd",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4ca",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ae",
            "0x40137fff7fff8000",
            "0x400b7ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8b2",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff878",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff87e",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa03",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa6d",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7a5",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe66",
            "0x400680017fff7ffe",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f1",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe77",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffd7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x480a7fec7fff8000",
            "0x480a7fed7fff8000",
            "0x480a7fee7fff8000",
            "0x480a7fef7fff8000",
            "0x480a7ff07fff8000",
            "0x480a7ff17fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff53",
            "0x40137fff7fff8000",
            "0x40137ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff07fff8000",
            "0x480a80007fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeda",
            "0x480a7ff07fff8000",
            "0x480a80007fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7c4",
            "0x40137ffd7fff8002",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff07fff8000",
            "0x480a80007fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe57",
            "0x48127ffe7fff8000",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080037ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080047ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080057ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x6",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x480080007fdb8000",
            "0x482480017fda8000",
            "0x1",
            "0x480080007fde8000",
            "0x482480017fdd8000",
            "0x1",
            "0x480080007fe28000",
            "0x482480017fe18000",
            "0x1",
            "0x480080007fe58000",
            "0x482480017fe48000",
            "0x1",
            "0x480080007fe98000",
            "0x482480017fe88000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff82",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff19",
            "0x480a7ff77fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe55",
            "0x480a7ff77fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7a",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff73f",
            "0x40137ffd7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe24",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2f",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x3",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x480080007fed8000",
            "0x482480017fec8000",
            "0x1",
            "0x480080007ff08000",
            "0x482480017fef8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x62726971",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x62726971",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff48c",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcae",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff30d",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x40137ffa7fff8000",
            "0x40137ffb7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa47",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff460",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9cc",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff439",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff28b",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff3d0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94f",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff3a9",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa11",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff383",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff87d",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff87c",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff343",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff87a",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff878",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "32": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
                        }
                    }
                }
            ],
            "40": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 3
                        }
                    }
                }
            ],
            "48": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 4
                        }
                    }
                }
            ],
            "57": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 5
                        }
                    }
                }
            ],
            "67": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 6
                        }
                    }
                }
            ],
            "70": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 7
                        }
                    }
                }
            ],
            "75": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_equal"
                    ],
                    "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_equal.a": 8,
                            "starkware.cairo.common.math.assert_not_equal.b": 9
                        }
                    }
                }
            ],
            "81": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 10
                        }
                    }
                }
            ],
            "99": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 13,
                            "starkware.cairo.common.math.assert_250_bit.low": 12,
                            "starkware.cairo.common.math.assert_250_bit.value": 11
                        }
                    }
                }
            ],
            "112": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 16,
                            "starkware.cairo.common.math.split_felt.low": 15,
                            "starkware.cairo.common.math.split_felt.value": 14
                        }
                    }
                }
            ],
            "141": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 17,
                            "starkware.cairo.common.math.assert_le_felt.b": 18,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 19
                        }
                    }
                }
            ],
            "151": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "165": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "177": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "186": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 20,
                            "starkware.cairo.common.math.assert_lt_felt.b": 21
                        }
                    }
                }
            ],
            "197": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 23,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 25,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 24,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 22
                        }
                    }
                }
            ],
            "214": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "assert ids.value == 0, 'split_int(): value is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.value": 26
                        }
                    }
                }
            ],
            "218": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "memory[ids.output] = res = (int(ids.value) % PRIME) % ids.base\nassert res < ids.bound, f'split_int(): Limb {res} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.base": 27,
                            "starkware.cairo.common.math.split_int.bound": 28,
                            "starkware.cairo.common.math.split_int.output": 29,
                            "starkware.cairo.common.math.split_int.value": 26
                        }
                    }
                }
            ],
            "239": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 30,
                            "starkware.starknet.common.storage.normalize_address.is_small": 31
                        }
                    }
                }
            ],
            "257": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 30,
                            "starkware.starknet.common.storage.normalize_address.is_250": 32
                        }
                    }
                }
            ],
            "283": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 23,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "293": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 23,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 33
                        }
                    }
                }
            ],
            "321": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 25,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 34,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 35
                        }
                    }
                }
            ],
            "656": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_migration",
                        "contracts.ecosystem.to_migration",
                        "__wrappers__",
                        "__wrappers__.getMigrationAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 50,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "699": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_migration",
                        "contracts.ecosystem.to_migration",
                        "__wrappers__",
                        "__wrappers__.setMigrationAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 55,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "715": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 57,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "746": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 60,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "795": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 65,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "829": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 69,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "875": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_briq",
                        "contracts.ecosystem.to_briq",
                        "__wrappers__",
                        "__wrappers__.getBriqAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 74,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "918": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_briq",
                        "contracts.ecosystem.to_briq",
                        "__wrappers__",
                        "__wrappers__.setBriqAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 79,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "964": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_attributes_registry",
                        "contracts.ecosystem.to_attributes_registry",
                        "__wrappers__",
                        "__wrappers__.getAttributesRegistryAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 84,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1007": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_attributes_registry",
                        "contracts.ecosystem.to_attributes_registry",
                        "__wrappers__",
                        "__wrappers__.setAttributesRegistryAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 89,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1667": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.approve_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 136,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1695": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 140,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1712": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.getApproved__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 142,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1748": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 145,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1784": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.ownerOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 148,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1819": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.balanceOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 151,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1854": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.balanceDetailsOf__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 155,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1904": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.tokenOfOwnerByIndex__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 161,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1969": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721",
                        "contracts.library_erc721.IERC721",
                        "__wrappers__",
                        "__wrappers__.supportsInterface_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 164,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2036": [
                {
                    "accessible_scopes": [
                        "contracts.library_erc721.IERC721_enumerable",
                        "contracts.library_erc721.IERC721_enumerable",
                        "__wrappers__",
                        "__wrappers__.transferFrom_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 173,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2461": [
                {
                    "accessible_scopes": [
                        "contracts.set_nft.token_uri",
                        "contracts.set_nft.token_uri",
                        "__wrappers__",
                        "__wrappers__.tokenURI__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 212,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3140": [
                {
                    "accessible_scopes": [
                        "contracts.set_nft.assembly",
                        "contracts.set_nft.assembly",
                        "__wrappers__",
                        "__wrappers__.assemble_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 251,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3236": [
                {
                    "accessible_scopes": [
                        "contracts.set_nft.assembly",
                        "contracts.set_nft.assembly",
                        "__wrappers__",
                        "__wrappers__.disassemble_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 258,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3249": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.name_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 260,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3274": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.symbol_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 263,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3312": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.tokenURI_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 267,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3367": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.tokenOfOwnerByIndex_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 273,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3406": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 276,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3442": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceDetailsOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 280,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3494": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.ownerOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 286,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3551": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferFrom"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 291,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3587": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.approve"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 295,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3615": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 299,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3635": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.getApproved_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 301,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3672": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 304,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.FTSpec": {
                "destination": "contracts.types.FTSpec",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "__main__._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "__main__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 3561,
                "type": "function"
            },
            "__main__.approve.Args": {
                "full_name": "__main__.approve.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.approve.ImplicitArgs": {
                "full_name": "__main__.approve.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.approve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.approve_": {
                "destination": "contracts.library_erc721.IERC721.approve_",
                "type": "alias"
            },
            "__main__.assemble_": {
                "destination": "contracts.set_nft.assembly.assemble_",
                "type": "alias"
            },
            "__main__.balanceDetailsOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3435,
                "type": "function"
            },
            "__main__.balanceDetailsOf.Args": {
                "full_name": "__main__.balanceDetailsOf.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.balanceDetailsOf.ImplicitArgs": {
                "full_name": "__main__.balanceDetailsOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.balanceDetailsOf.Return": {
                "cairo_type": "(tokenIds_len: felt, tokenIds: felt*)",
                "type": "type_definition"
            },
            "__main__.balanceDetailsOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.balanceDetailsOf_": {
                "destination": "contracts.library_erc721.IERC721.balanceDetailsOf_",
                "type": "alias"
            },
            "__main__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3397,
                "type": "function"
            },
            "__main__.balanceOf.Args": {
                "full_name": "__main__.balanceOf.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.balanceOf.ImplicitArgs": {
                "full_name": "__main__.balanceOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.balanceOf_": {
                "destination": "contracts.library_erc721.IERC721.balanceOf_",
                "type": "alias"
            },
            "__main__.disassemble_": {
                "destination": "contracts.set_nft.assembly.disassemble_",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getApproved": {
                "decorators": [
                    "view"
                ],
                "pc": 3625,
                "type": "function"
            },
            "__main__.getApproved.Args": {
                "full_name": "__main__.getApproved.Args",
                "members": {
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.getApproved.ImplicitArgs": {
                "full_name": "__main__.getApproved.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.getApproved.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "__main__.getApproved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.getApproved_": {
                "destination": "contracts.library_erc721.IERC721.getApproved_",
                "type": "alias"
            },
            "__main__.getAttributesRegistryAddress_": {
                "destination": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_",
                "type": "alias"
            },
            "__main__.getBriqAddress_": {
                "destination": "contracts.ecosystem.to_briq.getBriqAddress_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.getMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "__main__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 3664,
                "type": "function"
            },
            "__main__.isApprovedForAll.Args": {
                "full_name": "__main__.isApprovedForAll.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__main__.isApprovedForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.isApprovedForAll.Return": {
                "cairo_type": "(isApproved: felt)",
                "type": "type_definition"
            },
            "__main__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.isApprovedForAll_": {
                "destination": "contracts.library_erc721.IERC721.isApprovedForAll_",
                "type": "alias"
            },
            "__main__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 3246,
                "type": "function"
            },
            "__main__.name.Args": {
                "full_name": "__main__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name.ImplicitArgs": {
                "full_name": "__main__.name.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "__main__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3484,
                "type": "function"
            },
            "__main__.ownerOf.Args": {
                "full_name": "__main__.ownerOf.Args",
                "members": {
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.ownerOf.ImplicitArgs": {
                "full_name": "__main__.ownerOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.ownerOf.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "__main__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ownerOf_": {
                "destination": "contracts.library_erc721.IERC721.ownerOf_",
                "type": "alias"
            },
            "__main__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 3597,
                "type": "function"
            },
            "__main__.setApprovalForAll.Args": {
                "full_name": "__main__.setApprovalForAll.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__main__.setApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setApprovalForAll_": {
                "destination": "contracts.library_erc721.IERC721.setApprovalForAll_",
                "type": "alias"
            },
            "__main__.setAttributesRegistryAddress_": {
                "destination": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_",
                "type": "alias"
            },
            "__main__.setBriqAddress_": {
                "destination": "contracts.ecosystem.to_briq.setBriqAddress_",
                "type": "alias"
            },
            "__main__.setMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.setMigrationAddress_",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.supportsInterface": {
                "destination": "contracts.library_erc721.IERC721.supportsInterface",
                "type": "alias"
            },
            "__main__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 3271,
                "type": "function"
            },
            "__main__.symbol.Args": {
                "full_name": "__main__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol.ImplicitArgs": {
                "full_name": "__main__.symbol.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "__main__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenOfOwnerByIndex": {
                "decorators": [
                    "view"
                ],
                "pc": 3357,
                "type": "function"
            },
            "__main__.tokenOfOwnerByIndex.Args": {
                "full_name": "__main__.tokenOfOwnerByIndex.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.tokenOfOwnerByIndex.ImplicitArgs": {
                "full_name": "__main__.tokenOfOwnerByIndex.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.tokenOfOwnerByIndex.Return": {
                "cairo_type": "(token_id: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenOfOwnerByIndex_": {
                "destination": "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_",
                "type": "alias"
            },
            "__main__.tokenURI": {
                "decorators": [
                    "view"
                ],
                "pc": 3296,
                "type": "function"
            },
            "__main__.tokenURI.Args": {
                "full_name": "__main__.tokenURI.Args",
                "members": {
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.tokenURI.ImplicitArgs": {
                "full_name": "__main__.tokenURI.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.tokenURI.Return": {
                "cairo_type": "(tokenURI_len: felt, tokenURI: felt*)",
                "type": "type_definition"
            },
            "__main__.tokenURI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenURI_": {
                "destination": "contracts.set_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__main__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3523,
                "type": "function"
            },
            "__main__.transferFrom.Args": {
                "full_name": "__main__.transferFrom.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferFrom.ImplicitArgs": {
                "full_name": "__main__.transferFrom.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.transferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferFrom_": {
                "destination": "contracts.library_erc721.IERC721_enumerable.transferFrom_",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 3576,
                "type": "function"
            },
            "__wrappers__.approve.Args": {
                "full_name": "__wrappers__.approve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve.ImplicitArgs": {
                "full_name": "__wrappers__.approve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.approve.__wrapped_func": {
                "destination": "__main__.approve",
                "type": "alias"
            },
            "__wrappers__.approve_": {
                "decorators": [
                    "external"
                ],
                "pc": 1657,
                "type": "function"
            },
            "__wrappers__.approve_.Args": {
                "full_name": "__wrappers__.approve_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve_.ImplicitArgs": {
                "full_name": "__wrappers__.approve_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.approve_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.approve_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.approve_",
                "type": "alias"
            },
            "__wrappers__.approve__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.approve_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.assemble_": {
                "decorators": [
                    "external"
                ],
                "pc": 3065,
                "type": "function"
            },
            "__wrappers__.assemble_.Args": {
                "full_name": "__wrappers__.assemble_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assemble_.ImplicitArgs": {
                "full_name": "__wrappers__.assemble_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assemble_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assemble_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assemble_.__wrapped_func": {
                "destination": "contracts.set_nft.assembly.assemble_",
                "type": "alias"
            },
            "__wrappers__.assemble__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3461,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOf.Args": {
                "full_name": "__wrappers__.balanceDetailsOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceDetailsOf.__wrapped_func": {
                "destination": "__main__.balanceDetailsOf",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1873,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOf_.Args": {
                "full_name": "__wrappers__.balanceDetailsOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.balanceDetailsOf_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.balanceDetailsOf_",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOf__encode_return": {
                "decorators": [],
                "pc": 1854,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOf__encode_return.Args": {
                "full_name": "__wrappers__.balanceDetailsOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(token_ids_len: felt, token_ids: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceDetailsOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceDetailsOf_encode_return": {
                "decorators": [],
                "pc": 3442,
                "type": "function"
            },
            "__wrappers__.balanceDetailsOf_encode_return.Args": {
                "full_name": "__wrappers__.balanceDetailsOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(tokenIds_len: felt, tokenIds: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceDetailsOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceDetailsOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceDetailsOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.balanceDetailsOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3416,
                "type": "function"
            },
            "__wrappers__.balanceOf.Args": {
                "full_name": "__wrappers__.balanceOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf.__wrapped_func": {
                "destination": "__main__.balanceOf",
                "type": "alias"
            },
            "__wrappers__.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1828,
                "type": "function"
            },
            "__wrappers__.balanceOf_.Args": {
                "full_name": "__wrappers__.balanceOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.balanceOf_",
                "type": "alias"
            },
            "__wrappers__.balanceOf__encode_return": {
                "decorators": [],
                "pc": 1819,
                "type": "function"
            },
            "__wrappers__.balanceOf__encode_return.Args": {
                "full_name": "__wrappers__.balanceOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf_encode_return": {
                "decorators": [],
                "pc": 3406,
                "type": "function"
            },
            "__wrappers__.balanceOf_encode_return.Args": {
                "full_name": "__wrappers__.balanceOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.disassemble_": {
                "decorators": [
                    "external"
                ],
                "pc": 3194,
                "type": "function"
            },
            "__wrappers__.disassemble_.Args": {
                "full_name": "__wrappers__.disassemble_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.disassemble_.ImplicitArgs": {
                "full_name": "__wrappers__.disassemble_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.disassemble_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.disassemble_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.disassemble_.__wrapped_func": {
                "destination": "contracts.set_nft.assembly.disassemble_",
                "type": "alias"
            },
            "__wrappers__.disassemble__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 724,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 715,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getApproved": {
                "decorators": [
                    "view"
                ],
                "pc": 3644,
                "type": "function"
            },
            "__wrappers__.getApproved.Args": {
                "full_name": "__wrappers__.getApproved.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getApproved.__wrapped_func": {
                "destination": "__main__.getApproved",
                "type": "alias"
            },
            "__wrappers__.getApproved_": {
                "decorators": [
                    "view"
                ],
                "pc": 1721,
                "type": "function"
            },
            "__wrappers__.getApproved_.Args": {
                "full_name": "__wrappers__.getApproved_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved_.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getApproved_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.getApproved_",
                "type": "alias"
            },
            "__wrappers__.getApproved__encode_return": {
                "decorators": [],
                "pc": 1712,
                "type": "function"
            },
            "__wrappers__.getApproved__encode_return.Args": {
                "full_name": "__wrappers__.getApproved__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getApproved__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getApproved__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getApproved_encode_return": {
                "decorators": [],
                "pc": 3635,
                "type": "function"
            },
            "__wrappers__.getApproved_encode_return.Args": {
                "full_name": "__wrappers__.getApproved_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getApproved_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getApproved_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAttributesRegistryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 973,
                "type": "function"
            },
            "__wrappers__.getAttributesRegistryAddress_.Args": {
                "full_name": "__wrappers__.getAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getAttributesRegistryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAttributesRegistryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_",
                "type": "alias"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return": {
                "decorators": [],
                "pc": 964,
                "type": "function"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.Args": {
                "full_name": "__wrappers__.getAttributesRegistryAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAttributesRegistryAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAttributesRegistryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getBriqAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 884,
                "type": "function"
            },
            "__wrappers__.getBriqAddress_.Args": {
                "full_name": "__wrappers__.getBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getBriqAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getBriqAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_briq.getBriqAddress_",
                "type": "alias"
            },
            "__wrappers__.getBriqAddress__encode_return": {
                "decorators": [],
                "pc": 875,
                "type": "function"
            },
            "__wrappers__.getBriqAddress__encode_return.Args": {
                "full_name": "__wrappers__.getBriqAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getBriqAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getBriqAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getBriqAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getBriqAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 755,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 746,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getMigrationAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 665,
                "type": "function"
            },
            "__wrappers__.getMigrationAddress_.Args": {
                "full_name": "__wrappers__.getMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getMigrationAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getMigrationAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "__wrappers__.getMigrationAddress__encode_return": {
                "decorators": [],
                "pc": 656,
                "type": "function"
            },
            "__wrappers__.getMigrationAddress__encode_return.Args": {
                "full_name": "__wrappers__.getMigrationAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getMigrationAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getMigrationAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getMigrationAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getMigrationAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 3681,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll.Args": {
                "full_name": "__wrappers__.isApprovedForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll.__wrapped_func": {
                "destination": "__main__.isApprovedForAll",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 1757,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_.Args": {
                "full_name": "__wrappers__.isApprovedForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.isApprovedForAll_",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll__encode_return": {
                "decorators": [],
                "pc": 1748,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll__encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(is_approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_encode_return": {
                "decorators": [],
                "pc": 3672,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(isApproved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 3258,
                "type": "function"
            },
            "__wrappers__.name.Args": {
                "full_name": "__wrappers__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.ImplicitArgs": {
                "full_name": "__wrappers__.name.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.name.__wrapped_func": {
                "destination": "__main__.name",
                "type": "alias"
            },
            "__wrappers__.name_encode_return": {
                "decorators": [],
                "pc": 3249,
                "type": "function"
            },
            "__wrappers__.name_encode_return.Args": {
                "full_name": "__wrappers__.name_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(name: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.name_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3503,
                "type": "function"
            },
            "__wrappers__.ownerOf.Args": {
                "full_name": "__wrappers__.ownerOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.ownerOf.__wrapped_func": {
                "destination": "__main__.ownerOf",
                "type": "alias"
            },
            "__wrappers__.ownerOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1793,
                "type": "function"
            },
            "__wrappers__.ownerOf_.Args": {
                "full_name": "__wrappers__.ownerOf_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.ownerOf_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.ownerOf_",
                "type": "alias"
            },
            "__wrappers__.ownerOf__encode_return": {
                "decorators": [],
                "pc": 1784,
                "type": "function"
            },
            "__wrappers__.ownerOf__encode_return.Args": {
                "full_name": "__wrappers__.ownerOf__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.ownerOf__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.ownerOf__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.ownerOf_encode_return": {
                "decorators": [],
                "pc": 3494,
                "type": "function"
            },
            "__wrappers__.ownerOf_encode_return.Args": {
                "full_name": "__wrappers__.ownerOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.ownerOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 3605,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll.Args": {
                "full_name": "__wrappers__.setApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll.__wrapped_func": {
                "destination": "__main__.setApprovalForAll",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 1685,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll_.Args": {
                "full_name": "__wrappers__.setApprovalForAll_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.setApprovalForAll_",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setAttributesRegistryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 998,
                "type": "function"
            },
            "__wrappers__.setAttributesRegistryAddress_.Args": {
                "full_name": "__wrappers__.setAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setAttributesRegistryAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setAttributesRegistryAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setAttributesRegistryAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_",
                "type": "alias"
            },
            "__wrappers__.setAttributesRegistryAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setBriqAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 909,
                "type": "function"
            },
            "__wrappers__.setBriqAddress_.Args": {
                "full_name": "__wrappers__.setBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBriqAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setBriqAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setBriqAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setBriqAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_briq.setBriqAddress_",
                "type": "alias"
            },
            "__wrappers__.setBriqAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setMigrationAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 690,
                "type": "function"
            },
            "__wrappers__.setMigrationAddress_.Args": {
                "full_name": "__wrappers__.setMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMigrationAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setMigrationAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMigrationAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setMigrationAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_migration.setMigrationAddress_",
                "type": "alias"
            },
            "__wrappers__.setMigrationAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 820,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 1978,
                "type": "function"
            },
            "__wrappers__.supportsInterface.Args": {
                "full_name": "__wrappers__.supportsInterface.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.supportsInterface.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.supportsInterface",
                "type": "alias"
            },
            "__wrappers__.supportsInterface_encode_return": {
                "decorators": [],
                "pc": 1969,
                "type": "function"
            },
            "__wrappers__.supportsInterface_encode_return.Args": {
                "full_name": "__wrappers__.supportsInterface_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.supportsInterface_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 3283,
                "type": "function"
            },
            "__wrappers__.symbol.Args": {
                "full_name": "__wrappers__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.ImplicitArgs": {
                "full_name": "__wrappers__.symbol.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.symbol.__wrapped_func": {
                "destination": "__main__.symbol",
                "type": "alias"
            },
            "__wrappers__.symbol_encode_return": {
                "decorators": [],
                "pc": 3274,
                "type": "function"
            },
            "__wrappers__.symbol_encode_return.Args": {
                "full_name": "__wrappers__.symbol_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(symbol: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.symbol_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex": {
                "decorators": [
                    "view"
                ],
                "pc": 3377,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.tokenOfOwnerByIndex.__wrapped_func": {
                "destination": "__main__.tokenOfOwnerByIndex",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex_": {
                "decorators": [
                    "view"
                ],
                "pc": 1913,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex_.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.tokenOfOwnerByIndex_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return": {
                "decorators": [],
                "pc": 1904,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(token_id: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.tokenOfOwnerByIndex__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return": {
                "decorators": [],
                "pc": 3367,
                "type": "function"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.Args": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(token_id: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenOfOwnerByIndex_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.tokenOfOwnerByIndex_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenURI": {
                "decorators": [
                    "view"
                ],
                "pc": 3331,
                "type": "function"
            },
            "__wrappers__.tokenURI.Args": {
                "full_name": "__wrappers__.tokenURI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI.__wrapped_func": {
                "destination": "__main__.tokenURI",
                "type": "alias"
            },
            "__wrappers__.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 2480,
                "type": "function"
            },
            "__wrappers__.tokenURI_.Args": {
                "full_name": "__wrappers__.tokenURI_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.tokenURI_.__wrapped_func": {
                "destination": "contracts.set_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "__wrappers__.tokenURI__encode_return": {
                "decorators": [],
                "pc": 2461,
                "type": "function"
            },
            "__wrappers__.tokenURI__encode_return.Args": {
                "full_name": "__wrappers__.tokenURI__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenURI_encode_return": {
                "decorators": [],
                "pc": 3312,
                "type": "function"
            },
            "__wrappers__.tokenURI_encode_return.Args": {
                "full_name": "__wrappers__.tokenURI_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(tokenURI_len: felt, tokenURI: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenURI_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3539,
                "type": "function"
            },
            "__wrappers__.transferFrom.Args": {
                "full_name": "__wrappers__.transferFrom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom.ImplicitArgs": {
                "full_name": "__wrappers__.transferFrom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferFrom.__wrapped_func": {
                "destination": "__main__.transferFrom",
                "type": "alias"
            },
            "__wrappers__.transferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2025,
                "type": "function"
            },
            "__wrappers__.transferFrom_.Args": {
                "full_name": "__wrappers__.transferFrom_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom_.ImplicitArgs": {
                "full_name": "__wrappers__.transferFrom_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferFrom_.__wrapped_func": {
                "destination": "contracts.library_erc721.IERC721_enumerable.transferFrom_",
                "type": "alias"
            },
            "__wrappers__.transferFrom__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 786,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "cairopen.math.array._loop_invert_arr": {
                "decorators": [],
                "pc": 2077,
                "type": "function"
            },
            "cairopen.math.array._loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array._sub_loop_invert_arr": {
                "decorators": [],
                "pc": 2104,
                "type": "function"
            },
            "cairopen.math.array._sub_loop_invert_arr.Args": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "struct_index": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "struct_offset": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array._sub_loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array._sub_loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.math.array._sub_loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.math.array.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.math.array.invert_arr": {
                "decorators": [],
                "pc": 2046,
                "type": "function"
            },
            "cairopen.math.array.invert_arr.Args": {
                "full_name": "cairopen.math.array.invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "cairopen.math.array.invert_felt_arr": {
                "decorators": [],
                "pc": 2069,
                "type": "function"
            },
            "cairopen.math.array.invert_felt_arr.Args": {
                "full_name": "cairopen.math.array.invert_felt_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.ImplicitArgs": {
                "full_name": "cairopen.math.array.invert_felt_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.math.array.invert_felt_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "cairopen.math.array.invert_felt_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.math.array.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "cairopen.math.array.squash_dict": {
                "destination": "starkware.cairo.common.squash_dict.squash_dict",
                "type": "alias"
            },
            "cairopen.string.constants.SHORT_STRING_MAX_LEN": {
                "type": "const",
                "value": 31
            },
            "cairopen.string.constants.SHORT_STRING_MAX_VALUE": {
                "type": "const",
                "value": 452312848583266388373324160190187140051835877600158453279131187530910662655
            },
            "cairopen.string.constants.STRING_MAX_LEN": {
                "type": "const",
                "value": 32768
            },
            "cairopen.string.libs.conversion.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.SHORT_STRING_MAX_VALUE": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_VALUE",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string": {
                "decorators": [],
                "pc": 2168,
                "type": "function"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "str_seed": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.Return": {
                "cairo_type": "(str_len: felt)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion._loop_felt_to_inverted_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.conversion.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.concat_felt_arr": {
                "destination": "cairopen.math.array.concat_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string": {
                "decorators": [],
                "pc": 2143,
                "type": "function"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Args": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs": {
                "full_name": "cairopen.string.libs.conversion.conversion_felt_to_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "cairopen.string.libs.conversion.conversion_felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "cairopen.string.libs.conversion.invert_felt_arr": {
                "destination": "cairopen.math.array.invert_felt_arr",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "cairopen.string.libs.conversion.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.libs.storage.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.SHORT_STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.SHORT_STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.STRING_MAX_LEN": {
                "destination": "cairopen.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "cairopen.string.libs.storage.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "cairopen.string.libs.storage.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "cairopen.string.libs.storage.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "cairopen.string.libs.storage.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "cairopen.string.libs.storage.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_data.Args": {
                "full_name": "cairopen.string.libs.storage.strings_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_data.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_data.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_data.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len": {
                "type": "namespace"
            },
            "cairopen.string.libs.storage.strings_len.Args": {
                "full_name": "cairopen.string.libs.storage.strings_len.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.ImplicitArgs": {
                "full_name": "cairopen.string.libs.storage.strings_len.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "cairopen.string.libs.storage.strings_len.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "cairopen.string.libs.storage.strings_len.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "cairopen.string.libs.storage.strings_len.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "cairopen.string.libs.storage.strings_len.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "cairopen.string.libs.storage.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "cairopen.string.string.String": {
                "full_name": "cairopen.string.string.String",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr": {
                "decorators": [],
                "pc": 928,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read": {
                "decorators": [],
                "pc": 933,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write": {
                "decorators": [],
                "pc": 946,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry._attributes_registry_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 958,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry.getAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_attributes_registry.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 989,
                "type": "function"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Args": {
                "full_name": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_attributes_registry.setAttributesRegistryAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_briq._briq_address.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.addr": {
                "decorators": [],
                "pc": 839,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.read": {
                "decorators": [],
                "pc": 844,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.read.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._briq_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq._briq_address.write": {
                "decorators": [],
                "pc": 857,
                "type": "function"
            },
            "contracts.ecosystem.to_briq._briq_address.write.Args": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq._briq_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq._briq_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq._briq_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 869,
                "type": "function"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.Args": {
                "full_name": "contracts.ecosystem.to_briq.getBriqAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq.getBriqAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq.getBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_briq.setBriqAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 900,
                "type": "function"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.Args": {
                "full_name": "contracts.ecosystem.to_briq.setBriqAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_briq.setBriqAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_briq.setBriqAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_migration._migration_address.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.addr": {
                "decorators": [],
                "pc": 620,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.read": {
                "decorators": [],
                "pc": 625,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.read.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._migration_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration._migration_address.write": {
                "decorators": [],
                "pc": 638,
                "type": "function"
            },
            "contracts.ecosystem.to_migration._migration_address.write.Args": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration._migration_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration._migration_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration._migration_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 650,
                "type": "function"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.Args": {
                "full_name": "contracts.ecosystem.to_migration.getMigrationAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration.getMigrationAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration.getMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 681,
                "type": "function"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.Args": {
                "full_name": "contracts.ecosystem.to_migration.setMigrationAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_migration.setMigrationAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_migration.setMigrationAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.ERC721": {
                "destination": "contracts.library_erc721.balance.ERC721",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.ERC721_approvals": {
                "destination": "contracts.library_erc721.approvals.ERC721_approvals",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.ERC721_enumerability": {
                "destination": "contracts.library_erc721.enumerability.ERC721_enumerability",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.ERC721_transferability": {
                "destination": "contracts.library_erc721.transferability.ERC721_transferability",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.FALSE": {
                "destination": "contracts.utilities.IERC165.FALSE",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.IERC165_ID": {
                "destination": "contracts.utilities.IERC165.IERC165_ID",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.IERC721_ID": {
                "destination": "contracts.utilities.IERC165.IERC721_ID",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.IERC721_METADATA_ID": {
                "destination": "contracts.utilities.IERC165.IERC721_METADATA_ID",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.TRUE": {
                "destination": "contracts.utilities.IERC165.TRUE",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721.approve_": {
                "decorators": [
                    "external"
                ],
                "pc": 1649,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.approve_.Args": {
                "full_name": "contracts.library_erc721.IERC721.approve_.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.approve_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.approve_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.approve_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.approve_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.balanceDetailsOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1847,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.balanceDetailsOf_.Args": {
                "full_name": "contracts.library_erc721.IERC721.balanceDetailsOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.balanceDetailsOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.balanceDetailsOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.balanceDetailsOf_.Return": {
                "cairo_type": "(token_ids_len: felt, token_ids: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.balanceDetailsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.balanceOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1812,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.balanceOf_.Args": {
                "full_name": "contracts.library_erc721.IERC721.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.getApproved_": {
                "decorators": [
                    "view"
                ],
                "pc": 1705,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.getApproved_.Args": {
                "full_name": "contracts.library_erc721.IERC721.getApproved_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.getApproved_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.getApproved_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.getApproved_.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.getApproved_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.isApprovedForAll_": {
                "decorators": [
                    "view"
                ],
                "pc": 1740,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc721.IERC721.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.ownerOf_": {
                "decorators": [
                    "view"
                ],
                "pc": 1777,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.ownerOf_.Args": {
                "full_name": "contracts.library_erc721.IERC721.ownerOf_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.ownerOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.ownerOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.ownerOf_.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.ownerOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.setApprovalForAll_": {
                "decorators": [
                    "external"
                ],
                "pc": 1677,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc721.IERC721.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 1933,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.supportsInterface.Args": {
                "full_name": "contracts.library_erc721.IERC721.supportsInterface.Args",
                "members": {
                    "interfaceId": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.supportsInterface.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.supportsInterface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.supportsInterface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_": {
                "decorators": [
                    "view"
                ],
                "pc": 1896,
                "type": "function"
            },
            "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.Args": {
                "full_name": "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721.tokenOfOwnerByIndex_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.IERC721_enumerable.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721_enumerable.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721_enumerable.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721_enumerable.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721_enumerable.tf": {
                "destination": "contracts.library_erc721.transferability_enum.transferFrom_",
                "type": "alias"
            },
            "contracts.library_erc721.IERC721_enumerable.transferFrom_": {
                "decorators": [
                    "external"
                ],
                "pc": 2016,
                "type": "function"
            },
            "contracts.library_erc721.IERC721_enumerable.transferFrom_.Args": {
                "full_name": "contracts.library_erc721.IERC721_enumerable.transferFrom_.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721_enumerable.transferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.IERC721_enumerable.transferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.IERC721_enumerable.transferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.IERC721_enumerable.transferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals": {
                "type": "namespace"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll": {
                "decorators": [],
                "pc": 1280,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.Args",
                "members": {
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._onlyApprovedAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll": {
                "decorators": [],
                "pc": 1243,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals._setExplicitApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_": {
                "decorators": [],
                "pc": 1208,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.approve_.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.approve_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_": {
                "decorators": [],
                "pc": 1200,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.approve_nocheck_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals.getApproved_": {
                "decorators": [],
                "pc": 1265,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.getApproved_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_": {
                "decorators": [],
                "pc": 1272,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.isApprovedForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_": {
                "decorators": [],
                "pc": 1231,
                "type": "function"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.Args": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "is_approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals.ERC721_approvals.setApprovalForAll_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all": {
                "type": "namespace"
            },
            "contracts.library_erc721.approvals._approval_all.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_all.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_all.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_all.addr": {
                "decorators": [],
                "pc": 1154,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_all.addr.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_all.addr.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_all.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_all.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_all.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all.read": {
                "decorators": [],
                "pc": 1171,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_all.read.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_all.read.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.read.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_all.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.read.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_all.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_all.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_all.write": {
                "decorators": [],
                "pc": 1186,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_all.write.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_all.write.Args",
                "members": {
                    "approved_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "on_behalf_of": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.write.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_all.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_all.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_all.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_single": {
                "type": "namespace"
            },
            "contracts.library_erc721.approvals._approval_single.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_single.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_single.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_single.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_single.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_single.addr": {
                "decorators": [],
                "pc": 1113,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_single.addr.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_single.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_single.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_single.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_single.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_single.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_single.read": {
                "decorators": [],
                "pc": 1127,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_single.read.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_single.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.read.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_single.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.read.Return": {
                "cairo_type": "(approved_address: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_single.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._approval_single.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_single.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._approval_single.write": {
                "decorators": [],
                "pc": 1141,
                "type": "function"
            },
            "contracts.library_erc721.approvals._approval_single.write.Args": {
                "full_name": "contracts.library_erc721.approvals._approval_single.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.write.ImplicitArgs": {
                "full_name": "contracts.library_erc721.approvals._approval_single.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.approvals._approval_single.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.approvals._approval_single.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.approvals._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.library_erc721.approvals._owner": {
                "destination": "contracts.library_erc721.balance._owner",
                "type": "alias"
            },
            "contracts.library_erc721.approvals.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc721.approvals.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc721.approvals.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc721.balance.ERC721": {
                "type": "namespace"
            },
            "contracts.library_erc721.balance.ERC721.Args": {
                "full_name": "contracts.library_erc721.balance.ERC721.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance.ERC721.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance.ERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance.ERC721.balanceOf_": {
                "decorators": [],
                "pc": 1106,
                "type": "function"
            },
            "contracts.library_erc721.balance.ERC721.balanceOf_.Args": {
                "full_name": "contracts.library_erc721.balance.ERC721.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance.ERC721.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance.ERC721.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance.ERC721.ownerOf_": {
                "decorators": [],
                "pc": 1099,
                "type": "function"
            },
            "contracts.library_erc721.balance.ERC721.ownerOf_.Args": {
                "full_name": "contracts.library_erc721.balance.ERC721.ownerOf_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.ownerOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance.ERC721.ownerOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance.ERC721.ownerOf_.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance.ERC721.ownerOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.balance.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance": {
                "type": "namespace"
            },
            "contracts.library_erc721.balance._balance.Args": {
                "full_name": "contracts.library_erc721.balance._balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._balance.addr": {
                "decorators": [],
                "pc": 1017,
                "type": "function"
            },
            "contracts.library_erc721.balance._balance.addr.Args": {
                "full_name": "contracts.library_erc721.balance._balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance.read": {
                "decorators": [],
                "pc": 1031,
                "type": "function"
            },
            "contracts.library_erc721.balance._balance.read.Args": {
                "full_name": "contracts.library_erc721.balance._balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.read.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc721.balance._balance.write": {
                "decorators": [],
                "pc": 1045,
                "type": "function"
            },
            "contracts.library_erc721.balance._balance.write.Args": {
                "full_name": "contracts.library_erc721.balance._balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.write.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance._balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._owner": {
                "type": "namespace"
            },
            "contracts.library_erc721.balance._owner.Args": {
                "full_name": "contracts.library_erc721.balance._owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.balance._owner.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._owner.addr": {
                "decorators": [],
                "pc": 1058,
                "type": "function"
            },
            "contracts.library_erc721.balance._owner.addr.Args": {
                "full_name": "contracts.library_erc721.balance._owner.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc721.balance._owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc721.balance._owner.read": {
                "decorators": [],
                "pc": 1072,
                "type": "function"
            },
            "contracts.library_erc721.balance._owner.read.Args": {
                "full_name": "contracts.library_erc721.balance._owner.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.read.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.read.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance._owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc721.balance._owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc721.balance._owner.write": {
                "decorators": [],
                "pc": 1086,
                "type": "function"
            },
            "contracts.library_erc721.balance._owner.write.Args": {
                "full_name": "contracts.library_erc721.balance._owner.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.write.ImplicitArgs": {
                "full_name": "contracts.library_erc721.balance._owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.balance._owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.balance._owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.balance.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc721.balance.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc721.balance.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc721.balance.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc721.balance.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability": {
                "type": "namespace"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx": {
                "decorators": [],
                "pc": 1369,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nft_ids": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.Return": {
                "cairo_type": "(token_ids: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._NFTBalanceDetailsOfIdx.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner": {
                "decorators": [],
                "pc": 1403,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._setTokenByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner": {
                "decorators": [],
                "pc": 1438,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase": {
                "decorators": [],
                "pc": 1482,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "last_known_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "target_index": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_erasePhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase": {
                "decorators": [],
                "pc": 1448,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability._unsetTokenByOwner_searchPhase.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_": {
                "decorators": [],
                "pc": 1349,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.Return": {
                "cairo_type": "(token_ids_len: felt, token_ids: felt*)",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.balanceDetailsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_": {
                "decorators": [],
                "pc": 1395,
                "type": "function"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.Args": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability.ERC721_enumerability.tokenOfOwnerByIndex_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner": {
                "type": "namespace"
            },
            "contracts.library_erc721.enumerability._token_by_owner.Args": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability._token_by_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability._token_by_owner.addr": {
                "decorators": [],
                "pc": 1303,
                "type": "function"
            },
            "contracts.library_erc721.enumerability._token_by_owner.addr.Args": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.addr.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability._token_by_owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability._token_by_owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner.read": {
                "decorators": [],
                "pc": 1320,
                "type": "function"
            },
            "contracts.library_erc721.enumerability._token_by_owner.read.Args": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.read.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.read.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.read.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability._token_by_owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability._token_by_owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability._token_by_owner.write": {
                "decorators": [],
                "pc": 1335,
                "type": "function"
            },
            "contracts.library_erc721.enumerability._token_by_owner.write.Args": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.write.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.write.ImplicitArgs": {
                "full_name": "contracts.library_erc721.enumerability._token_by_owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.enumerability._token_by_owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.enumerability._token_by_owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.enumerability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc721.enumerability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.ERC721_approvals": {
                "destination": "contracts.library_erc721.approvals.ERC721_approvals",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.ERC721_transferability": {
                "type": "namespace"
            },
            "contracts.library_erc721.transferability.ERC721_transferability.Args": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability.ERC721_transferability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.transferability.ERC721_transferability._onTransfer": {
                "decorators": [],
                "pc": 1550,
                "type": "function"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.Args": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._onTransfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.transferability.ERC721_transferability._transfer": {
                "decorators": [],
                "pc": 1568,
                "type": "function"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._transfer.Args": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability._transfer.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._transfer.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability.ERC721_transferability._transfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability.ERC721_transferability._transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.Transfer": {
                "type": "namespace"
            },
            "contracts.library_erc721.transferability.Transfer.Args": {
                "full_name": "contracts.library_erc721.transferability.Transfer.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.Transfer.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability.Transfer.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.Transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability.Transfer.SELECTOR": {
                "type": "const",
                "value": 271746229759260285552388728919865295615886751538523744128730118297934206697
            },
            "contracts.library_erc721.transferability.Transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc721.transferability.Transfer.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.Transfer.emit": {
                "decorators": [],
                "pc": 1523,
                "type": "function"
            },
            "contracts.library_erc721.transferability.Transfer.emit.Args": {
                "full_name": "contracts.library_erc721.transferability.Transfer.emit.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id_": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.Transfer.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability.Transfer.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc721.transferability.Transfer.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability.Transfer.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc721.transferability.Transfer.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.Transfer.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc721.transferability._balance": {
                "destination": "contracts.library_erc721.balance._balance",
                "type": "alias"
            },
            "contracts.library_erc721.transferability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc721.transferability._owner": {
                "destination": "contracts.library_erc721.balance._owner",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.getMigrationAddress_": {
                "destination": "contracts.ecosystem.to_migration.getMigrationAddress_",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc721.transferability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.ERC721_approvals": {
                "destination": "contracts.library_erc721.approvals.ERC721_approvals",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.ERC721_enumerability": {
                "destination": "contracts.library_erc721.enumerability.ERC721_enumerability",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.ERC721_transferability": {
                "destination": "contracts.library_erc721.transferability.ERC721_transferability",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc721.transferability_enum.transferFrom_": {
                "decorators": [],
                "pc": 1997,
                "type": "function"
            },
            "contracts.library_erc721.transferability_enum.transferFrom_.Args": {
                "full_name": "contracts.library_erc721.transferability_enum.transferFrom_.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability_enum.transferFrom_.ImplicitArgs": {
                "full_name": "contracts.library_erc721.transferability_enum.transferFrom_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc721.transferability_enum.transferFrom_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc721.transferability_enum.transferFrom_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.assembly.ERC721_enumerability": {
                "destination": "contracts.library_erc721.enumerability.ERC721_enumerability",
                "type": "alias"
            },
            "contracts.set_nft.assembly.ERC721_transferability": {
                "destination": "contracts.library_erc721.transferability.ERC721_transferability",
                "type": "alias"
            },
            "contracts.set_nft.assembly.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.set_nft.assembly.FTSpec": {
                "destination": "contracts.types.FTSpec",
                "type": "alias"
            },
            "contracts.set_nft.assembly.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract": {
                "type": "namespace"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.ASSIGN_ATTRIBUTES_SELECTOR": {
                "type": "const",
                "value": 241234148266286735972459455036565071052203417414182554812306964576507154509
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.Args": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.REMOVE_ATTRIBUTES_SELECTOR": {
                "type": "const",
                "value": 278937378928281644239463934880147367016899543854498320750699116180756988984
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.TOTAL_BALANCE_SELECTOR": {
                "type": "const",
                "value": 1318289492844571964921975173756237255346715241543946033423441704310021517940
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes": {
                "decorators": [],
                "pc": 2632,
                "type": "function"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.Args": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 8
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 10
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 9
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 6
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 11,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.assign_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 9
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes": {
                "decorators": [],
                "pc": 2708,
                "type": "function"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.Args": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.remove_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance": {
                "decorators": [],
                "pc": 2609,
                "type": "function"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.Args": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IAttributesRegistryContract.total_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly.IBriqContract": {
                "type": "namespace"
            },
            "contracts.set_nft.assembly.IBriqContract.Args": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.MATERIALSOF__SELECTOR": {
                "type": "const",
                "value": 819246298854672482771323336657373093450036396498489925587224827698652589908
            },
            "contracts.set_nft.assembly.IBriqContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IBriqContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly.IBriqContract.TRANSFERFT__SELECTOR": {
                "type": "const",
                "value": 467748798287157033343473156731700863397302723516981917332587506210613141932
            },
            "contracts.set_nft.assembly.IBriqContract.TRANSFERONENFT__SELECTOR": {
                "type": "const",
                "value": 418084878523822697063610466069565772378654085310733976517239613160526286668
            },
            "contracts.set_nft.assembly.IBriqContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IBriqContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IBriqContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IBriqContract.materialsOf_": {
                "decorators": [],
                "pc": 2579,
                "type": "function"
            },
            "contracts.set_nft.assembly.IBriqContract.materialsOf_.Args": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.materialsOf_.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.materialsOf_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.materialsOf_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.materialsOf_.Return": {
                "cairo_type": "(materials_len: felt, materials: felt*)",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IBriqContract.materialsOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly.IBriqContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.set_nft.assembly.IBriqContract.transferFT_": {
                "decorators": [],
                "pc": 2535,
                "type": "function"
            },
            "contracts.set_nft.assembly.IBriqContract.transferFT_.Args": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.transferFT_.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.transferFT_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.transferFT_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.transferFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IBriqContract.transferFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly.IBriqContract.transferOneNFT_": {
                "decorators": [],
                "pc": 2557,
                "type": "function"
            },
            "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.Args": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.Args",
                "members": {
                    "briq_token_id": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.IBriqContract.transferOneNFT_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "contracts.set_nft.assembly.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.assembly.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.set_nft.assembly.TokenURIHelpers": {
                "destination": "contracts.set_nft.token_uri.TokenURIHelpers",
                "type": "alias"
            },
            "contracts.set_nft.assembly._attributes_registry_address": {
                "destination": "contracts.ecosystem.to_attributes_registry._attributes_registry_address",
                "type": "alias"
            },
            "contracts.set_nft.assembly._balance": {
                "destination": "contracts.library_erc721.balance._balance",
                "type": "alias"
            },
            "contracts.set_nft.assembly._briq_address": {
                "destination": "contracts.ecosystem.to_briq._briq_address",
                "type": "alias"
            },
            "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero": {
                "decorators": [],
                "pc": 2981,
                "type": "function"
            },
            "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.Args": {
                "full_name": "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._check_briqs_and_attributes_are_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly._create_token_": {
                "decorators": [],
                "pc": 2849,
                "type": "function"
            },
            "contracts.set_nft.assembly._create_token_.Args": {
                "full_name": "contracts.set_nft.assembly._create_token_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id_hint": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly._create_token_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._create_token_.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.set_nft.assembly._create_token_.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._create_token_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.set_nft.assembly._destroy_token": {
                "decorators": [],
                "pc": 2929,
                "type": "function"
            },
            "contracts.set_nft.assembly._destroy_token.Args": {
                "full_name": "contracts.set_nft.assembly._destroy_token.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly._destroy_token.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._destroy_token.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.assembly._destroy_token.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._destroy_token.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly._hashTokenId": {
                "decorators": [],
                "pc": 2825,
                "type": "function"
            },
            "contracts.set_nft.assembly._hashTokenId.Args": {
                "full_name": "contracts.set_nft.assembly._hashTokenId.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id_hint": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.set_nft.assembly._hashTokenId.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._hashTokenId.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.set_nft.assembly._hashTokenId.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._hashTokenId.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.set_nft.assembly._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.set_nft.assembly._owner": {
                "destination": "contracts.library_erc721.balance._owner",
                "type": "alias"
            },
            "contracts.set_nft.assembly._transferFT": {
                "decorators": [],
                "pc": 2739,
                "type": "function"
            },
            "contracts.set_nft.assembly._transferFT.Args": {
                "full_name": "contracts.set_nft.assembly._transferFT.Args",
                "members": {
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 3
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.set_nft.assembly._transferFT.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._transferFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.assembly._transferFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._transferFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly._transferNFT": {
                "decorators": [],
                "pc": 2782,
                "type": "function"
            },
            "contracts.set_nft.assembly._transferNFT.Args": {
                "full_name": "contracts.set_nft.assembly._transferNFT.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.set_nft.assembly._transferNFT.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly._transferNFT.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.assembly._transferNFT.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly._transferNFT.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.set_nft.assembly.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.set_nft.assembly.assemble_": {
                "decorators": [
                    "external"
                ],
                "pc": 3011,
                "type": "function"
            },
            "contracts.set_nft.assembly.assemble_.Args": {
                "full_name": "contracts.set_nft.assembly.assemble_.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 13
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 12
                    },
                    "description": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "description_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 7
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "name": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "name_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 9
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 11
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 10
                    },
                    "token_id_hint": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 14,
                "type": "struct"
            },
            "contracts.set_nft.assembly.assemble_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.assemble_.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.set_nft.assembly.assemble_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.assemble_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.set_nft.assembly.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.set_nft.assembly.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.set_nft.assembly.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.set_nft.assembly.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.set_nft.assembly.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.set_nft.assembly.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.set_nft.assembly.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.set_nft.assembly.disassemble_": {
                "decorators": [
                    "external"
                ],
                "pc": 3150,
                "type": "function"
            },
            "contracts.set_nft.assembly.disassemble_.Args": {
                "full_name": "contracts.set_nft.assembly.disassemble_.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 7
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 3
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "contracts.set_nft.assembly.disassemble_.ImplicitArgs": {
                "full_name": "contracts.set_nft.assembly.disassemble_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.assembly.disassemble_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.set_nft.assembly.disassemble_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.set_nft.assembly.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.set_nft.assembly.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.set_nft.assembly.hash_finalize": {
                "destination": "starkware.cairo.common.hash_state.hash_finalize",
                "type": "alias"
            },
            "contracts.set_nft.assembly.hash_init": {
                "destination": "starkware.cairo.common.hash_state.hash_init",
                "type": "alias"
            },
            "contracts.set_nft.assembly.hash_update": {
                "destination": "starkware.cairo.common.hash_state.hash_update",
                "type": "alias"
            },
            "contracts.set_nft.assembly.hash_update_single": {
                "destination": "starkware.cairo.common.hash_state.hash_update_single",
                "type": "alias"
            },
            "contracts.set_nft.assembly.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.set_nft.assembly.tokenURI_": {
                "destination": "contracts.set_nft.token_uri.tokenURI_",
                "type": "alias"
            },
            "contracts.set_nft.assembly.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.set_nft.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.set_nft.token_uri.TokenURIHelpers": {
                "destination": "contracts.utilities.token_uri.TokenURIHelpers",
                "type": "alias"
            },
            "contracts.set_nft.token_uri.data_uri_start": {
                "pc": 2448,
                "type": "label"
            },
            "contracts.set_nft.token_uri.tokenURI_": {
                "decorators": [
                    "view"
                ],
                "pc": 2452,
                "type": "function"
            },
            "contracts.set_nft.token_uri.tokenURI_.Args": {
                "full_name": "contracts.set_nft.token_uri.tokenURI_.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.set_nft.token_uri.tokenURI_.ImplicitArgs": {
                "full_name": "contracts.set_nft.token_uri.tokenURI_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.set_nft.token_uri.tokenURI_.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.set_nft.token_uri.tokenURI_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.types.BalanceSpec": {
                "full_name": "contracts.types.BalanceSpec",
                "members": {
                    "balance": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.FTSpec": {
                "full_name": "contracts.types.FTSpec",
                "members": {
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.NFTSpec": {
                "full_name": "contracts.types.NFTSpec",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.ShapeItem": {
                "full_name": "contracts.types.ShapeItem",
                "members": {
                    "color_nft_material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_y_z": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 709,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 740,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 805,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 771,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.IERC165.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.utilities.IERC165.IERC1155_ID": {
                "type": "const",
                "value": 3652614694
            },
            "contracts.utilities.IERC165.IERC1155_METADATA_ID": {
                "type": "const",
                "value": 243872796
            },
            "contracts.utilities.IERC165.IERC165_ID": {
                "type": "const",
                "value": 33540519
            },
            "contracts.utilities.IERC165.IERC721_ID": {
                "type": "const",
                "value": 2158778573
            },
            "contracts.utilities.IERC165.IERC721_METADATA_ID": {
                "type": "const",
                "value": 1532892063
            },
            "contracts.utilities.IERC165.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt": {
                "decorators": [],
                "pc": 352,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._check_uint_fits_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 387,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt": {
                "decorators": [],
                "pc": 368,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._uint_to_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._uint_to_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._only": {
                "decorators": [],
                "pc": 574,
                "type": "function"
            },
            "contracts.utilities.authorization._only.Args": {
                "full_name": "contracts.utilities.authorization._only.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._only.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._only.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 592,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.utilities.token_uri.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.utilities.token_uri.StringCodec": {
                "destination": "contracts.vendor.cairopen.string.ASCII.StringCodec",
                "type": "alias"
            },
            "contracts.utilities.token_uri.TokenURIHelpers": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl": {
                "decorators": [],
                "pc": 2283,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Args",
                "members": {
                    "label": {
                        "cairo_type": "codeoffset",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._getUrl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._getUrl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.utilities.token_uri.TokenURIHelpers._onUriChange": {
                "decorators": [],
                "pc": 2262,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.Args",
                "members": {
                    "new_uri": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "new_uri_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers._onUriChange.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number": {
                "decorators": [],
                "pc": 2356,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.Args",
                "members": {
                    "data_in": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "data_out": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "i": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "leading_zero": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "sum": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.add_number.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.Return": {
                "cairo_type": "(sum: felt)",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.add_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 6
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl": {
                "decorators": [],
                "pc": 2335,
                "type": "function"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Args": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.TokenURIHelpers.padl.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.TokenURIHelpers.padl.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI": {
                "type": "namespace"
            },
            "contracts.utilities.token_uri.URI.Args": {
                "full_name": "contracts.utilities.token_uri.URI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.URI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.URI.SELECTOR": {
                "type": "const",
                "value": 1117463774533926613053234597629606061954066182299846485506120526289006522655
            },
            "contracts.utilities.token_uri.URI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.token_uri.URI.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.emit": {
                "decorators": [],
                "pc": 2224,
                "type": "function"
            },
            "contracts.utilities.token_uri.URI.emit.Args": {
                "full_name": "contracts.utilities.token_uri.URI.emit.Args",
                "members": {
                    "_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "_value": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "_value_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.emit.ImplicitArgs": {
                "full_name": "contracts.utilities.token_uri.URI.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.utilities.token_uri.URI.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.token_uri.URI.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 4
            },
            "contracts.utilities.token_uri.URI.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.utilities.token_uri.URI.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.token_uri._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.utilities.token_uri._uint_to_felt": {
                "destination": "contracts.utilities.Uint256_felt_conv._uint_to_felt",
                "type": "alias"
            },
            "contracts.utilities.token_uri.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.token_uri.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.utilities.token_uri.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "contracts.utilities.token_uri.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.utilities.token_uri.split_int": {
                "destination": "starkware.cairo.common.math.split_int",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.String": {
                "destination": "cairopen.string.string.String",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec": {
                "type": "namespace"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.CHAR_SIZE": {
                "type": "const",
                "value": 256
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.LAST_CHAR_MASK": {
                "type": "const",
                "value": 255
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.NUMERICAL_OFFSET": {
                "type": "const",
                "value": 48
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string": {
                "decorators": [],
                "pc": 2214,
                "type": "function"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs": {
                "full_name": "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.Return": {
                "cairo_type": "(str: cairopen.string.string.String)",
                "type": "type_definition"
            },
            "contracts.vendor.cairopen.string.ASCII.StringCodec.felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_assert_char_encoding": {
                "destination": "cairopen.string.libs.conversion.conversion_assert_char_encoding",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_extract_last_char_from_ss": {
                "destination": "cairopen.string.libs.conversion.conversion_extract_last_char_from_ss",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_felt_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_felt_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_arr_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_arr_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.conversion_ss_to_string": {
                "destination": "cairopen.string.libs.conversion.conversion_ss_to_string",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_delete": {
                "destination": "cairopen.string.libs.storage.storage_delete",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_read": {
                "destination": "cairopen.string.libs.storage.storage_read",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write": {
                "destination": "cairopen.string.libs.storage.storage_write",
                "type": "alias"
            },
            "contracts.vendor.cairopen.string.ASCII.storage_write_from_char_arr": {
                "destination": "cairopen.string.libs.storage.storage_write_from_char_arr",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 425,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 535,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 556,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 510,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 529,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 523,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 480,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 485,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 498,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 450,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 455,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 468,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 401,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bitwise.bitwise_and": {
                "decorators": [],
                "pc": 277,
                "type": "function"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Args": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Return": {
                "cairo_type": "(x_and_y: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.bitwise.bitwise_and.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.hash_state.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.HashState": {
                "full_name": "starkware.cairo.common.hash_state.HashState",
                "members": {
                    "current_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "n_words": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.hash_finalize": {
                "decorators": [],
                "pc": 2529,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_finalize.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_finalize.Args",
                "members": {
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_finalize.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_finalize.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_finalize.Return": {
                "cairo_type": "(hash: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_finalize.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.hash_state.hash_init": {
                "decorators": [],
                "pc": 2503,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_init.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_init.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_init.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_init.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_init.Return": {
                "cairo_type": "(hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_init.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.hash_state.hash_update_single": {
                "decorators": [],
                "pc": 2513,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_update_single.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_single.Args",
                "members": {
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    },
                    "item": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_single.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_single.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_single.Return": {
                "cairo_type": "(new_hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_update_single.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 99,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 99,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 85,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 141,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 141,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 8
                        },
                        "pc": 151,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 165,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 177,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 186,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 186,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 186,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 81,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 81,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 90,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal": {
                "decorators": [],
                "pc": 75,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_equal.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 75,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 75,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 70,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 70,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 112,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 112,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int": {
                "decorators": [],
                "pc": 212,
                "type": "function"
            },
            "starkware.cairo.common.math.split_int.Args": {
                "full_name": "starkware.cairo.common.math.split_int.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bound": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_int.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_int.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int.base": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.base",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.bound": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.bound",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.output": {
                "cairo_type": "felt*",
                "full_name": "starkware.cairo.common.math.split_int.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 212,
                        "value": "[cast(fp + (-7), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 197,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 316,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 321,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 0
                        },
                        "pc": 321,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 0
                        },
                        "pc": 321,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 333,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 283,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 283,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 307,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 293,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 341,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "cairo_type": "codeoffset",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 343,
                "type": "label"
            },
            "starkware.cairo.common.squash_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.uint256_check": {
                "decorators": [],
                "pc": 347,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_check.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 237,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 0
                        },
                        "pc": 237,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 2
                        },
                        "pc": 257,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 1
                        },
                        "pc": 239,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 25,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 25,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 1
                        },
                        "pc": 32,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 60,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 60,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 1
                        },
                        "pc": 67,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 37,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 37,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 1
                        },
                        "pc": 40,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 44,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 44,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 1
                        },
                        "pc": 48,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 52,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 52,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 1
                        },
                        "pc": 57,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 25,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 37,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 44,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 52,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 60,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 70,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 75,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 75,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 81,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 99,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 112,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 141,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 186,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 186,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 212,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 237,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 1
                    },
                    "pc": 239,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 2
                    },
                    "pc": 257,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 283,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 321,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 321,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ]
        }
    }
}
